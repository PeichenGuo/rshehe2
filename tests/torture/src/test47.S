// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	addi x28, x0, -1352
	mulh x21, x2, x21
	la x25, test_memory-236
	sll x6, x2, x19
	addi x27, x0, 556
	sw x7, 1016(x25)
	sraiw x10, x1, 28
	mulhu x24, x10, x27
	blt x0, x0, crash_backward
	addi x19, x0, 1699
	addi x22, x0, 1188
	addi x7, x0, -1176
	remuw x30, x23, x10
	addiw x1, x15, -635
	sub x23, x29, x27
	addw x2, x27, x4
	remu x8, x27, x22
	addi x18, x0, -401
	sra x20, x20, x20
	addi x14, x0, -1366
	or x16, x29, x21
	addi x31, x0, 1051
	addi x17, x14, -1556
	remuw x12, x28, x19
	mul x29, x31, x10
	addi x11, x0, -751
	sra x4, x15, x18
	srlw x13, x7, x31
	addi x3, x0, 364
	sll x5, x11, x3
	addi x15, x0, -1357
	divw x9, x18, x15
	and x14, x28, x13
	addi x27, x0, -2007
	la x1, test_memory+1482
	la x29, test_memory+914
	lw x15, -582(x29)
	lhu x28, -544(x1)
	addi x20, x0, -1798
	addi x19, x0, 1
	sll x19, x19, 63
	addi x24, x0, 829
	addi x3, x0, 212
	addw x6, x3, x3
	addi x30, x0, -1351
	addi x22, x0, -258
	addi x25, x0, -816
	addi x31, x0, 1
	remu x5, x19, x19
	addi x26, x0, -249
	addi x11, x0, 463
	rem x2, x24, x26
	addi x21, x0, -1
	mulhsu x7, x20, x22
	remuw x28, x8, x8
	sll x31, x31, 63
	addi x13, x0, -1
	or x12, x27, x25
	addiw x23, x5, 2030
	lui x1, 513721
	addi x3, x0, -1961
	addi x14, x0, -417
	srl x6, x3, x14
	rem x24, x2, x10
	xor x21, x21, x19
	addi x15, x0, -1715
	addi x9, x0, -1484
	addi x5, x15, -618
	bltu x15, x5, crash_forward
	sra x29, x15, x15
	divw x17, x11, x9
	srlw x22, x10, x26
	and x4, x21, x21
	xor x13, x13, x31
	sub x18, x30, x30
	addi x20, x0, -223
	or x8, x16, x19
	bge x8, x4, crash_forward
	addi x7, x0, -438
	addi x29, x0, 227
	andi x6, x16, 432
	addi x12, x0, -1266
	and x18, x23, x23
	la x4, test_memory-73
	addi x14, x0, 1526
	addi x5, x0, 713
	and x2, x20, x7
	divu x17, x29, x14
	mulw x27, x12, x12
	addi x22, x0, 1875
	lw x24, 909(x4)
	addi x9, x0, 1870
	addi x3, x0, -1749
	addi x20, x0, -512
	and x16, x0, x13
	addi x30, x0, -1945
	add x12, x10, x27
	divuw x23, x22, x9
	la x25, test_memory-270
	la x29, test_memory+1253
	mulh x17, x10, x31
	addi x4, x0, -948
	la x18, test_memory+486
	lwu x24, -1017(x29)
	remuw x14, x4, x4
	lw x6, 346(x25)
	divw x15, x22, x13
	addi x1, x0, 1
	addi x7, x0, -1581
	sll x2, x7, x7
	sh x24, -412(x18)
	or x10, x6, x31
	addi x28, x0, 1223
	addi x24, x0, 813
	remuw x11, x5, x30
	addi x15, x0, 1987
	addi x22, x0, -1158
	mulhu x9, x18, x24
	sll x27, x20, x20
	addi x10, x0, -1834
	divuw x6, x24, x24
	sll x1, x1, 63
	mulhu x13, x8, x8
	addi x14, x0, -328
	addi x12, x0, 1
	subw x7, x15, x10
	addi x21, x0, -1
	sub x29, x22, x14
	addi x24, x0, 1753
	sll x12, x12, 63
	addi x23, x0, 1
	divu x8, x3, x28
	sll x23, x23, 63
	divu x20, x24, x24
	slt x4, x6, x6
	la x9, test_memory+1912
	addiw x29, x14, 1749
	addi x16, x0, -1
	xor x21, x21, x1
	addi x17, x0, -1
	sltu x20, x20, x20
	and x19, x2, x21
	addi x4, x0, 1
	remu x3, x19, x2
	addi x15, x0, -2022
	or x26, x19, x1
	lwu x5, -896(x9)
	xor x16, x16, x23
	addi x8, x0, 1549
	bge x26, x19, crash_forward
	la x27, test_memory+2378
	mul x29, x26, x26
	slliw x7, x8, 4
	addi x10, x0, 232
	la x30, test_memory+2566
	la x26, test_memory+2214
	ld x13, -1602(x27)
	sd x17, -1790(x30)
	add x9, x10, x10
	mulhu x11, x8, x10
	sll x4, x4, 63
	and x31, x1, x16
	addi x22, x0, -1
	addi x14, x0, -1118
	or x2, x13, x23
	xor x17, x17, x12
	sb x5, -1354(x26)
	xor x5, x18, x18
	bge x2, x31, crash_forward
	and x18, x5, x17
	la x21, test_memory-152
	lw x20, 228(x21)
	addi x27, x0, -424
	addi x19, x0, 1843
	or x25, x11, x12
	xor x22, x22, x4
	addi x7, x0, 1709
	xor x9, x27, x27
	remuw x6, x15, x14
	and x24, x2, x22
	addi x1, x0, -1268
	addi x13, x0, -2034
	sllw x3, x19, x1
	or x28, x28, x4
	slt x29, x7, x13
	mulw x28, x16, x16
	addi x3, x0, -944
	la x20, test_memory+2280
	addi x5, x0, 1
	addi x30, x0, -700
	add x31, x6, x3
	lh x26, -1958(x20)
	remw x17, x2, x2
	divw x1, x30, x30
	sll x5, x5, 63
	addi x26, x0, 1926
	sllw x24, x27, x21
	addi x13, x0, 1232
	mulh x16, x13, x13
	sltiu x10, x22, 1719
	addi x19, x0, -1
	mulhsu x23, x26, x26
	la x11, test_memory-1138
	sraw x2, x3, x30
	addi x7, x0, 1000
	la x21, test_memory+1565
	addi x31, x0, 1
	sb x8, -1444(x21)
	xor x19, x19, x5
	la x25, test_memory-12
	or x4, x7, x12
	la x22, test_memory-1177
	addi x17, x0, 619
	slt x15, x17, x17
	addi x27, x0, -1836
	addi x14, x0, 577
	and x12, x30, x19
	sd x0, 1393(x22)
	lw x6, 232(x25)
	la x2, test_memory+1976
	srli x22, x13, 25
	lh x29, 1262(x11)
	addi x4, x0, 1
	sltu x9, x27, x14
	sll x4, x4, 63
	addi x17, x0, -1
	sll x31, x31, 63
	xor x17, x17, x4
	la x25, test_memory+1328
	addi x24, x0, 958
	sraw x23, x0, x0
	addi x28, x0, -1
	divuw x8, x7, x7
	lh x10, -1768(x2)
	or x18, x7, x5
	xor x28, x28, x31
	sraw x30, x24, x24
	blt x12, x18, crash_backward
	and x20, x17, x28
	or x1, x23, x31
	blt x20, x1, crash_forward
	remu x6, x2, x2
	addi x19, x0, -353
	addi x24, x0, 788
	sllw x28, x24, x24
	sub x30, x18, x18
	bne x3, x3, crash_backward
	sllw x18, x19, x19
	addi x20, x0, -1619
	sb x4, -1119(x25)
	addi x23, x0, 935
	divuw x7, x23, x23
	la x16, test_memory+840
	and x15, x14, x17
	la x8, test_memory+39
	srl x5, x11, x11
	addi x12, x0, 190
	sllw x11, x29, x14
	addi x29, x0, 1843
	mulhsu x14, x20, x20
	sw x13, -152(x16)
	or x13, x2, x4
	mulhu x31, x27, x18
	bge x13, x15, crash_forward
	lw x9, 621(x8)
	srl x22, x12, x29
	divuw x16, x6, x7
	sll x22, x20, x26
	addi x31, x0, 1355
	la x27, test_memory+1635
	addi x18, x0, -1257
	addi x29, x0, -1622
	addi x17, x0, -615
	mulh x16, x20, x8
	srl x25, x12, x6
	la x9, test_memory+1223
	addi x10, x0, -1432
	ld x6, -927(x9)
	la x22, test_memory-1609
	sraw x5, x31, x31
	la x12, test_memory+616
	rem x13, x0, x0
	addi x23, x0, 1
	sb x13, -371(x12)
	addi x24, x0, 1
	addi x26, x0, -397
	mulhsu x11, x26, x26
	remuw x30, x18, x17
	mulh x13, x3, x31
	lwu x3, -1391(x27)
	sll x23, x23, 63
	addi x31, x0, 1655
	srl x15, x29, x10
	addi x21, x0, -818
	addi x20, x0, 1855
	remw x14, x21, x21
	divuw x2, x20, x20
	sd x0, 1905(x22)
	addi x5, x0, -1702
	la x25, test_memory+2036
	remu x6, x31, x5
	la x9, test_memory-1184
	sd x7, 1688(x9)
	sll x24, x24, 63
	addi x19, x0, -1
	addi x8, x0, -1
	lhu x16, -1528(x25)
	xor x8, x8, x24
	and x1, x16, x8
	xor x19, x19, x23
	or x4, x9, x24
	bgeu x1, x4, crash_forward
	and x7, x1, x19
	or x28, x7, x23
	bge x28, x7, crash_forward
	xor x16, x8, x0
	addi x23, x0, 1
	remw x28, x10, x10
	addi x18, x0, 354
	add x4, x18, x18
	srl x13, x3, x3
	addi x8, x0, -1209
	xor x5, x4, x4
	addi x14, x0, -475
	sll x23, x23, 63
	la x17, test_memory+4
	subw x30, x0, x0
	addi x24, x0, 0
	addi x22, x0, 1610
	sra x9, x8, x22
	sw x1, 700(x17)
	xor x31, x29, x26
	la x28, test_memory-182
	addi x29, x0, -1
	remw x4, x10, x10
	addi x27, x0, 0
	blt x27, x27, crash_forward
	addi x12, x0, 360
	remw x21, x1, x1
	addi x18, x0, -1070
	addi x30, x0, 228
	addi x4, x0, 596
	subw x17, x8, x8
	addi x1, x0, -1131
	addi x26, x0, -1282
	srliw x13, x1, 15
	bltu x24, x27, crash_backward
	xor x29, x29, x23
	addi x19, x8, -6
	remw x31, x18, x30
	and x11, x29, x29
	addi x7, x0, 0
	or x20, x11, x23
	bltu x20, x11, crash_forward
	remu x25, x22, x26
	addi x6, x0, 665
	lw x16, 414(x28)
	addi x17, x0, -1605
	addi x5, x0, 0
	bne x7, x5, crash_forward
	addi x31, x0, -1335
	addi x9, x0, 57
	rem x21, x4, x9
	sub x3, x1, x6
	addi x30, x0, 231
	sraw x18, x31, x30
	addi x2, x0, 1655
	remu x15, x12, x2
	addi x5, x0, 57
	srlw x20, x15, x15
	mul x23, x17, x7
	divu x16, x29, x27
	addw x21, x19, x0
	sub x10, x14, x14
	addi x24, x17, -1922
	la x10, test_memory+237
	bltu x17, x24, crash_forward
	slt x2, x1, x1
	addi x1, x0, -114
	addw x18, x22, x0
	addi x7, x3, 0
	addi x27, x0, -1855
	srl x14, x1, x1
	sraw x28, x8, x8
	addi x22, x7, 0
	sh x8, -207(x10)
	sra x4, x16, x19
	addi x30, x0, -816
	remuw x12, x15, x2
	addi x11, x0, 0
	la x13, test_memory+610
	addi x26, x0, -994
	mulh x6, x5, x27
	addi x15, x0, -612
	blt x7, x22, crash_backward
	srl x23, x22, x27
	addi x23, x5, 0
	or x12, x9, x9
	addi x2, x0, 0
	lw x8, -190(x13)
	addi x27, x0, -2025
	mulh x5, x3, x17
	srl x3, x15, x15
	xor x1, x27, x27
	addi x29, x0, -1759
	addi x24, x0, 0
	sub x31, x26, x29
	addi x22, x23, 0
	addi x4, x0, 1821
	remuw x21, x24, x0
	addi x28, x0, 1585
	addi x20, x0, 384
	addi x19, x0, -1845
	sra x16, x30, x20
	addi x18, x0, -826
	addw x6, x18, x18
	addi x14, x4, 1376
	addi x25, x0, 0
	addi x7, x0, -680
	remu x9, x19, x19
	and x17, x28, x7
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x3f62709bb029fdea
reg_x1_init:	.dword 0xffffffffffffffff
reg_x2_init:	.dword 0x6e7dfc1d50b9688f
reg_x3_init:	.dword 0x8b2c6031f791d7fa
reg_x4_init:	.dword 0xffffffffffff8002
reg_x5_init:	.dword 0xb0242051abe8d741
reg_x6_init:	.dword 0x19493df3b36a1ebf
reg_x7_init:	.dword 0x0000000000000000
reg_x8_init:	.dword 0x894125d35d19ff38
reg_x9_init:	.dword 0xffffffff80000003
reg_x10_init:	.dword 0xc3bfe5dffb5fc7a1
reg_x11_init:	.dword 0xffffffffffff8008
reg_x12_init:	.dword 0x0000000000000008
reg_x13_init:	.dword 0x82c1d0c37985e67b
reg_x14_init:	.dword 0xfffffffffffffffe
reg_x15_init:	.dword 0x4545e106d6a2bae8
reg_x16_init:	.dword 0xbc7f7025d385ffab
reg_x17_init:	.dword 0x6c4a4fba1ed875ba
reg_x18_init:	.dword 0xffffffff80000007
reg_x19_init:	.dword 0x69d4a067a05feda6
reg_x20_init:	.dword 0xb60e0bc0c75b6d6f
reg_x21_init:	.dword 0x0800000000000004
reg_x22_init:	.dword 0xfc81c0f98216d5fe
reg_x23_init:	.dword 0x6fa8051330183916
reg_x24_init:	.dword 0xffffffff80000007
reg_x25_init:	.dword 0x0000000000000002
reg_x26_init:	.dword 0x0000000000000006
reg_x27_init:	.dword 0xffffffffffff8005
reg_x28_init:	.dword 0xffffffffffffff85
reg_x29_init:	.dword 0x0000000000000000
reg_x30_init:	.dword 0x818a7330d11df9e7
reg_x31_init:	.dword 0xffffffffffffffff

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x13a12228137df1f3
reg_x1_output:	.dword 0x7b93cadb4f3972ea
reg_x2_output:	.dword 0x415fff2d53baa99c
reg_x3_output:	.dword 0x5fa74b50917ffb67
reg_x4_output:	.dword 0x1372602bfce71e9f
reg_x5_output:	.dword 0x5e5a6222391d0c56
reg_x6_output:	.dword 0x9f7a6821b87616ba
reg_x7_output:	.dword 0xae3ed263404aa8e7
reg_x8_output:	.dword 0xae7f7fb30e3c4360
reg_x9_output:	.dword 0xc6e0794633f9a08b
reg_x10_output:	.dword 0xff9ac0609c1a9ee1
reg_x11_output:	.dword 0x392d4e65edd52ab7
reg_x12_output:	.dword 0x4a225efabf0ef7c8
reg_x13_output:	.dword 0xc0ec956326fdfae7
reg_x14_output:	.dword 0xb6fcc95262374e83
reg_x15_output:	.dword 0xfa7f14b0ef9410e5
reg_x16_output:	.dword 0x8e1b6b3251fae949
reg_x17_output:	.dword 0xc16b65ad2ad6c94a
reg_x18_output:	.dword 0x90a84e9067564238
reg_x19_output:	.dword 0x98d6b1f0e616f245
reg_x20_output:	.dword 0x99710aff3f7533bd
reg_x21_output:	.dword 0x003b71e7a22ee89a
reg_x22_output:	.dword 0x06ccb867c0990737
reg_x23_output:	.dword 0x71b500a39ff100ee
reg_x24_output:	.dword 0x7ae1d8fa0cfe49de
reg_x25_output:	.dword 0x455018eda03cc141
reg_x26_output:	.dword 0x340c6e5e81508be1
reg_x27_output:	.dword 0x733d8f9dc46faeba
reg_x28_output:	.dword 0x9e73ae2f24786dce
reg_x29_output:	.dword 0x5ec5df2ccbeeb3aa
reg_x30_output:	.dword 0x7ce209a95472a037
reg_x31_output:	.dword 0x7ab158878bd161ca

// Memory Blocks
	.align 8
test_memory:
	.dword 0xc8e97ca035a4b991, 0xcec20d266e8894c7
	.dword 0x0c8957b2520f065f, 0x9a19c65c0eee3900
	.dword 0xc929f9c02a08b78f, 0x81379deea4c43a8e
	.dword 0x84162c991b261323, 0xbcde0beb4484e084
	.dword 0x3ee118f7b9be8b13, 0x82eb7db1b9c71877
	.dword 0xa5a305b07082de71, 0xa03cca56969d7640
	.dword 0xb4e656253df1a8ce, 0xc452182b8b7eec00
	.dword 0x58c17bfdab7b03dc, 0xf9e4079916b47e64
	.dword 0xd531d018740a1f54, 0xec20372f78377929
	.dword 0x209686bcb9b5f319, 0xf42174fbbb9fe7e2
	.dword 0xab6a331482c86f9d, 0x1ea9311fbd7b56f9
	.dword 0xff4c8ddc7f5dd083, 0xdc65059fc06020f3
	.dword 0xc2557354b8d3f586, 0x686467796091cbf7
	.dword 0xcdc54c7ccd5be598, 0xfe0fd4f82f4f3b90
	.dword 0x67b657842a7de04e, 0x2b341547b12bbab1
	.dword 0x41b583786b82a17a, 0x28c95d4be16021f9
	.dword 0x8960d3428ababb19, 0x87476daf37119e38
	.dword 0x37947bd710c7296f, 0x4ed4fe37bd5fdb32
	.dword 0x6d8f31a759948570, 0x39b20a6263e496a2
	.dword 0x5909595785ec7962, 0xfd21d32acf6adf81
	.dword 0xffc20fb7c8975bbf, 0xd412aa2bb2448587
	.dword 0xe3c03ced9942145f, 0x2c0ed9e8e5087cf2
	.dword 0x8ab526f283faafd6, 0x81e33f69f3ed3a85
	.dword 0x27d1373ffc58451b, 0x0d1d6909b69e4bd3
	.dword 0x7f32e7c8e5891169, 0xc94c4e8e709cafbd
	.dword 0x50230b289ecbee69, 0x070bf6784b2db338
	.dword 0x56d0e41df4888690, 0xd6959c9d1fd45653
	.dword 0x2a73c0359b8bebc6, 0x07132df52f8d7d78
	.dword 0xb8df09c9fc257448, 0xea8e2db1b7c772f1
	.dword 0xeff1052b583a01ce, 0xab3f57934e917cae
	.dword 0xc713ad1b702216ef, 0x7585937884088a44
	.dword 0x828a627f08895ec4, 0x8f200e39b3d23f39
	.dword 0xdebe63514dcc8acc, 0x41b08bb3f6c7dd7e
	.dword 0x2e673cdb61bcab0f, 0x314846254706d43c
	.dword 0x2a8bad21257d6485, 0xd112eeb9afb4f6d3
	.dword 0xc22aa79deca5a9b7, 0x7d58a3649a22a01e
	.dword 0x182371337f20d9a6, 0xbc48edf343d545fc
	.dword 0xbbef075c0ec868ec, 0x038e205d38a9410c
	.dword 0x242c46a45a8c7921, 0x70c9a25d69e1ccb7
	.dword 0x5c2384599584027f, 0x4c0f044382ea8372
	.dword 0x767d8f8522a373c9, 0x267ceb0a4efddb44
	.dword 0xaab54d144862ec67, 0x817029a604186686
	.dword 0x778a6358888b74d5, 0x45be9b9fbfd8dce9
	.dword 0xde2ea8b7c9f4d93e, 0xe32c94e35e6930bd
	.dword 0xdf4f499b62740a64, 0xc028fad6828d3470
	.dword 0x1fb5d9a7d8d428c2, 0x0e095aaf5cb79454
	.dword 0xbd4cc435d7b29df3, 0x0fc090feb5ce28a4
	.dword 0x5a15cffbd4b8e854, 0x2d9fd6907552e3c8
	.dword 0xa058aa0ada34fce8, 0xa95b46774a36e0d8
	.dword 0x9d3aabfe45bb637c, 0x978831630df1565e
	.dword 0x5450516f2b8c710b, 0xb05cd236b2cc715f
	.dword 0xa2cc10ac06284463, 0x25de37d81cf65c9c
	.dword 0xa2f58aa9f2136907, 0xa3227846ba04f815
	.dword 0x2bcf463899884457, 0xe41a80f1587f04ce
	.dword 0x24806a7930efb0ee, 0x88b8184500e5c8d4
	.dword 0x427b2c8c2dbd6c4b, 0x4679e486ffe66f82
	.dword 0x73afe48c4bf33ab2, 0xe1b08be40e0aaa00
	.dword 0xe6a7fdbebd57e554, 0x316d41c570b4540c
	.dword 0x086336091e9d76ad, 0x3f3b5566faa820fc
	.dword 0x4e84e0a0cc84592d, 0x8bcb95ab24279503
	.dword 0x9306200713bf3c1a, 0xecd19e29bbdaceb3
	.dword 0xb07d4b354435e2b4, 0xf3c0618c66cee4c2
	.dword 0xf259f21419834199, 0x8a148519bed5dc10
	.dword 0x7e783531016d8e6b, 0x73b0619017e179e8

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
