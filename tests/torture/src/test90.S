// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	addi x29, x0, -648
	mulh x2, x26, x28
	sra x3, x28, x22
	mulh x26, x17, x17
	addi x13, x0, -1605
	addi x12, x0, -1428
	la x17, test_memory-63
	addi x8, x0, -1414
	sd x20, 1063(x17)
	bne x28, x28, crash_forward
	addi x18, x0, 0
	addi x1, x0, 434
	addi x15, x0, 1952
	la x23, test_memory+2020
	subw x5, x21, x29
	addi x10, x12, -2035
	or x11, x15, x15
	addi x28, x0, 0
	addi x30, x0, 1381
	remuw x24, x29, x13
	addi x4, x0, 1445
	addi x14, x0, 1974
	addi x19, x0, -990
	addi x31, x1, 1451
	addi x29, x0, -723
	divuw x16, x8, x4
	sra x24, x17, x17
	remu x27, x30, x30
	addi x15, x0, -1615
	la x13, test_memory+1748
	sd x18, -1428(x23)
	addi x16, x0, -1510
	addi x3, x0, 1
	beq x12, x10, crash_backward
	addi x20, x0, -635
	addi x25, x0, 577
	sll x24, x16, x16
	bne x18, x28, crash_backward
	addi x6, x0, 883
	sltu x9, x25, x25
	addi x4, x7, 0
	bgeu x1, x31, crash_forward
	remuw x7, x19, x20
	sll x3, x3, 63
	addi x25, x0, 1
	sraw x21, x14, x14
	la x20, test_memory-1192
	addi x8, x4, 0
	addi x31, x0, 638
	addi x2, x0, -1
	and x22, x6, x6
	addi x21, x0, -1981
	addi x28, x0, 16
	addi x10, x31, 0
	sll x25, x25, 63
	addi x9, x0, 1008
	sw x5, 1392(x20)
	addi x27, x0, 1986
	addi x7, x0, -1
	la x24, test_memory+2521
	lhu x16, -1859(x24)
	xor x7, x7, x25
	mul x30, x27, x27
	xor x2, x2, x3
	add x24, x23, x15
	rem x1, x28, x9
	addi x12, x10, 0
	div x23, x29, x29
	slti x8, x4, 766
	mul x4, x5, x20
	lbu x5, -1479(x13)
	sub x11, x29, x15
	addi x16, x0, 39
	sltiu x6, x12, 866
	and x19, x19, x7
	or x18, x13, x25
	sra x20, x16, x16
	rem x14, x31, x21
	bne x10, x12, crash_forward
	and x26, x4, x2
	or x17, x0, x3
	div x29, x9, x9
	addi x16, x0, 640
	addi x22, x0, 502
	addw x20, x2, x22
	addi x13, x0, 1
	la x12, test_memory-246
	sraw x1, x24, x20
	sraw x24, x1, x10
	sll x13, x13, 63
	addi x6, x0, -48
	addi x11, x0, 1137
	ld x8, 590(x12)
	addi x5, x0, 507
	blt x0, x0, crash_backward
	addi x4, x0, 327
	la x27, test_memory-967
	beq x19, x18, crash_forward
	xor x21, x6, x11
	remuw x10, x16, x22
	addi x23, x0, -959
	remu x9, x23, x23
	addi x31, x0, -1
	lbu x28, 1981(x27)
	xor x31, x31, x13
	and x15, x4, x31
	or x14, x15, x13
	sra x30, x5, x4
	addi x1, x0, -873
	addi x30, x0, 1
	sll x30, x30, 63
	la x20, test_memory-1096
	addi x3, x0, -1
	ld x10, 1720(x20)
	slt x24, x1, x1
	xor x3, x3, x30
	and x11, x30, x3
	or x8, x11, x30
	addi x12, x0, 1725
	addi x5, x0, -193
	addi x27, x0, 1760
	addi x24, x0, -1674
	sub x23, x1, x18
	beq x11, x8, crash_backward
	addi x19, x0, 518
	addi x9, x27, 442
	addi x6, x0, 1128
	addi x10, x0, 539
	addi x21, x0, 1745
	or x15, x16, x16
	la x26, test_memory-1745
	sb x30, 2021(x26)
	addi x16, x0, -332
	rem x18, x19, x6
	subw x7, x5, x21
	div x14, x17, x17
	addi x28, x0, 0
	addi x22, x0, 1688
	addi x2, x0, 0
	sub x31, x24, x10
	mulh x4, x28, x28
	addi x17, x0, -1824
	addi x25, x22, 502
	divuw x20, x16, x17
	bgeu x22, x25, crash_backward
	addi x2, x21, 0
	addi x10, x0, -1238
	la x4, test_memory-1424
	slli x31, x14, 3
	addi x7, x0, 1
	srlw x29, x12, x12
	addi x30, x0, 346
	sll x7, x7, 63
	addi x21, x0, -117
	addi x17, x0, -98
	addi x20, x2, 0
	addi x12, x0, 1670
	addi x19, x0, 1516
	addi x6, x0, -1
	mul x14, x16, x16
	sub x8, x8, x8
	sub x15, x30, x30
	addi x13, x10, -1092
	remw x24, x2, x6
	and x26, x19, x19
	la x9, test_memory-517
	mul x29, x21, x21
	divuw x31, x12, x12
	addi x22, x0, 1
	xor x6, x6, x7
	divuw x28, x12, x12
	sltu x1, x4, x4
	addi x31, x0, -1162
	sra x26, x6, x6
	addw x21, x0, x25
	mul x14, x6, x6
	addi x30, x0, 1074
	sll x22, x22, 63
	addi x28, x0, 1
	addi x27, x0, -199
	addi x23, x0, -1
	xor x23, x23, x22
	mulw x25, x17, x27
	rem x2, x22, x22
	slliw x26, x6, 17
	addi x24, x0, 1521
	and x16, x13, x23
	sb x10, 803(x9)
	sra x29, x31, x24
	lbu x11, 1710(x4)
	or x5, x16, x22
	blt x16, x5, crash_backward
	sll x28, x28, 63
	addi x15, x0, -1
	addi x1, x0, 1537
	xor x15, x15, x28
	and x8, x9, x15
	or x12, x8, x28
	and x18, x31, x6
	or x24, x20, x20
	addi x26, x0, -8
	or x3, x18, x7
	addi x25, x0, -477
	addi x22, x0, 1870
	addi x17, x0, 485
	addw x28, x26, x26
	addi x20, x0, 1
	mulh x19, x30, x1
	or x5, x22, x17
	sll x20, x20, 63
	sll x10, x25, x25
	srli x24, x2, 16
	addi x31, x0, -1789
	addi x24, x0, 1058
	mul x27, x9, x9
	addi x8, x0, -1
	addi x9, x0, -296
	or x23, x31, x31
	addi x17, x0, -385
	xor x30, x13, x12
	addi x25, x0, -156
	subw x16, x9, x9
	addi x4, x0, -1963
	addi x1, x0, 301
	addi x12, x0, -1610
	slti x28, x28, -1323
	bltu x14, x14, crash_backward
	xor x8, x8, x20
	div x22, x24, x17
	addi x2, x0, 0
	addi x21, x0, 1056
	and x14, x5, x8
	addi x16, x0, 1469
	addi x23, x0, 715
	remuw x26, x25, x25
	mulh x15, x4, x4
	addi x9, x0, -1580
	addi x28, x8, 0
	addi x31, x28, 0
	addi x13, x0, 0
	or x11, x20, x20
	addw x29, x12, x21
	mul x19, x9, x9
	sraw x27, x16, x23
	bne x2, x13, crash_backward
	addi x10, x0, 931
	blt x28, x31, crash_backward
	sra x5, x1, x10
	mulw x7, x13, x20
	la x10, test_memory-455
	divw x6, x10, x9
	addi x22, x0, -1824
	addi x28, x0, 865
	addi x21, x0, 1718
	sh x19, 833(x10)
	addi x23, x0, -319
	or x13, x16, x20
	addi x11, x0, -597
	slli x26, x8, 19
	sltu x27, x9, x4
	addi x12, x0, 1
	addi x30, x0, 817
	sll x12, x12, 63
	addi x3, x21, 563
	addi x17, x28, 62
	subw x9, x30, x30
	addi x20, x0, -1
	addi x2, x0, -507
	xor x20, x20, x12
	remuw x10, x3, x14
	addi x30, x0, -13
	bltu x3, x21, crash_backward
	div x5, x11, x11
	addi x4, x0, 429
	addi x7, x0, 611
	sltu x25, x22, x4
	remw x10, x30, x30
	and x29, x28, x20
	bltu x17, x28, crash_backward
	remuw x27, x18, x18
	addi x6, x0, 1
	sraw x19, x7, x7
	sll x6, x6, 63
	addi x24, x0, -1
	and x3, x11, x11
	la x15, test_memory+427
	xor x24, x24, x6
	addi x10, x0, -1878
	and x1, x13, x24
	sltu x28, x31, x28
	div x3, x24, x0
	divw x14, x23, x2
	or x13, x1, x6
	sra x21, x23, x27
	addi x7, x0, -1671
	sra x9, x29, x29
	xor x21, x28, x14
	addi x5, x0, 1
	mulhsu x2, x1, x28
	addi x11, x7, -841
	addi x3, x27, 0
	blt x1, x13, crash_backward
	sra x17, x23, x0
	sll x5, x5, 63
	srli x28, x29, 8
	addi x14, x3, 0
	or x8, x23, x12
	bgeu x29, x8, crash_backward
	addi x22, x0, -1
	la x8, test_memory-386
	la x2, test_memory+321
	xor x22, x22, x5
	addi x24, x0, -1714
	and x19, x21, x22
	div x1, x25, x25
	mulh x14, x19, x19
	addi x29, x0, -96
	or x25, x29, x5
	addi x9, x18, -589
	addi x12, x0, -316
	mulhsu x31, x23, x18
	addi x28, x0, -198
	divuw x26, x29, x16
	lhu x20, 914(x8)
	addw x6, x24, x29
	slli x4, x13, 28
	blt x19, x25, crash_backward
	addi x3, x12, -1199
	lw x21, -149(x2)
	bgeu x3, x12, crash_forward
	mulh x23, x27, x27
	addi x17, x0, 1459
	addi x30, x0, -1716
	sra x27, x10, x30
	sltu x13, x28, x17
	la x18, test_memory-638
	sw x23, 1254(x18)
	lbu x16, 190(x15)
	sltu x5, x15, x15
	addi x8, x0, 289
	addi x23, x0, 690
	addi x31, x0, -1991
	addi x24, x0, -1502
	addi x22, x0, 509
	addi x14, x0, 1
	addi x16, x0, -1288
	addi x21, x0, -804
	addi x4, x0, 88
	sltu x17, x22, x20
	addi x9, x0, -1805
	sllw x11, x21, x21
	divuw x7, x31, x31
	sll x14, x14, 63
	sub x10, x10, x10
	divuw x13, x23, x23
	sra x30, x8, x16
	mul x15, x24, x9
	addi x25, x0, 1174
	addi x12, x0, 797
	addi x8, x10, 966
	remw x29, x21, x25
	sra x26, x15, x15
	addi x1, x0, 1028
	divuw x19, x1, x1
	addi x18, x0, 1815
	mul x13, x16, x16
	addi x9, x0, -2040
	addi x15, x0, 710
	sra x23, x21, x0
	remw x3, x22, x4
	addi x16, x0, -168
	addi x20, x0, -1
	xor x20, x20, x14
	and x2, x31, x20
	la x25, test_memory+1560
	addi x31, x0, 1
	addi x21, x0, 1
	sllw x30, x15, x15
	mul x22, x10, x10
	mulw x28, x12, x18
	addi x10, x0, -31
	remw x3, x13, x13
	sll x31, x31, 63
	or x27, x8, x14
	divu x4, x15, x15
	and x24, x16, x16
	remw x6, x28, x28
	subw x18, x15, x15
	addw x17, x9, x10
	sll x21, x21, 63
	addi x11, x0, -1
	addi x18, x12, 0
	addi x4, x0, -1556
	lbu x19, -671(x25)
	addi x16, x0, -1299
	addi x28, x18, 0
	xor x11, x11, x31
	srlw x1, x17, x17
	mulw x6, x4, x16
	slli x24, x5, 26
	bge x27, x2, crash_backward
	la x3, test_memory-146
	subw x26, x2, x2
	xor x23, x0, x0
	addi x27, x15, -1548
	la x19, test_memory+707
	sb x11, 420(x3)
	and x5, x4, x11
	bltu x18, x28, crash_backward
	addi x8, x0, -1
	addi x15, x0, 1
	or x7, x27, x31
	lhu x2, 233(x19)
	xor x8, x8, x21
	sll x15, x15, 63
	addi x22, x0, -1
	xor x22, x22, x15
	and x29, x23, x8
	and x30, x0, x22
	or x13, x29, x21
	or x12, x21, x15
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x0000000000000000
reg_x1_init:	.dword 0xac827f84402656ee
reg_x2_init:	.dword 0x2b2a24d29732a49f
reg_x3_init:	.dword 0x7e3533e845120daa
reg_x4_init:	.dword 0xdeecda7914858c00
reg_x5_init:	.dword 0xe129fc3db2631214
reg_x6_init:	.dword 0x074bbc7f43ae65ca
reg_x7_init:	.dword 0xffffffffffff8002
reg_x8_init:	.dword 0xc707b89d23168196
reg_x9_init:	.dword 0x815c97b4ed961076
reg_x10_init:	.dword 0x6346db0a35d60b2c
reg_x11_init:	.dword 0x8c0c1f4a9a9cb950
reg_x12_init:	.dword 0xffffffffffff8001
reg_x13_init:	.dword 0xd588a0ad170c1a81
reg_x14_init:	.dword 0x0800000000000008
reg_x15_init:	.dword 0xfffffffffffffffd
reg_x16_init:	.dword 0xffffffffffffff83
reg_x17_init:	.dword 0x8d73e10defa78cf8
reg_x18_init:	.dword 0xc127aa10d8fed344
reg_x19_init:	.dword 0xffffffffffffff80
reg_x20_init:	.dword 0x435b8a2566087772
reg_x21_init:	.dword 0x9bb4764fcc6f1bc0
reg_x22_init:	.dword 0xffffffffffff8009
reg_x23_init:	.dword 0xbff1c4588e9510d1
reg_x24_init:	.dword 0xffffffffffff8002
reg_x25_init:	.dword 0x0800000000000000
reg_x26_init:	.dword 0xffffffffffffff84
reg_x27_init:	.dword 0x6833ee4d774ae7e3
reg_x28_init:	.dword 0x0000000000000000
reg_x29_init:	.dword 0x0000000000000000
reg_x30_init:	.dword 0x710a64602c902100
reg_x31_init:	.dword 0xffffffffffffffff

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x6b1938942665e1cc
reg_x1_output:	.dword 0x00159ab81ea255d0
reg_x2_output:	.dword 0x9b454e9e9e8df8a7
reg_x3_output:	.dword 0x7627df25422a2ccd
reg_x4_output:	.dword 0xd7ac781c719616c2
reg_x5_output:	.dword 0xe54c8649999b2674
reg_x6_output:	.dword 0xe4c30568d54b6a26
reg_x7_output:	.dword 0x35b3b384912ae499
reg_x8_output:	.dword 0xdf8ca6309cdd1c3e
reg_x9_output:	.dword 0x4a0ca563b8a90fb0
reg_x10_output:	.dword 0x04f70900fa413bda
reg_x11_output:	.dword 0x356cf15698877a6b
reg_x12_output:	.dword 0xc9866019dd6fc37d
reg_x13_output:	.dword 0x8dc346a638ce5ba7
reg_x14_output:	.dword 0xd184df87de513fd4
reg_x15_output:	.dword 0x69beeca3a7ffc288
reg_x16_output:	.dword 0x036388735012da83
reg_x17_output:	.dword 0x01f470250a7ba8e2
reg_x18_output:	.dword 0xaa0bd5b3af69cd27
reg_x19_output:	.dword 0xbc9b342c682847da
reg_x20_output:	.dword 0x80c71daa9d6c8098
reg_x21_output:	.dword 0xd8c6d9e7943892cc
reg_x22_output:	.dword 0xb759bd4f1647dc6e
reg_x23_output:	.dword 0x64bab3e15424fc6f
reg_x24_output:	.dword 0x003d6085627b8ac6
reg_x25_output:	.dword 0x8a24b86de588ea37
reg_x26_output:	.dword 0x9dc6fbb63ab03446
reg_x27_output:	.dword 0x15f0a76a60d979fa
reg_x28_output:	.dword 0x0aba4a9ad5e6f85d
reg_x29_output:	.dword 0xff3b57274f107dd6
reg_x30_output:	.dword 0x4095e859bff1a5cf
reg_x31_output:	.dword 0x4cf95ca154b0d251

// Memory Blocks
	.align 8
test_memory:
	.dword 0x0f0054d5c7177770, 0x436382f5b33772c1
	.dword 0x556f7b4273c2592f, 0x1c6ec614d55eefed
	.dword 0xefa98df7004cf956, 0x90bcc4b648d12cf4
	.dword 0x90574b87d9ca2a0f, 0x2bccdd88bb3d866d
	.dword 0xb7cd011249225729, 0x4e056bb17787c7cf
	.dword 0x21b0ddd6f66c141c, 0x0cafd672cc269313
	.dword 0xef7a6c0dc331064a, 0xfa796829ec0e1e97
	.dword 0x193042f3bba0af87, 0xa5b6207d99ee6d45
	.dword 0x368646261ec6dcdb, 0x13c1f5d5005a64f4
	.dword 0x01d0063242f3bd86, 0x35b03a07e2df670d
	.dword 0x6160166a31dfe643, 0xb940165a1a6b4f71
	.dword 0xb4266bfb8ff6c4d1, 0x5d0852a57cd8fd9a
	.dword 0x50ed1a3ecfd647ae, 0x2f3bdbd4b259cc00
	.dword 0xedb4004eeebabe25, 0xae8bbd9985f499bd
	.dword 0x23a13bdb5c7a348b, 0x6bc2835946b94a73
	.dword 0xb505753d2222d0c4, 0x840034634fd1e06d
	.dword 0x2b5058ca7983f30c, 0x863d5f67a4889504
	.dword 0xf3c2d16b7e221ef3, 0x362ee92d3cec9343
	.dword 0x4871d86c5991f0a9, 0x3a0b927c8e3538ce
	.dword 0xf905ee92ba36a27b, 0x634f695b919e00ff
	.dword 0xe8d09273b824e69d, 0xaba89981fb737e51
	.dword 0xc7924802c0b3192a, 0xa1fc50070cac0601
	.dword 0xece1056a324c0e68, 0x4729a659e1ecf1f2
	.dword 0x2cc8191cffaa014f, 0xda1bc876f5879cd0
	.dword 0x2437dd29bff3664b, 0xde1bca57b5077c78
	.dword 0x9e6ccbd4c88ba640, 0x8065e0ac309cfe97
	.dword 0xe6dac9645a0605cf, 0x220cf0c591470b90
	.dword 0xc6a2b7361bc93cd7, 0x1c72abd7d45753a3
	.dword 0x8e65a41a6dd6823e, 0x3849a960560bca4b
	.dword 0x76aa2ddcd60f0ff1, 0xd47a34e0abb9f3e6
	.dword 0x373de8239a7f6328, 0x6a99c2d5c6aee99b
	.dword 0x7245dc7b94e7bcee, 0x353040e30db13777
	.dword 0x3f4e77af592da6e0, 0xe805b54d2a3ff8d9
	.dword 0x26dc7858d0da8034, 0x0f65e1ac727cd710
	.dword 0x6d05b2b99d8756fd, 0x1feedcdec764ce42
	.dword 0xeab1bdcb9b5691ac, 0x105ad83f3ad5dc8f
	.dword 0x868fdd972fa02cd9, 0x81048416081dff75
	.dword 0xd1d0bec426fd9143, 0xace8c7522eb22375
	.dword 0x6687d7707d2e4615, 0x4cdfbe750771e9f7
	.dword 0x7f818142c11f036b, 0x12f235cf53c7696a
	.dword 0x489820bfe3f0e913, 0xc05012eec9404baf
	.dword 0x9c63eddd2b76dd97, 0x17bf6155de2feeb7
	.dword 0x1dc631d6037b597b, 0x07a2f66e62c06b6a
	.dword 0xc28a0e3d558122c2, 0x8532e0ba27d2a6ca
	.dword 0x3562215678d5bcb7, 0x5570164ce86bd158
	.dword 0xc22b9ba14cf48fe9, 0xbb00167fcd70f8b6
	.dword 0x6cd49ab682a60e76, 0xf9b472df0c578f8d
	.dword 0x1accdd58dd36588c, 0x544d73634a7c0fb0
	.dword 0x65c524c570d3252d, 0x864649e5f63e1a81
	.dword 0x65f2d74abdd8f331, 0x656c88d1af13bb93
	.dword 0xf752b8206ed3c691, 0xe4ebd11c04bbb190
	.dword 0x39bec8726077f5e1, 0xf091eb7055d0e15d
	.dword 0x2c58a5bc2c1bcc1e, 0xc29ec0acd57f577b
	.dword 0xbb0af95b668302aa, 0x63b6e593d13d7bb0
	.dword 0xa5f9cd6022595793, 0xdac6adbb28725ae6
	.dword 0xafe2daa587c9c41b, 0x4d0ef9c6a31c2b52
	.dword 0x26ec2426bd741774, 0x7c7434d8f0186ed8
	.dword 0x6470738b3adaf9ca, 0xf6bb3547b1e157ad
	.dword 0x613e8b0175809b87, 0x1ae6f49127aa533d
	.dword 0x1db92051c08894d2, 0x45a5528adaffdf4f
	.dword 0xdd92f532ff19b957, 0xd9e857ddd5ad0d67
	.dword 0x26c3a0da4c22e44d, 0x0aacabb572eb586b
	.dword 0xf806ded312d200b4, 0xcdc530b1f807b089
	.dword 0xbe017712e23cd1df, 0xf08efd21fdf1e157

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
