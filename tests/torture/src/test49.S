// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	addi x17, x0, -1410
	addi x4, x0, 0
	addi x1, x0, 0
	la x22, test_memory+492
	xor x18, x15, x25
	blt x0, x0, crash_backward
	addi x16, x0, -956
	subw x2, x17, x17
	la x28, test_memory+993
	divuw x25, x22, x2
	addi x7, x0, -379
	la x10, test_memory+2412
	addi x1, x0, 1
	addi x26, x0, 1125
	sra x6, x7, x7
	addi x13, x0, -1801
	la x14, test_memory+2448
	sll x1, x1, 63
	addi x11, x0, 493
	lh x23, -217(x28)
	sub x18, x5, x31
	srlw x31, x12, x12
	slt x3, x26, x26
	addi x21, x0, -1475
	lhu x19, -1542(x10)
	addi x8, x13, 0
	addi x7, x0, 26
	subw x19, x20, x28
	addi x30, x13, -112
	addw x15, x25, x24
	addi x6, x7, 1348
	sd x2, -1672(x14)
	sw x4, -396(x22)
	and x25, x1, x20
	rem x10, x28, x24
	addi x9, x0, 1270
	addi x17, x0, -1
	bge x7, x6, crash_forward
	rem x29, x11, x30
	addw x22, x24, x24
	addi x25, x0, -742
	la x18, test_memory+1275
	addi x30, x0, -445
	addi x7, x0, -860
	or x31, x29, x29
	mulhu x10, x7, x7
	lh x19, -911(x18)
	slt x7, x3, x4
	addi x14, x0, 601
	addi x3, x1, 0
	remu x12, x11, x21
	sra x24, x16, x9
	addi x10, x0, -1186
	la x5, test_memory-574
	mulw x15, x30, x30
	addi x22, x0, -1946
	addi x27, x8, 0
	remw x31, x10, x10
	xor x17, x17, x1
	and x2, x12, x17
	sll x6, x0, x0
	addi x13, x0, 1797
	or x4, x12, x1
	addi x26, x3, 0
	sraw x28, x25, x25
	sub x23, x14, x13
	beq x2, x4, crash_forward
	bne x3, x26, crash_forward
	addw x29, x22, x22
	lb x20, 802(x5)
	addi x6, x0, 0
	addi x7, x0, 828
	addi x2, x0, 1268
	mul x28, x13, x0
	addi x29, x0, -1783
	addi x13, x0, -847
	addi x4, x0, -1515
	addi x19, x0, 1108
	addi x23, x0, -169
	addi x25, x0, 511
	addi x9, x0, -1816
	addi x14, x7, 1448
	divuw x20, x13, x13
	remu x8, x29, x23
	andi x27, x8, -1028
	addi x24, x0, 1225
	add x31, x2, x2
	addi x22, x0, 1433
	addi x16, x0, 1471
	addi x8, x0, 809
	sub x21, x4, x9
	mul x23, x8, x8
	addi x17, x25, 533
	sltiu x29, x26, -384
	addi x11, x0, -1306
	addi x5, x0, 0
	addi x1, x0, 1
	addi x3, x0, -1332
	addi x10, x0, -605
	sll x1, x1, 63
	addi x15, x0, -1019
	rem x26, x16, x10
	addi x28, x0, -1
	remuw x12, x22, x3
	sllw x18, x19, x24
	la x2, test_memory+2437
	la x4, test_memory+2105
	srli x8, x4, 20
	xor x28, x28, x1
	addi x23, x0, -1295
	ld x31, -1653(x2)
	and x13, x31, x28
	addi x9, x0, -1356
	or x20, x13, x1
	sw x29, -1317(x4)
	sra x30, x11, x15
	sraw x7, x23, x9
	beq x13, x20, crash_backward
	addi x31, x0, 576
	addi x25, x0, -2010
	sll x18, x18, x18
	addi x29, x0, 475
	addi x15, x0, -1981
	rem x30, x26, x14
	addi x14, x0, -604
	la x12, test_memory-1348
	mulh x3, x25, x29
	addi x11, x0, -540
	divuw x28, x14, x11
	sll x17, x10, x23
	and x16, x7, x7
	ld x13, 1372(x12)
	addi x8, x31, 1616
	la x20, test_memory+907
	lbu x27, -92(x20)
	add x3, x9, x9
	divuw x29, x28, x28
	addi x23, x0, 420
	sraiw x21, x19, 13
	addi x16, x0, -1092
	addi x30, x0, 0
	addi x19, x0, 872
	divu x28, x16, x16
	addi x6, x0, 1
	remuw x24, x15, x15
	addi x10, x0, -2044
	rem x11, x24, x24
	addi x1, x0, -1883
	rem x9, x14, x14
	sll x6, x6, 63
	mul x22, x15, x15
	mulhu x7, x19, x10
	xori x18, x30, -1268
	addi x13, x1, -1887
	la x17, test_memory+312
	addi x24, x0, -1254
	addi x27, x0, 1020
	addi x22, x0, -279
	sllw x29, x1, x1
	addi x21, x0, -1371
	rem x4, x23, x23
	addi x5, x0, -1
	subw x20, x22, x21
	addi x14, x0, 0
	lbu x12, 273(x17)
	addi x29, x0, -1245
	slt x7, x3, x0
	addi x4, x0, 1
	addi x25, x0, 0
	sll x4, x4, 63
	add x10, x24, x27
	la x8, test_memory+2749
	xor x5, x5, x6
	addi x19, x0, 0
	lh x16, -1933(x8)
	addi x18, x0, 0
	addi x11, x0, -1213
	addi x9, x0, 1631
	bne x19, x18, crash_backward
	sraw x15, x11, x9
	addi x21, x0, -1
	addi x3, x0, 0
	and x17, x22, x22
	bne x14, x3, crash_forward
	addi x1, x0, -1650
	addi x19, x0, -1392
	srl x23, x1, x1
	and x2, x22, x5
	slt x27, x13, x13
	addi x12, x19, -884
	la x8, test_memory-566
	la x31, test_memory-1099
	la x3, test_memory+1656
	remuw x18, x1, x18
	rem x17, x24, x24
	addi x22, x29, -1108
	or x26, x26, x6
	addi x9, x0, 1786
	la x11, test_memory+316
	sh x26, 1719(x31)
	addi x16, x0, -314
	addi x13, x0, -673
	xor x21, x21, x4
	la x27, test_memory-662
	lhu x15, -1598(x3)
	addi x5, x0, -11
	divuw x24, x16, x13
	mulw x18, x7, x7
	andi x31, x12, -824
	srli x10, x21, 27
	bgeu x22, x29, crash_backward
	subw x2, x8, x8
	sraiw x30, x14, 12
	ld x14, -212(x11)
	sraw x17, x5, x30
	divuw x25, x5, x5
	la x3, test_memory+260
	mulw x1, x9, x9
	addi x14, x0, 295
	addi x15, x0, 562
	lh x7, 1326(x8)
	and x28, x28, x21
	addi x25, x0, -1069
	srl x6, x9, x25
	divu x17, x4, x0
	lbu x23, 1145(x27)
	la x11, test_memory+1036
	la x2, test_memory+2497
	lhu x5, -418(x11)
	divw x17, x6, x12
	sb x1, -1881(x2)
	sw x20, 240(x3)
	div x16, x19, x19
	remuw x10, x14, x25
	slli x23, x22, 32
	div x13, x28, x31
	srl x5, x4, x6
	addi x27, x0, 113
	sltu x7, x4, x1
	addi x14, x0, 836
	or x20, x20, x4
	addi x24, x0, 302
	or x3, x27, x11
	bne x2, x2, crash_forward
	addi x10, x0, 1473
	addi x16, x10, 422
	la x21, test_memory-114
	addi x9, x0, -359
	addi x1, x0, -1325
	addi x13, x0, 1
	addi x25, x0, 260
	remu x19, x29, x13
	addi x29, x1, -1629
	sra x2, x14, x25
	mulhu x18, x10, x10
	la x29, test_memory-1996
	lw x28, 154(x21)
	addi x26, x0, -292
	sw x24, 2012(x29)
	lui x20, 548144
	remuw x22, x24, x24
	addi x31, x0, -174
	sraw x12, x15, x26
	addi x14, x0, 791
	addi x25, x0, -565
	addi x17, x0, 1045
	and x8, x27, x1
	sltu x30, x31, x31
	sll x13, x13, 63
	addi x4, x0, -445
	mulhu x19, x14, x4
	la x1, test_memory+1037
	addi x23, x17, 498
	divw x6, x9, x9
	addi x19, x0, 798
	or x5, x19, x19
	sub x31, x14, x28
	addi x2, x25, -379
	addi x7, x0, -1
	addi x4, x0, 1539
	addi x10, x0, -996
	addi x26, x0, 0
	addi x16, x0, -737
	addi x20, x0, 0
	addi x25, x0, 1
	mulhsu x8, x4, x16
	sll x25, x25, 63
	la x2, test_memory+657
	addi x14, x0, 1
	sll x14, x14, 63
	xor x7, x7, x13
	lhu x9, -413(x2)
	addi x12, x0, -1
	addi x5, x0, -1
	and x11, x14, x7
	bltu x26, x20, crash_forward
	or x3, x11, x13
	bgeu x17, x23, crash_forward
	lw x21, -777(x1)
	xor x5, x5, x25
	addi x17, x0, 975
	addi x23, x0, 1
	xor x12, x12, x14
	la x24, test_memory+745
	sub x21, x8, x11
	and x22, x13, x12
	sll x23, x23, 63
	addi x8, x0, -1
	srlw x15, x19, x10
	slliw x6, x29, 19
	addi x29, x0, -1771
	srai x4, x20, 3
	sw x6, -133(x24)
	xor x8, x8, x23
	addi x1, x0, 144
	mulw x2, x17, x1
	or x27, x27, x14
	and x31, x0, x5
	sraiw x9, x21, 22
	or x28, x31, x25
	mulh x4, x12, x12
	addi x15, x0, 1338
	blt x31, x28, crash_backward
	and x16, x11, x8
	addi x24, x0, 1391
	divuw x14, x9, x9
	addi x11, x0, 638
	addi x21, x0, -1464
	or x26, x16, x23
	divu x10, x15, x24
	addi x20, x21, -1269
	addi x18, x0, -1610
	addi x15, x0, 1
	beq x21, x20, crash_backward
	mulw x3, x29, x29
	addi x7, x0, -972
	sub x13, x11, x11
	srl x19, x11, x19
	addi x20, x0, -211
	addi x14, x0, 1781
	addi x17, x0, 1
	addi x2, x0, -116
	divu x6, x24, x24
	rem x23, x10, x10
	addi x3, x0, 738
	divuw x21, x20, x14
	addi x25, x0, 1
	addi x13, x0, 1273
	addi x19, x0, 1
	addw x31, x7, x7
	sll x15, x15, 63
	sllw x30, x29, x18
	addi x24, x0, -1
	sll x25, x25, 63
	srl x5, x2, x2
	sll x19, x19, 63
	sll x17, x17, 63
	sltu x8, x16, x10
	addi x6, x0, -1
	addi x4, x0, -1
	addi x12, x0, -1
	xor x6, x6, x19
	xor x12, x12, x25
	xor x4, x4, x17
	addi x30, x0, 1
	addi x14, x0, 1497
	and x16, x7, x6
	addi x23, x0, 1546
	or x26, x1, x19
	and x28, x10, x4
	sub x11, x3, x13
	or x8, x23, x23
	xor x24, x24, x15
	sll x30, x30, 63
	addi x20, x0, -1
	or x9, x28, x17
	xor x20, x20, x30
	and x5, x11, x20
	and x27, x23, x12
	addi x31, x0, 1
	addi x16, x0, 1384
	subw x6, x16, x16
	and x22, x17, x24
	or x2, x5, x30
	addi x21, x14, 373
	sll x31, x31, 63
	addi x7, x0, -1
	or x10, x22, x15
	bltu x21, x14, crash_backward
	addi x11, x0, 298
	or x1, x20, x25
	remuw x13, x3, x9
	div x6, x28, x28
	addi x4, x0, 1543
	addi x23, x0, 266
	or x9, x6, x8
	addi x13, x0, -1924
	divu x28, x23, x23
	addi x21, x0, 1705
	mulhu x19, x11, x4
	addi x6, x13, -1136
	addiw x9, x24, 1339
	addi x26, x0, -1354
	beq x22, x10, crash_backward
	srlw x14, x21, x26
	addi x8, x0, 483
	addi x17, x0, 904
	addi x3, x8, 999
	bltu x2, x5, crash_backward
	beq x8, x3, crash_forward
	bgeu x6, x13, crash_backward
	xor x7, x7, x31
	and x29, x23, x7
	xor x16, x17, x17
	remw x9, x28, x28
	or x18, x1, x31
	addi x28, x0, -1887
	addi x21, x0, 1504
	div x14, x28, x21
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0xffffffff80000009
reg_x1_init:	.dword 0x7d0fdb7a24cdd05d
reg_x2_init:	.dword 0x22fd40edf9d80f9b
reg_x3_init:	.dword 0xffffffffffffffff
reg_x4_init:	.dword 0x0000000000000000
reg_x5_init:	.dword 0xffffffffffff8000
reg_x6_init:	.dword 0xffffffffffff8006
reg_x7_init:	.dword 0xffffffffffffffff
reg_x8_init:	.dword 0xffffffffffffffff
reg_x9_init:	.dword 0xffffffffffffffff
reg_x10_init:	.dword 0xffffffffffff8005
reg_x11_init:	.dword 0xffffffffffffffff
reg_x12_init:	.dword 0x096ae2d0bdca6b87
reg_x13_init:	.dword 0x0000000000000000
reg_x14_init:	.dword 0x0800000000000002
reg_x15_init:	.dword 0x0000000000000000
reg_x16_init:	.dword 0xf9af71c16ac53fef
reg_x17_init:	.dword 0xf005a077a668eab2
reg_x18_init:	.dword 0xffffffffffffff80
reg_x19_init:	.dword 0xffffffffffff8005
reg_x20_init:	.dword 0x7927d3123743ffda
reg_x21_init:	.dword 0x0000000000000000
reg_x22_init:	.dword 0x0000000000000000
reg_x23_init:	.dword 0xffffffffffffffff
reg_x24_init:	.dword 0x46c44f87e0e9bff4
reg_x25_init:	.dword 0x25a55a86eba18ffd
reg_x26_init:	.dword 0x994972f94781c9d8
reg_x27_init:	.dword 0xb6398c92f72858f8
reg_x28_init:	.dword 0x0000000000000000
reg_x29_init:	.dword 0x08bb7378e7ccde54
reg_x30_init:	.dword 0x3bd7ee3cf2daf360
reg_x31_init:	.dword 0x07c68be6f996897c

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x98e8ffae3a02e7b0
reg_x1_output:	.dword 0xe34617020c9a0aa1
reg_x2_output:	.dword 0xe6304d4ac70dea50
reg_x3_output:	.dword 0x4b32237a6006a367
reg_x4_output:	.dword 0x90f6190733351add
reg_x5_output:	.dword 0xe37adae86d74b70d
reg_x6_output:	.dword 0xc9bc1956abd77f8a
reg_x7_output:	.dword 0x42981cfc9b39458a
reg_x8_output:	.dword 0x07f97b3ce2eb4d08
reg_x9_output:	.dword 0xdf0902accdd44f20
reg_x10_output:	.dword 0x47d07401e024a829
reg_x11_output:	.dword 0xa9fda8fda1e6a89c
reg_x12_output:	.dword 0x3b1eba20ca945dc7
reg_x13_output:	.dword 0xbf52552296fa4fdb
reg_x14_output:	.dword 0xde681985c99fb4e3
reg_x15_output:	.dword 0xc71045c920dd0490
reg_x16_output:	.dword 0x0e5996f7c6a0bf10
reg_x17_output:	.dword 0x4319c5aecb052945
reg_x18_output:	.dword 0x2396d6d21390cb11
reg_x19_output:	.dword 0x8fec537b8a75309f
reg_x20_output:	.dword 0xd76abaf8ad14ddc1
reg_x21_output:	.dword 0x62bcf2cbf7121ae5
reg_x22_output:	.dword 0x900f6c09015e5533
reg_x23_output:	.dword 0xe6dffa8b21a5c7c2
reg_x24_output:	.dword 0xedd141d147d01a19
reg_x25_output:	.dword 0xb9aef485d00e204a
reg_x26_output:	.dword 0xfe933f00997b0369
reg_x27_output:	.dword 0x2c34623f11a65d3a
reg_x28_output:	.dword 0xc2731421168a503d
reg_x29_output:	.dword 0xbe0e7affdb07ed83
reg_x30_output:	.dword 0xc5b5ddc492e35bfa
reg_x31_output:	.dword 0x62773731ee14c109

// Memory Blocks
	.align 8
test_memory:
	.dword 0x110611ff02c9f0b4, 0x10713cee0a14fba7
	.dword 0xd49e5114518cdbd1, 0x76fe81d3c3ce5476
	.dword 0x34840d717654a8eb, 0x973eb61a871ba54f
	.dword 0xe6b03edea868a6fb, 0xfda0cce8f6ef6e8d
	.dword 0xc73394f512dc9bb3, 0x6a3435e4fe145317
	.dword 0xb546dccd89dbc92a, 0xd3db9c0886aad09d
	.dword 0x7e0f8dfb9fec29be, 0xcbec3dbb9893b820
	.dword 0x09ebb2bc49cf0635, 0xace2321ef3eb2ab8
	.dword 0x9e979f69a2524a25, 0x90832fa684b01e91
	.dword 0xb6b32d3696b83a96, 0x7d4ea7eaf3f0b036
	.dword 0x85536c18769172e5, 0x59b34cbe5193c411
	.dword 0xc5a90000d93f4bea, 0x1a6f52804c5cbc32
	.dword 0x72929d52b613115d, 0x020203b0a44e464f
	.dword 0xa37658923c60a975, 0x266a79c5b25d860b
	.dword 0x3a33bd5a252192d1, 0x69d88f3ec7b71f7b
	.dword 0xa4abe0933a2f5c9b, 0x8fb25ef94aebe5e5
	.dword 0x827be1e365eafcea, 0x9aa1e4c0627332ca
	.dword 0x085990642b98a968, 0x7f839328764d2926
	.dword 0xf5492696330e1634, 0xdd47f29c2e6f68f5
	.dword 0x85de519703cb3f09, 0x90679db6e54af6f9
	.dword 0x2629f790f2741e9f, 0xf2aa2ed1e5625cba
	.dword 0x871971721223f851, 0x8af5f2dc92d344ce
	.dword 0xf7232be2077917ff, 0x15e77571b627175a
	.dword 0x6b67e3715fc22c35, 0xb44d3a2720f25ad8
	.dword 0xf52ef01069a49e8c, 0xd19537237f02dd1a
	.dword 0x931753c300258e50, 0xeefee4f34458e88d
	.dword 0x7cbe8092ab755163, 0xfa3df79db92809c2
	.dword 0x7e3909c876779f60, 0x8c6714f65de0292a
	.dword 0x75c8b456cb00cb02, 0x51c11c307a07fd21
	.dword 0xfcfe9a992362adc7, 0xb1aad2b71dbe182d
	.dword 0x1e2f573ddc6a29d0, 0x706e0a3c2f461786
	.dword 0x4b0a6b7f8998660b, 0xa0d69411105bb5d9
	.dword 0xa8855499dc712893, 0x91f495b6c25dc648
	.dword 0xf25e047b1969f356, 0x0bd712b540ff5bb5
	.dword 0x6c7fb1b6bf9bc6f7, 0xcd84bfaaa14da040
	.dword 0x7dd032bd1e13aff6, 0xd44672a5b2bd210d
	.dword 0x059b584f20bc820e, 0x11b7c4b3c1d9924a
	.dword 0x5634fb2e599e65de, 0x4047b8bb4c5f4f70
	.dword 0x03c1b113c7d71ccb, 0xf61c7b8615361bc8
	.dword 0xa0a15ce5d6781f24, 0xb9ea911ff838e730
	.dword 0xc0f60e28a0a5f886, 0x158103650a2e9b1e
	.dword 0x9774e3b678268681, 0xa3d165d5251433e5
	.dword 0x8655e5a89e41fd7b, 0x2d53c2aaac18aa37
	.dword 0xa3130a9edeb4d7d4, 0xab13c52c89af70ea
	.dword 0x69f5dc1f77af134a, 0xafb5b544a5268aff
	.dword 0x6a766e5842bf609f, 0x4397185108797ddf
	.dword 0x36659f0c1f4f2979, 0xcf180b36eaeaa3e6
	.dword 0x2f07cfcc0a3e9088, 0xa957a9bad580a325
	.dword 0x3be48f65557dcfed, 0x4b7f1714241e0c63
	.dword 0x0a62e699f87399da, 0xd65bfbba8cc56665
	.dword 0x22913c11bcd65f75, 0x72c48c85e6fc296f
	.dword 0x0ff303940598a201, 0x5a4c6ef4bb636f0a
	.dword 0xb41dac7164e6b23f, 0xd6730ecbc7c55a06
	.dword 0xe79183401d368211, 0xe5e938e17a427ac2
	.dword 0x1ad27acfd6506c61, 0x33150f36cf3ab3aa
	.dword 0x3190105a3c421740, 0xa9d8aa4a1d416200
	.dword 0x42eabef6499ad451, 0xe610fbac5924cedf
	.dword 0xe7d8b64faa632368, 0x5d87c5cfa60d2c7d
	.dword 0xe292c89ad8373b6d, 0x186cbd248b37a3b0
	.dword 0xfb0dc3c45406bd86, 0xe01726659e1635b3
	.dword 0x2c13a9eb2579f675, 0x7612862f8ce57629
	.dword 0x9dd37d0d9d1f523e, 0xea8e35d437556161
	.dword 0x54f592073389e60c, 0xe270f16e68f2d2da
	.dword 0x0bad9eb85eb43454, 0x37ceb33617d3600a

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
