// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	addi x23, x0, 1
	mulhsu x3, x1, x13
	addi x19, x0, 415
	addi x22, x0, -1793
	addi x24, x0, 753
	addi x4, x0, -1924
	addi x13, x0, 1472
	addi x15, x30, 1026
	remw x6, x22, x22
	mulh x29, x26, x24
	sll x23, x23, 63
	la x3, test_memory+180
	blt x12, x12, crash_forward
	xor x15, x14, x14
	addi x20, x0, -2014
	addi x25, x0, -102
	divu x15, x30, x30
	and x17, x24, x31
	lw x6, 84(x3)
	remw x9, x20, x20
	addi x2, x0, 1345
	addi x5, x11, 0
	addi x28, x0, -1
	srliw x18, x30, 23
	xor x28, x28, x23
	addi x12, x0, 1406
	addi x14, x0, 942
	addi x29, x0, 1254
	sltu x22, x29, x29
	addi x16, x24, 2022
	addi x26, x0, -1506
	addi x31, x25, -1888
	addi x21, x0, -55
	blt x25, x31, crash_backward
	remuw x11, x26, x21
	remw x10, x4, x12
	subw x27, x19, x13
	remu x30, x2, x14
	addi x7, x5, 0
	bltu x5, x7, crash_forward
	and x8, x31, x28
	or x1, x8, x23
	addi x30, x0, 1735
	or x21, x11, x11
	addi x11, x0, 447
	addi x2, x27, 0
	addi x10, x0, -531
	la x8, test_memory-1443
	add x3, x2, x2
	sub x13, x12, x24
	mulhsu x23, x11, x11
	addi x16, x2, 0
	addi x14, x0, 497
	addi x26, x0, 1
	addi x20, x0, 990
	sll x26, x26, 63
	addi x6, x0, -655
	sltu x12, x1, x1
	sraiw x28, x10, 17
	ld x31, 1971(x8)
	remuw x22, x4, x4
	sraw x11, x23, x2
	addi x13, x0, 1680
	sllw x19, x10, x20
	addi x9, x0, -1010
	blt x2, x16, crash_backward
	mulw x23, x2, x2
	divu x27, x30, x6
	sll x3, x13, x13
	addi x20, x0, 401
	addi x11, x0, 1579
	addi x19, x0, 1178
	la x2, test_memory-261
	mulhu x8, x20, x20
	mulw x5, x25, x25
	mulhu x22, x23, x30
	srl x29, x9, x9
	addi x28, x0, -772
	slt x21, x4, x11
	addi x15, x0, -1
	sd x10, 941(x2)
	addi x4, x0, 220
	addi x10, x0, 102
	addi x16, x0, 1996
	divuw x22, x11, x11
	addi x20, x0, -227
	mulhsu x30, x16, x16
	sraw x21, x27, x27
	addi x23, x0, -837
	slt x1, x15, x14
	xor x15, x15, x26
	xor x9, x20, x20
	addi x5, x0, 1
	sra x12, x19, x23
	addi x18, x4, 1630
	and x17, x30, x15
	mulh x27, x11, x28
	addi x25, x0, 135
	addi x6, x0, -270
	sll x5, x5, 63
	sraw x31, x10, x6
	divu x7, x14, x25
	or x24, x29, x26
	addi x3, x0, -1
	bge x24, x17, crash_forward
	sra x27, x10, x15
	xor x3, x3, x5
	sra x13, x1, x1
	addi x26, x0, 1
	xor x15, x21, x10
	or x11, x28, x28
	and x20, x9, x7
	and x8, x20, x3
	sll x26, x26, 63
	or x29, x21, x5
	addi x4, x7, 0
	addiw x12, x1, 1037
	addi x1, x4, 0
	addi x7, x0, 210
	sllw x22, x7, x7
	remu x28, x13, x2
	bltu x4, x1, crash_backward
	remuw x21, x23, x23
	add x22, x13, x30
	addi x6, x0, 542
	la x9, test_memory+437
	beq x8, x29, crash_backward
	addi x24, x10, 0
	sd x11, -309(x9)
	addi x16, x0, 1573
	addi x19, x0, 1464
	srl x2, x6, x16
	la x23, test_memory+501
	addi x30, x0, -1
	la x25, test_memory+1518
	ld x18, 27(x23)
	addi x20, x24, 0
	addi x12, x0, 512
	addi x4, x12, 498
	addi x2, x0, 1
	addi x11, x19, 1467
	addi x31, x0, 1255
	sw x7, -990(x25)
	addi x5, x0, -267
	sll x2, x2, 63
	addi x9, x0, 1305
	divu x8, x31, x19
	addi x27, x0, -1
	remu x17, x16, x16
	remuw x18, x24, x24
	xor x27, x27, x2
	addi x16, x0, -1151
	div x1, x16, x16
	subw x29, x0, x3
	addi x3, x0, -1121
	subw x28, x5, x3
	mulw x11, x29, x29
	xor x23, x21, x21
	addi x15, x0, 48
	and x7, x11, x27
	or x6, x7, x2
	addi x19, x0, -1302
	bne x16, x16, crash_backward
	div x13, x31, x15
	addi x16, x0, 1484
	xor x30, x30, x26
	sraw x8, x30, x28
	subw x17, x19, x16
	and x10, x24, x30
	divu x25, x26, x26
	or x14, x1, x26
	bge x14, x10, crash_backward
	rem x20, x16, x31
	addi x29, x0, 822
	remu x11, x13, x13
	sraiw x1, x2, 22
	subw x18, x29, x29
	la x3, test_memory-633
	lhu x5, 1095(x3)
	addi x13, x0, 1
	addi x11, x0, 1033
	mul x28, x10, x10
	addi x25, x0, -941
	sra x10, x13, x0
	sll x13, x13, 63
	sll x26, x3, x3
	addi x16, x0, -1
	addi x29, x25, -2042
	bltu x0, x0, crash_backward
	addi x22, x0, 570
	la x23, test_memory+1565
	addi x8, x0, -1243
	la x31, test_memory+694
	lui x10, 920826
	addi x14, x0, 1028
	addi x2, x0, 1775
	addi x20, x0, -503
	sb x20, 207(x31)
	sll x15, x17, x17
	addi x12, x0, -914
	divuw x21, x9, x22
	mulw x18, x11, x8
	sub x1, x14, x20
	divuw x7, x4, x4
	and x10, x14, x3
	la x28, test_memory+2181
	xor x16, x16, x13
	remu x26, x2, x12
	lw x19, -669(x23)
	and x24, x29, x16
	or x17, x30, x13
	addi x4, x0, 1
	add x30, x26, x29
	lw x6, -1221(x28)
	sll x4, x4, 63
	subw x18, x14, x14
	addi x10, x0, 1164
	addw x25, x29, x29
	addi x6, x0, 1253
	add x23, x11, x15
	srliw x19, x21, 4
	addi x11, x0, -946
	addi x28, x0, 1893
	addi x24, x0, 1107
	rem x12, x27, x27
	addi x27, x0, -1
	and x8, x10, x10
	mul x18, x4, x30
	and x17, x24, x24
	or x23, x4, x4
	addi x9, x0, 1941
	xor x15, x29, x29
	slt x29, x2, x16
	mulw x26, x25, x25
	addi x2, x24, 1339
	addi x21, x28, 1350
	addi x7, x9, 1273
	addi x20, x0, -1553
	xor x27, x27, x4
	and x3, x3, x27
	divw x16, x25, x25
	addi x13, x0, -600
	or x5, x3, x4
	or x1, x13, x13
	la x8, test_memory+1098
	sub x22, x11, x20
	addi x14, x0, 1168
	srliw x19, x2, 25
	bltu x7, x9, crash_backward
	slliw x19, x8, 8
	remu x2, x0, x12
	beq x3, x5, crash_backward
	lhu x26, -232(x8)
	bltu x0, x0, crash_backward
	addi x18, x0, 2014
	addw x31, x6, x6
	slli x2, x1, 59
	addi x7, x13, 0
	addi x5, x0, 1
	mulw x19, x25, x25
	addi x25, x0, -1312
	sll x15, x18, x18
	addi x30, x14, 294
	bge x14, x30, crash_forward
	addi x29, x0, -771
	addi x24, x0, 152
	addi x14, x0, -1636
	addi x17, x25, -391
	la x11, test_memory-1838
	addi x27, x0, -745
	and x12, x29, x29
	la x22, test_memory-1133
	and x19, x13, x13
	addiw x26, x13, 1039
	sw x2, 1157(x22)
	remu x17, x7, x16
	addi x31, x7, 0
	addi x8, x0, 1842
	add x4, x27, x8
	la x25, test_memory+2390
	addi x29, x0, -68
	addi x24, x0, -1060
	ld x19, -1710(x25)
	lhu x20, 1868(x11)
	la x4, test_memory+1153
	remw x26, x11, x11
	addi x1, x0, 1
	addi x15, x0, -1391
	addi x16, x0, -919
	mul x25, x18, x18
	srl x12, x29, x29
	sltu x20, x19, x22
	divw x2, x14, x15
	addi x10, x0, -190
	divu x26, x7, x7
	addi x2, x0, -620
	addi x20, x0, -139
	sll x5, x5, 63
	sll x1, x1, 63
	addi x31, x2, 0
	sra x14, x2, x20
	addi x8, x9, 0
	lhu x17, -153(x4)
	divuw x28, x16, x10
	addi x11, x0, -1594
	addi x27, x8, 0
	addi x25, x31, 0
	la x29, test_memory-1005
	sub x15, x22, x22
	addi x30, x0, -1826
	sllw x7, x27, x27
	blt x8, x27, crash_backward
	addi x19, x0, 629
	sb x26, 1800(x29)
	srl x18, x24, x30
	addi x13, x0, -1
	add x22, x11, x19
	xor x13, x13, x1
	mulhu x12, x25, x0
	and x21, x2, x13
	or x23, x21, x1
	addi x9, x0, -1
	xor x9, x9, x5
	and x3, x17, x9
	la x12, test_memory+1963
	la x7, test_memory+477
	srlw x27, x14, x19
	mulhsu x19, x23, x23
	addi x10, x0, 661
	addi x28, x0, 1640
	mulw x17, x0, x29
	or x6, x20, x5
	sraiw x14, x18, 1
	la x31, test_memory+1049
	sh x15, -329(x31)
	addi x20, x0, 249
	srl x26, x28, x28
	la x30, test_memory-596
	ld x29, -1243(x12)
	addi x28, x0, -806
	sraiw x25, x10, 8
	sra x2, x29, x29
	addi x18, x10, 519
	bne x0, x0, crash_backward
	addi x8, x11, 0
	la x14, test_memory+1083
	addi x22, x24, 0
	addi x16, x0, -1372
	sltiu x17, x29, -271
	addi x11, x8, 0
	add x15, x20, x16
	divw x3, x18, x28
	addi x4, x22, 0
	sllw x6, x15, x15
	sb x15, 1514(x30)
	addi x19, x0, 1013
	remu x9, x28, x28
	bne x22, x4, crash_forward
	ld x24, 435(x7)
	sltu x31, x26, x26
	blt x8, x11, crash_backward
	addi x27, x0, 651
	srl x5, x19, x27
	lw x26, -539(x14)
	addi x23, x7, 0
	addi x19, x0, 1759
	addi x3, x0, 1
	sub x11, x6, x1
	addi x15, x0, -246
	addi x12, x0, -240
	addi x9, x23, 0
	sll x3, x3, 63
	addi x27, x12, -1547
	addi x1, x0, -1
	xor x1, x1, x3
	addi x5, x0, 1688
	addi x29, x0, -886
	remu x17, x19, x15
	beq x12, x27, crash_backward
	and x16, x20, x1
	or x6, x5, x29
	or x28, x16, x3
	bltu x28, x16, crash_forward
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x0432a0a6bf73b5f4
reg_x1_init:	.dword 0xffffffffffffffff
reg_x2_init:	.dword 0xe011e7a143b135a2
reg_x3_init:	.dword 0xf0f6ff558494d11e
reg_x4_init:	.dword 0xc4101979ee5f0318
reg_x5_init:	.dword 0x0800000000000009
reg_x6_init:	.dword 0xcd3474cdc73d80db
reg_x7_init:	.dword 0x508d7720c00e091b
reg_x8_init:	.dword 0xffffffff80000006
reg_x9_init:	.dword 0x0000000000000000
reg_x10_init:	.dword 0x7e29c635dc98f8c4
reg_x11_init:	.dword 0xffffffffffff8008
reg_x12_init:	.dword 0xffffffffffff8002
reg_x13_init:	.dword 0x2fb156098ea04b05
reg_x14_init:	.dword 0xa167a1fa83bfdb01
reg_x15_init:	.dword 0x0000000000000000
reg_x16_init:	.dword 0x7868d8748198b3c3
reg_x17_init:	.dword 0x886a9ad8757547b5
reg_x18_init:	.dword 0x0b0682629e6447a2
reg_x19_init:	.dword 0xffffffff80000000
reg_x20_init:	.dword 0x88b4ed0f7d3e6cba
reg_x21_init:	.dword 0x0800000000000002
reg_x22_init:	.dword 0xf6c6481ddf9fd755
reg_x23_init:	.dword 0xffffffffffffff88
reg_x24_init:	.dword 0xffffffffffffffff
reg_x25_init:	.dword 0x1f6f8ab106558f5c
reg_x26_init:	.dword 0x2923945f937fe4d9
reg_x27_init:	.dword 0x979b78f09f18fcfe
reg_x28_init:	.dword 0xffffffffffff8009
reg_x29_init:	.dword 0xddb96d052dc324f1
reg_x30_init:	.dword 0x7cc65cb1838fe5c5
reg_x31_init:	.dword 0x1e0fbc1783499264

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x191321d8ff698781
reg_x1_output:	.dword 0xe96a79e8410f071d
reg_x2_output:	.dword 0xa80873b505b9b1b8
reg_x3_output:	.dword 0x7f0d1fc3fabd13a3
reg_x4_output:	.dword 0x5bf7b74005445dca
reg_x5_output:	.dword 0x5690fbb0cc60c71f
reg_x6_output:	.dword 0x8775c9fbd1f9c069
reg_x7_output:	.dword 0xa73766b210f43bda
reg_x8_output:	.dword 0x6d01ccf22516ec14
reg_x9_output:	.dword 0x7332de66917a6a8e
reg_x10_output:	.dword 0x43690a2d5ac4bb74
reg_x11_output:	.dword 0xd716a9a1b5d53571
reg_x12_output:	.dword 0xee7f3d6bc7d07e09
reg_x13_output:	.dword 0xd3c3b239f1c29f72
reg_x14_output:	.dword 0xd1463411db304b05
reg_x15_output:	.dword 0x9868a81f14dfb3c1
reg_x16_output:	.dword 0x60daf860adbf1e77
reg_x17_output:	.dword 0xccf8c1add573e195
reg_x18_output:	.dword 0x822dfbe71abb24ac
reg_x19_output:	.dword 0xafddad4760afd029
reg_x20_output:	.dword 0x52eef536af52d7d2
reg_x21_output:	.dword 0x68de881a8c36ef06
reg_x22_output:	.dword 0xcf6c64dc4533d3dd
reg_x23_output:	.dword 0x387eee49947b4688
reg_x24_output:	.dword 0x0eb1f589add884ad
reg_x25_output:	.dword 0xf3b6782c05e74c9a
reg_x26_output:	.dword 0x3b302b9690801270
reg_x27_output:	.dword 0xe91238ee6c49c1c3
reg_x28_output:	.dword 0x63eb17a9458e3045
reg_x29_output:	.dword 0x13571260d8b3da66
reg_x30_output:	.dword 0x17d500aeb5c6b121
reg_x31_output:	.dword 0xa7d4f20dea3a3845

// Memory Blocks
	.align 8
test_memory:
	.dword 0xfdd53913dcb306f6, 0x39084b8d3e0d7846
	.dword 0x474a9331b1be1011, 0x022864167767587a
	.dword 0xa3dc2903bd74d6c3, 0x831643582c15ba5a
	.dword 0xeb626b2036212743, 0x77095d892f3d0553
	.dword 0xe0ddaae302dd1fd2, 0xd0944abdf57fad83
	.dword 0x8f0e93ecb48d1f20, 0xc46d1f7b2c50e2c5
	.dword 0xcf9848cf431fb4ee, 0xdf0a3a8e6614abeb
	.dword 0x87db1702f14978f4, 0x90dd9c17be0ff249
	.dword 0x3631f61c0becec04, 0xc70619eb264f417a
	.dword 0x2e2c463c9abcc76e, 0xdbef051b46d33f5e
	.dword 0xae0081cf77a95ea6, 0x11cc14cf4cbe2061
	.dword 0x120bd66e788ff724, 0x9968aa57222d9c03
	.dword 0x4ffdd9235cad3a8b, 0xef9ec28368212593
	.dword 0x818ec9d863c2270d, 0xbc3b28325b846d3d
	.dword 0x41921a07d9ed220d, 0xcb59bc28f9726d47
	.dword 0x8d1e2ab55f2f1105, 0xbf9de6252d458797
	.dword 0x889d759f4eae9ca9, 0x95588332494d7778
	.dword 0x352c95b1d64a024c, 0x6dede53d394c1b9d
	.dword 0xc0ebe2bf1d2a1783, 0xa4e3b7e7c0665c65
	.dword 0x9422946f3e0f6407, 0x3e27de9d2b46b260
	.dword 0xa87ca072f23c75df, 0xfc9e9fe56f031111
	.dword 0xa68bc800126ed3be, 0x2217b1f9fe3039f5
	.dword 0xfb478879ae8a31a9, 0x13aefc9a3ba8bbc4
	.dword 0xcacee36f70afcbdc, 0x0897241d6e2e21f6
	.dword 0xc26a31c677b60bee, 0x029931ca456f1888
	.dword 0x30fa76375d92dc33, 0xa875ed65386587ff
	.dword 0x0de6e2fdea8d4d61, 0x180abc0c62abedac
	.dword 0x3a7086ca1c317275, 0x61e51841aa997432
	.dword 0x0b5f54fae14b96d7, 0x670cf74c48e89045
	.dword 0x387afd0cd8de32bc, 0x257fafbaaca425b4
	.dword 0x8f75454dc35841cb, 0xd55a3549d75378a8
	.dword 0x1012dcd75187e002, 0x594abde8de1d6f2d
	.dword 0x72bad8b8de1f50db, 0x8dcf2419311fe6f2
	.dword 0x086450751360d4aa, 0xa5469a799ac0234c
	.dword 0x965ccdb1d8e7f048, 0x803284a1d1859780
	.dword 0x70d983295bcd0af5, 0x6a6b892eb8609141
	.dword 0xfff07ee2efca867a, 0xc4cd311e87528777
	.dword 0xdab64ba5a8d8b58e, 0x682ba85d99861141
	.dword 0x3f0fb5ac4428547a, 0x4f8c73a05240c93d
	.dword 0x598ea6958bb967ff, 0xbdd42f6fbff9a106
	.dword 0x3aac4ca03b46a677, 0x5ba8ac89708268fe
	.dword 0x9d2201145e1bcf39, 0x0667fd6462db904c
	.dword 0x9745a20295ef9442, 0x5e0a491187356128
	.dword 0xbe655333113ffa10, 0xc6cd774aac123d55
	.dword 0x2269da52a63a51d1, 0x19e709c5b4b19eef
	.dword 0x48c60a756c2631bd, 0xc769b6ca2923e166
	.dword 0x132cf2bbcadd0fbf, 0xa851990387e316ca
	.dword 0x5fefc453b44e625a, 0x3b83089aabcd6d48
	.dword 0x7a7fa3a221aa6bca, 0xe0b571814c21e8f4
	.dword 0xe19ed8bbeacc1369, 0xca04bb0c4ee875c8
	.dword 0xf190131b351c7154, 0x957914c3d53a95ec
	.dword 0x0a49b48f7db0f04e, 0xa47e3c7d94723037
	.dword 0x6f9e5772430f29e4, 0x854091a8fb9842f5
	.dword 0x72ab041f8c0fe0d0, 0xda7789e699c57eea
	.dword 0x33eec9a59d0cbda2, 0xb68a5adf44c30e97
	.dword 0x3376adb7a11ab19c, 0x0074ed512f5a0dbb
	.dword 0xdbc427e78ccd23de, 0x30a06d69c8a4751c
	.dword 0x9bc39c15191c4cc2, 0x13440c59399a7e86
	.dword 0x0f8b882119cb6389, 0xaa17c7214043c513
	.dword 0x2df458e639518236, 0x396c46b020a3a5ad
	.dword 0xada41a69071263ba, 0xd2582d314eeca3d1
	.dword 0x8628775061e26050, 0xa5dc649d3cfed695
	.dword 0xfc6cbb9162a34c2a, 0x50e6429782f1a1eb
	.dword 0x6480ce6ba77e1c4d, 0x682f957a1fa94027

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
