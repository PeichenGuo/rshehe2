// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	addi x11, x0, -260
	addi x15, x0, 1902
	rem x29, x25, x25
	addi x27, x0, 1480
	mul x28, x4, x16
	addi x3, x28, 0
	mulh x14, x2, x0
	addi x22, x15, 1805
	mulw x31, x18, x6
	addi x4, x0, -2018
	mulh x2, x27, x27
	addi x30, x0, 1348
	div x13, x11, x11
	sltu x12, x30, x30
	addi x9, x0, 523
	addi x16, x0, -1852
	addi x23, x0, 1215
	addi x20, x0, -628
	bgeu x15, x22, crash_backward
	addi x19, x0, -1506
	sra x8, x4, x23
	addi x21, x3, 0
	mulh x26, x19, x19
	divuw x7, x3, x19
	addi x17, x0, 448
	rem x24, x30, x30
	mulhu x6, x9, x16
	addi x5, x0, 640
	divuw x25, x20, x20
	remw x18, x17, x5
	addi x28, x0, -1925
	addi x10, x0, 73
	divw x29, x28, x10
	addi x26, x0, 774
	addi x17, x0, 0
	slli x9, x4, 49
	remw x15, x4, x21
	addi x12, x0, 0
	addi x19, x0, 423
	mul x4, x29, x6
	addiw x29, x7, -253
	divuw x13, x20, x20
	addi x22, x0, -1327
	lui x10, 415378
	addi x30, x0, -1804
	addi x8, x0, -68
	remw x5, x2, x2
	add x18, x31, x31
	remuw x14, x26, x22
	addi x25, x0, 595
	and x23, x19, x30
	addi x7, x0, 1
	addi x24, x0, 1167
	addi x20, x0, -129
	remuw x10, x0, x0
	addi x21, x0, 1651
	or x28, x20, x21
	and x31, x8, x24
	sll x7, x7, 63
	la x3, test_memory+1959
	la x4, test_memory-1367
	la x13, test_memory-945
	addi x12, x0, -809
	addi x1, x0, -1
	addi x18, x0, 1339
	addi x26, x0, 855
	sltu x29, x18, x26
	addi x14, x0, 1659
	subw x22, x15, x15
	addi x19, x4, 0
	lwu x17, 1995(x4)
	xor x22, x11, x28
	la x11, test_memory+223
	la x18, test_memory+315
	sltu x29, x24, x9
	and x24, x16, x16
	xor x1, x1, x7
	lhu x9, 393(x18)
	addi x28, x0, 1
	sra x6, x25, x25
	sw x22, 1569(x13)
	addi x5, x19, 0
	sll x28, x28, 63
	mulhu x15, x12, x14
	addi x23, x0, -111
	and x16, x16, x1
	addi x20, x0, 1312
	addi x10, x0, -1380
	sraw x30, x23, x23
	sllw x31, x20, x10
	sh x10, 481(x11)
	addi x8, x0, -1
	or x27, x28, x7
	xor x8, x8, x28
	lwu x2, -1251(x3)
	and x21, x17, x8
	or x26, x14, x28
	slt x23, x30, x30
	addi x28, x0, 155
	addi x24, x0, -170
	addi x18, x0, 1531
	addi x17, x0, 1308
	xori x3, x17, 1909
	addi x20, x0, 49
	addi x10, x0, 463
	mulhu x13, x28, x20
	mulw x3, x17, x30
	la x7, test_memory-1216
	sraw x11, x24, x17
	and x23, x25, x9
	slt x27, x23, x9
	srli x20, x31, 7
	la x12, test_memory+555
	lw x29, 137(x12)
	srliw x27, x0, 28
	addw x15, x9, x9
	mulhsu x8, x12, x4
	addi x27, x0, -1231
	addi x17, x0, 1
	addi x26, x0, -1808
	remu x4, x6, x6
	la x31, test_memory-570
	addi x2, x0, 2020
	add x11, x10, x10
	addi x20, x0, 1817
	sd x28, 874(x31)
	addi x30, x0, 1
	addi x21, x0, 809
	sra x16, x18, x10
	sll x17, x17, 63
	sltu x12, x20, x20
	addi x15, x0, 1231
	addi x4, x0, -1306
	addi x31, x0, -732
	sltu x11, x4, x31
	divuw x25, x2, x2
	addi x16, x0, -265
	addi x20, x16, -1575
	addi x5, x0, 561
	mul x1, x21, x21
	sraw x6, x26, x5
	addi x28, x17, 0
	addi x3, x28, 0
	slti x11, x8, -340
	addi x6, x0, -1439
	addi x29, x0, 1729
	sll x30, x30, 63
	srlw x31, x16, x29
	addi x2, x0, 564
	addi x19, x0, -1
	remuw x8, x27, x15
	or x25, x2, x2
	srl x21, x22, x0
	addi x11, x0, 1606
	addi x18, x0, -1896
	addi x15, x11, 1469
	la x26, test_memory+2544
	slt x4, x29, x29
	lw x14, 1868(x7)
	la x25, test_memory+1651
	remuw x5, x6, x6
	addi x13, x0, -1
	addi x10, x0, -179
	la x27, test_memory-1033
	sw x31, -1528(x26)
	xor x13, x13, x17
	sraw x1, x13, x13
	mulhu x5, x28, x28
	la x8, test_memory+786
	xor x19, x19, x30
	subw x29, x27, x27
	and x24, x14, x13
	and x9, x0, x19
	lh x31, -723(x25)
	addi x3, x0, -1724
	addi x14, x0, -1531
	addi x6, x0, -1970
	sb x0, 1130(x27)
	srl x12, x18, x10
	addi x28, x0, 137
	xori x11, x0, -5
	remu x20, x30, x9
	or x23, x12, x17
	addi x26, x0, -520
	addi x27, x0, 1672
	or x15, x1, x1
	subw x4, x28, x28
	divw x29, x26, x27
	or x22, x9, x30
	addi x16, x0, -1233
	beq x24, x23, crash_forward
	addi x2, x6, -670
	addi x5, x0, 647
	addi x18, x0, 488
	subw x21, x31, x27
	divw x7, x3, x14
	divuw x9, x30, x30
	blt x0, x0, crash_backward
	bge x2, x6, crash_backward
	addi x22, x0, 1057
	addi x11, x0, 1
	addi x10, x5, 1772
	mulhsu x12, x16, x18
	sll x11, x11, 63
	addi x4, x0, 1713
	sh x19, 146(x8)
	and x19, x6, x6
	addi x26, x0, 0
	srai x1, x1, 36
	addi x17, x0, 0
	addi x15, x22, 727
	addi x30, x0, 1
	bltu x15, x22, crash_backward
	divw x28, x4, x4
	sll x30, x30, 63
	addi x9, x0, 1
	addi x23, x0, -1
	addi x19, x0, -769
	addi x20, x0, -1
	addi x8, x0, 1
	xor x23, x23, x30
	sll x9, x9, 63
	remuw x24, x5, x5
	addi x18, x0, -1
	sll x8, x8, 63
	xor x20, x20, x11
	and x13, x19, x23
	addi x25, x19, -1764
	addi x3, x15, 0
	addi x2, x0, -1
	or x29, x13, x30
	xor x2, x2, x8
	xor x18, x18, x9
	and x12, x17, x18
	beq x19, x25, crash_forward
	addi x31, x3, 0
	blt x3, x31, crash_forward
	or x6, x0, x9
	and x16, x16, x2
	or x10, x16, x8
	and x27, x24, x20
	or x21, x27, x11
	divuw x28, x22, x18
	srlw x26, x18, x26
	bltu x10, x16, crash_backward
	addi x14, x0, 1
	sll x14, x14, 63
	addi x30, x0, -1
	addi x6, x0, 1
	addi x19, x0, 1
	addi x23, x0, 318
	sll x19, x19, 63
	addi x1, x0, 478
	remu x22, x23, x23
	addi x25, x0, -1
	xor x25, x25, x19
	sll x6, x6, 63
	or x18, x1, x1
	addi x9, x0, 898
	bge x21, x27, crash_forward
	xor x30, x30, x14
	addi x12, x0, 181
	and x3, x10, x30
	or x4, x9, x12
	addi x23, x0, -868
	addi x26, x0, -1886
	addi x29, x0, -1
	sra x18, x24, x24
	sltiu x13, x24, 1475
	addi x4, x26, -705
	sll x10, x20, x20
	xor x29, x29, x6
	remuw x16, x25, x25
	and x24, x22, x25
	divu x9, x28, x26
	and x31, x31, x29
	or x17, x24, x19
	la x28, test_memory+1493
	la x18, test_memory+1274
	addi x5, x30, 0
	addi x11, x23, -677
	bltu x17, x24, crash_forward
	lh x10, -1024(x18)
	addi x1, x0, 1482
	sub x9, x28, x28
	div x27, x5, x5
	la x2, test_memory+1256
	addi x8, x5, 0
	divw x10, x8, x4
	addi x27, x0, 1
	bgeu x4, x26, crash_backward
	sll x27, x27, 63
	sraw x10, x10, x28
	bne x5, x8, crash_backward
	addi x21, x0, 74
	addi x26, x0, -1423
	div x22, x1, x21
	add x4, x26, x26
	la x12, test_memory+422
	addi x13, x0, 948
	slli x9, x25, 40
	sh x22, -856(x2)
	sb x20, 459(x12)
	sll x18, x6, x6
	lhu x20, -609(x28)
	or x15, x1, x6
	sraiw x23, x9, 18
	addi x11, x0, -838
	remw x12, x14, x14
	or x7, x3, x14
	addi x1, x0, -1118
	addi x28, x0, -1305
	add x19, x13, x13
	and x22, x0, x0
	sll x16, x13, x13
	sra x9, x11, x28
	addi x4, x0, -42
	srlw x20, x26, x12
	addi x21, x0, -995
	addi x24, x0, -1
	rem x8, x1, x21
	addi x10, x31, 0
	addi x21, x0, 1979
	sll x23, x27, x27
	addi x2, x0, -925
	addi x8, x0, -63
	mulh x15, x21, x21
	addi x28, x0, 1
	srlw x11, x7, x7
	addi x12, x0, -241
	addi x29, x0, -372
	sll x28, x28, 63
	mulhu x6, x4, x29
	addi x23, x0, 1
	addi x26, x10, 0
	xor x24, x24, x27
	addi x9, x0, 1493
	bltu x10, x26, crash_backward
	addi x5, x0, 1880
	and x17, x17, x24
	sltu x18, x2, x5
	addi x31, x0, -1
	xor x31, x31, x28
	and x22, x24, x31
	addi x19, x0, 115
	addw x13, x9, x19
	or x20, x22, x28
	bltu x7, x3, crash_forward
	sll x23, x23, 63
	bge x20, x22, crash_backward
	add x16, x8, x12
	addi x21, x0, -1
	xor x21, x21, x23
	or x25, x17, x27
	and x15, x24, x21
	blt x17, x25, crash_backward
	or x1, x15, x23
	blt x15, x1, crash_forward
	la x11, test_memory-407
	sub x4, x28, x30
	la x26, test_memory+2202
	addi x7, x0, 0
	sllw x19, x31, x11
	mulhsu x14, x31, x19
	sra x18, x14, x14
	addi x17, x0, -1124
	addi x15, x0, 642
	addi x12, x0, -1686
	srlw x28, x2, x2
	sw x17, 683(x11)
	sraw x13, x19, x19
	addi x9, x0, 1763
	addi x31, x17, -1823
	la x25, test_memory+2663
	la x3, test_memory-794
	divu x4, x12, x12
	blt x17, x31, crash_forward
	addi x24, x0, -1430
	addi x6, x0, 0
	srliw x2, x2, 24
	remw x11, x29, x27
	addi x22, x0, 611
	slt x19, x14, x11
	la x5, test_memory-408
	addi x18, x0, -260
	addi x13, x0, -1407
	mulw x14, x18, x13
	remw x28, x26, x29
	sb x9, -1469(x26)
	addi x27, x0, 1
	lw x21, 1268(x5)
	divuw x10, x24, x24
	div x16, x9, x22
	divw x8, x10, x23
	addi x11, x0, 1
	or x29, x15, x12
	lhu x23, -1801(x25)
	sb x19, 1652(x3)
	sll x27, x27, 63
	addi x14, x0, 1
	sll x11, x11, 63
	sll x18, x10, x10
	sll x14, x14, 63
	addi x10, x0, -1
	addi x28, x0, -976
	la x9, test_memory+160
	addi x7, x0, -1137
	xor x10, x10, x14
	addi x1, x0, -1
	mulhsu x29, x28, x28
	and x19, x20, x10
	mulhu x28, x25, x25
	addi x24, x0, 1416
	or x8, x8, x14
	addi x23, x0, 1
	divw x29, x27, x24
	addi x6, x0, 1
	xor x1, x1, x27
	addi x12, x0, 486
	and x21, x7, x12
	addi x15, x0, 707
	sll x6, x6, 63
	addi x31, x0, -1
	bgeu x19, x8, crash_backward
	and x30, x20, x1
	sll x23, x23, 63
	addi x25, x0, -1
	xor x25, x25, x6
	lwu x5, -28(x9)
	or x20, x30, x27
	and x4, x15, x25
	bltu x20, x30, crash_backward
	srlw x3, x24, x15
	xor x31, x31, x11
	or x22, x4, x6
	addi x26, x0, -1
	bltu x22, x4, crash_forward
	xor x26, x26, x23
	and x17, x11, x31
	or x2, x17, x11
	and x13, x30, x26
	or x16, x8, x23
	blt x17, x2, crash_forward
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x7d4c7944927e150d
reg_x1_init:	.dword 0xa9e15cdc91f6e014
reg_x2_init:	.dword 0xa691126820383c50
reg_x3_init:	.dword 0x49ee48dc40ffca33
reg_x4_init:	.dword 0xcfb63c1924b4cacb
reg_x5_init:	.dword 0xc6f818d68e6da247
reg_x6_init:	.dword 0xf85f0c2dc7d68dc3
reg_x7_init:	.dword 0xaaf6bacb6c1860d3
reg_x8_init:	.dword 0xceb1db99ef1d2433
reg_x9_init:	.dword 0xf87cd1ffe43dfcd1
reg_x10_init:	.dword 0xfc387f2a6028f231
reg_x11_init:	.dword 0x0000000000000000
reg_x12_init:	.dword 0x0000000000000005
reg_x13_init:	.dword 0xa76dd0cddf6310ce
reg_x14_init:	.dword 0x0000000000000000
reg_x15_init:	.dword 0xffffffffffffffff
reg_x16_init:	.dword 0x0800000000000004
reg_x17_init:	.dword 0xffffffffffffffff
reg_x18_init:	.dword 0xffffffffffffffff
reg_x19_init:	.dword 0xffffffffffffff88
reg_x20_init:	.dword 0x0000000000000000
reg_x21_init:	.dword 0x0000000000000000
reg_x22_init:	.dword 0x5dfefa16167d3abe
reg_x23_init:	.dword 0xffffffffffffff82
reg_x24_init:	.dword 0x5b9db3dec175c4c7
reg_x25_init:	.dword 0xffffffffffffff86
reg_x26_init:	.dword 0xffffffff80000005
reg_x27_init:	.dword 0xf9a97150e98c41d8
reg_x28_init:	.dword 0x5281edbadd0316bc
reg_x29_init:	.dword 0xffffffff80000005
reg_x30_init:	.dword 0xbec36050266c8bf1
reg_x31_init:	.dword 0x4ec38ed161616ede

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x546dcbff06784a7a
reg_x1_output:	.dword 0xf5241148d4f3f267
reg_x2_output:	.dword 0xebbacbdb3a374b23
reg_x3_output:	.dword 0x9704869d250da4ec
reg_x4_output:	.dword 0x3f5e3cc3a9077597
reg_x5_output:	.dword 0x7d31807af40d1ad7
reg_x6_output:	.dword 0x4c74cd0b37933bdb
reg_x7_output:	.dword 0xa97f0e405332d6bc
reg_x8_output:	.dword 0x276fe2df8cb96da4
reg_x9_output:	.dword 0x71479666619aa08f
reg_x10_output:	.dword 0x5699ce60f4761c0d
reg_x11_output:	.dword 0x5918822a6a25f27b
reg_x12_output:	.dword 0x581c97d2acc98484
reg_x13_output:	.dword 0x7b0b7f6f1edfdef1
reg_x14_output:	.dword 0x1eb0ee2d802e3705
reg_x15_output:	.dword 0xc1577ce27470c403
reg_x16_output:	.dword 0x9e6ef9dd9c8eeb8b
reg_x17_output:	.dword 0xa9b2c45d02c95ff1
reg_x18_output:	.dword 0xfa9317c7afbfbac2
reg_x19_output:	.dword 0xabd1d79042921b04
reg_x20_output:	.dword 0x91a4c08a3285ae00
reg_x21_output:	.dword 0x43e4f2de2a649a9a
reg_x22_output:	.dword 0x978e20075c72da76
reg_x23_output:	.dword 0xb3b05a8390a2f182
reg_x24_output:	.dword 0x79172121dc8c7ba2
reg_x25_output:	.dword 0xd7f9d5ffe0210189
reg_x26_output:	.dword 0x421ef1c83813c108
reg_x27_output:	.dword 0xa6c7fdaf8409e254
reg_x28_output:	.dword 0x4c1b4333a1214320
reg_x29_output:	.dword 0xa3963eb86bb46170
reg_x30_output:	.dword 0xb514ca6d6d4e5391
reg_x31_output:	.dword 0x8b6ab928f6b6efa7

// Memory Blocks
	.align 8
test_memory:
	.dword 0x6cccc512c0a69ca0, 0xc9e95c5dddbc8f95
	.dword 0xee2f865be5cfc3e2, 0xb451e5a97aa1997a
	.dword 0x2af4505780fc0439, 0xb60ca52f73786850
	.dword 0x768afd7bdb17f2fd, 0x56442d0fdd834420
	.dword 0xd07c3e5cecf2e478, 0x75484ec9a0321d91
	.dword 0x45696fbb4a24a398, 0x25590ade3a07eec1
	.dword 0xf5254cc1386a70df, 0xcb3e56b42334d557
	.dword 0xe42f0189fd607c9e, 0x99fbdcbb50ef39d8
	.dword 0x1b6d61e7091c5061, 0x403e1ad3d267983a
	.dword 0xc2a0485f237fdbad, 0xa01082eff9d7bdb6
	.dword 0x24da61761b6417e8, 0x704281f6eae78fe2
	.dword 0xbab5e731d5357798, 0x9cdb90eaf8aeb0fe
	.dword 0x001b10d9998b94d0, 0x6f5cb44cca3b958d
	.dword 0x9b973b007ee8d2e6, 0xea900dbf69fddf27
	.dword 0x0fb00bc20365e769, 0x2e8d63e9ebfb108d
	.dword 0x338e174aded87e51, 0x22a4c4a14591eefd
	.dword 0x2c0ec89fb3436d78, 0x6a4ea545e90224c8
	.dword 0xb90592992b522b49, 0xd253256c2c32f921
	.dword 0xd070ad2be4887cb6, 0xd25057bdfe8d3136
	.dword 0xa2e5e2f0ffea8e6f, 0x7ee1b51dd2696e84
	.dword 0xf5c032e09f70ed50, 0xc8291e1054d59e67
	.dword 0xf8df4a60e3df121a, 0x319c0e58df894ef0
	.dword 0x5b561b7f14ca7465, 0x48fde6e2d609fcfa
	.dword 0xe4761379970b58d5, 0x1d9a71e3057daf7f
	.dword 0x8178b586c3afce8c, 0x5462053ce7bb7427
	.dword 0xd3e19dd1d61c8fdf, 0x53bae7266b0e9122
	.dword 0x65cf30c23a8eba4b, 0x68f1d90ac21a8036
	.dword 0xd0107a80f1ec91a9, 0xe36decb13f9b071b
	.dword 0x263b02bb6402c2a1, 0x7d6a079c719d0106
	.dword 0xbf6398a4692ed85c, 0x3938b8b57481ad83
	.dword 0x0ac95b40174ed97d, 0x333d4425c8e79887
	.dword 0x2ef281ddaed94050, 0x060f098825b16fc5
	.dword 0x1baea8e5137fc244, 0xddeaa83faa145940
	.dword 0xe46aa6d26af29a96, 0x7ce68626301c9f21
	.dword 0x547e2d7fa3814c4f, 0x60969c6617b0c4ca
	.dword 0xeadbbba9ceb10f70, 0x3e25aeaad208592a
	.dword 0xba0fa2ade8b05d6a, 0xd1a850796f0d1a52
	.dword 0x05032493081250d3, 0xdad05cd9f6723e48
	.dword 0x14c4ee4d30b3cc57, 0x4a6dc43c06b6f51b
	.dword 0x6fe8723f7c579cec, 0x7393d498fa067837
	.dword 0xd521e6ffcaa60b49, 0x47085fd82d393afa
	.dword 0xa8dcee61340f9098, 0x9a1464734d601086
	.dword 0xb4e828ad86d9a269, 0x81241c592d7b5ad8
	.dword 0x7a303833ce97c9ea, 0x451e9614558d9719
	.dword 0xfb28f9036bc27a55, 0x3e3b3c2d8f59db34
	.dword 0xea2bf0f566405aa9, 0x5a9deed1511418a8
	.dword 0xe5ff3bee31cdf69c, 0xa06893ad4452389e
	.dword 0xc8287864097b0acf, 0x0c7b401cd4ea653e
	.dword 0xa0e37820c733e043, 0xa70a618bd15c143d
	.dword 0x7bccb946d0c06b0b, 0x07c48814aa26a6ba
	.dword 0x5acbeb95740a2043, 0x32b7b768d049b24a
	.dword 0x6acb05e82414b740, 0x3fc061f572584751
	.dword 0x838ab00336254a08, 0x8e4a72445449c893
	.dword 0xc1ad049276568904, 0xf0cf06a17dc8280a
	.dword 0xf41bef6a938ff5f3, 0xb4ffc2ffd6649cf9
	.dword 0xac80ac1697c15a22, 0x513add1cac192741
	.dword 0xc9d6289171a2ebd9, 0xcbf146e5500e73f2
	.dword 0x1478504cc44dd718, 0x485a9b150502f724
	.dword 0x08ae837b76081d83, 0x0b68b02113294f08
	.dword 0xc7cfbe8bbdda019a, 0x6ea6f555f4214439
	.dword 0xad0335f51632712c, 0xa2cffe41c00ffb57
	.dword 0x89886a319543230d, 0x8ba5e052b8112bd6
	.dword 0xb19df80cc1145c06, 0xf84046bd73847013
	.dword 0xe6cea91f40db8f0c, 0xc0cd60a0a25702a8

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
