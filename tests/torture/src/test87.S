// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	xor x5, x26, x14
	addi x4, x0, -790
	ori x27, x9, 437
	addi x10, x0, -1644
	addi x24, x0, 832
	sltu x14, x10, x24
	addi x12, x0, -1687
	la x13, test_memory-1386
	la x17, test_memory-1423
	la x16, test_memory+1009
	addi x29, x0, -620
	sraw x1, x24, x24
	sw x25, 1875(x17)
	la x3, test_memory+808
	mul x25, x24, x24
	addi x2, x4, -919
	blt x4, x2, crash_forward
	mulw x22, x29, x29
	addi x24, x0, -62
	addi x21, x0, -1393
	addi x6, x0, -543
	addi x27, x0, 1
	addi x31, x0, -1852
	la x23, test_memory+468
	la x1, test_memory-480
	la x5, test_memory+2135
	sb x20, 1618(x13)
	sll x27, x27, 63
	sb x15, -161(x16)
	slt x7, x29, x29
	subw x25, x24, x24
	lwu x18, -340(x3)
	addi x29, x0, 1
	addw x26, x12, x31
	sll x29, x29, 63
	addi x2, x0, -1
	sltiu x20, x2, -1018
	xor x2, x2, x29
	srlw x19, x6, x6
	sb x31, 0(x23)
	addi x9, x0, 804
	addi x12, x0, 1498
	addi x11, x0, 1824
	sd x14, -1439(x5)
	mul x22, x28, x27
	addi x4, x0, 1
	addi x26, x0, -756
	addi x14, x0, -1
	lbu x28, 993(x1)
	sll x4, x4, 63
	or x31, x12, x26
	addi x25, x0, -1
	xor x14, x14, x27
	and x17, x3, x14
	and x16, x8, x2
	mulh x30, x9, x11
	xor x25, x25, x4
	and x13, x6, x25
	mulhu x28, x28, x28
	addi x8, x0, -352
	la x5, test_memory+46
	or x24, x13, x4
	la x30, test_memory+2082
	la x1, test_memory+1633
	sh x18, -1361(x1)
	addi x23, x0, 325
	addi x3, x0, 1239
	la x19, test_memory+227
	addi x31, x0, 592
	or x10, x17, x27
	sll x26, x31, x31
	bltu x10, x17, crash_forward
	addi x6, x0, 1
	sb x28, 561(x19)
	mulhu x15, x21, x8
	sll x6, x6, 63
	addi x9, x0, -1
	addi x14, x0, -1293
	lbu x11, -1350(x30)
	addi x10, x14, -1819
	addi x20, x23, 1035
	addi x12, x3, 1858
	lh x22, 228(x5)
	bltu x20, x23, crash_backward
	addi x27, x0, 1
	addi x12, x0, -1600
	or x7, x16, x29
	addi x3, x0, 185
	addi x8, x0, 0
	blt x16, x7, crash_backward
	xor x9, x9, x6
	addi x24, x0, -1033
	srai x20, x4, 55
	sll x17, x25, x27
	and x28, x31, x9
	addi x16, x0, 683
	addi x1, x0, 972
	addi x4, x0, 1302
	remw x25, x24, x1
	subw x11, x24, x24
	addi x5, x0, 1
	srli x15, x16, 25
	mulhu x22, x20, x20
	sra x13, x12, x4
	sll x5, x5, 63
	addi x1, x0, -1
	addi x7, x0, -696
	or x18, x0, x6
	xor x1, x1, x5
	sll x27, x27, 63
	xor x2, x16, x7
	addi x19, x0, -1
	beq x14, x10, crash_backward
	addi x30, x0, 0
	bltu x0, x0, crash_forward
	addi x17, x0, -366
	sltiu x12, x23, -1157
	or x13, x24, x24
	addi x23, x0, -205
	and x24, x28, x1
	or x20, x24, x5
	divu x25, x16, x16
	beq x24, x20, crash_backward
	addi x7, x0, 223
	addi x12, x0, -342
	xor x19, x19, x27
	addi x9, x0, 1
	addi x15, x0, 342
	add x2, x7, x7
	addi x5, x0, 1
	divuw x29, x7, x7
	mulhu x22, x15, x15
	sll x9, x9, 63
	addi x10, x0, -1
	addi x13, x0, 1370
	sll x5, x5, 63
	addi x4, x0, -217
	addi x8, x0, -1
	srlw x11, x17, x4
	and x26, x9, x19
	or x31, x26, x27
	la x20, test_memory+2680
	xor x10, x10, x9
	remuw x14, x12, x12
	bge x31, x26, crash_forward
	la x16, test_memory-191
	xor x8, x8, x5
	lh x25, -1932(x20)
	slli x19, x0, 38
	mulh x2, x13, x31
	and x1, x17, x8
	sub x21, x3, x23
	addi x29, x0, 1194
	la x26, test_memory+912
	addi x28, x13, 225
	beq x13, x28, crash_backward
	and x6, x7, x10
	addi x13, x0, 1209
	addi x24, x29, 365
	sb x23, -223(x26)
	addi x27, x0, -1282
	sh x6, 937(x16)
	addi x23, x0, 1912
	addi x12, x0, -1563
	or x30, x1, x5
	bltu x0, x0, crash_backward
	subw x21, x23, x23
	addi x4, x0, 1349
	addi x17, x0, 1601
	slt x11, x27, x4
	mulhsu x31, x20, x20
	addi x7, x0, 280
	or x18, x6, x9
	srl x2, x17, x17
	beq x6, x18, crash_backward
	xor x31, x19, x28
	addi x18, x0, -1649
	blt x1, x30, crash_backward
	addi x22, x0, 1793
	addi x9, x18, -853
	addi x20, x0, -1361
	addi x23, x0, 1549
	addi x3, x0, -496
	addi x16, x0, 1
	sltu x14, x12, x12
	mulw x19, x13, x3
	sltu x6, x20, x20
	blt x0, x0, crash_forward
	blt x18, x9, crash_forward
	sll x16, x16, 63
	addi x2, x0, -1575
	div x21, x23, x23
	addi x11, x2, -1185
	addi x12, x0, 1543
	rem x20, x9, x9
	addi x3, x0, 907
	addi x19, x0, 1352
	remu x13, x12, x3
	addi x23, x26, 756
	la x8, test_memory-995
	addi x28, x0, -1
	divu x24, x19, x19
	addi x27, x0, -1488
	sw x27, 1863(x8)
	xor x28, x28, x16
	slt x6, x31, x31
	addi x30, x0, 118
	addi x10, x0, 601
	and x26, x4, x28
	or x25, x7, x16
	addw x17, x10, x10
	addi x3, x0, 1056
	addi x6, x0, 372
	divu x4, x27, x27
	div x15, x7, x22
	remu x1, x30, x30
	beq x26, x25, crash_backward
	la x2, test_memory+2067
	la x10, test_memory+551
	divu x19, x19, x19
	and x12, x3, x3
	addi x21, x0, 0
	la x22, test_memory+1505
	sh x1, -1417(x2)
	la x8, test_memory+314
	addi x23, x0, 932
	la x2, test_memory-1784
	addi x14, x0, 1
	lbu x19, 1796(x2)
	addi x5, x0, -505
	sd x15, -55(x10)
	addi x11, x0, 1698
	sw x27, 354(x8)
	remuw x27, x5, x19
	addi x16, x0, -1056
	mulw x24, x6, x11
	slliw x15, x21, 18
	addi x29, x0, 0
	la x4, test_memory-563
	addi x8, x0, 1
	sll x8, x8, 63
	addi x17, x0, 1569
	divu x13, x23, x5
	sll x14, x14, 63
	sra x20, x17, x17
	la x28, test_memory-392
	addi x19, x0, -1
	srliw x7, x26, 21
	xor x12, x2, x2
	lh x26, -925(x22)
	addi x18, x0, -1
	divw x25, x5, x5
	sh x3, 1143(x4)
	remu x1, x16, x16
	xor x19, x19, x8
	and x3, x28, x19
	xor x18, x18, x14
	or x10, x3, x8
	and x31, x7, x18
	lwu x30, 1032(x28)
	or x9, x21, x14
	addi x3, x0, 1
	blt x0, x0, crash_backward
	addi x16, x0, 1
	addi x25, x0, 0
	addw x24, x12, x12
	addi x15, x0, 425
	addi x11, x0, -1867
	addi x22, x0, 0
	addi x27, x0, -1500
	addi x13, x0, 958
	addi x10, x0, -136
	bltu x25, x22, crash_backward
	sllw x1, x27, x27
	addi x6, x0, -1724
	divw x8, x15, x20
	sll x3, x3, 63
	addi x4, x0, -1
	sraw x18, x13, x13
	addi x19, x15, 93
	ori x7, x14, 1393
	sub x12, x28, x28
	rem x26, x10, x6
	sll x16, x16, 63
	div x14, x11, x11
	remw x17, x0, x0
	addi x31, x0, -1837
	addi x29, x0, -1
	xor x29, x29, x16
	xor x4, x4, x3
	addi x7, x9, 0
	sra x2, x19, x0
	divu x27, x3, x3
	addi x25, x0, 1844
	div x12, x17, x9
	and x23, x28, x29
	and x5, x11, x4
	addi x24, x7, 0
	addi x17, x0, 1
	mul x20, x31, x31
	addw x14, x25, x25
	or x28, x5, x3
	addi x11, x0, 0
	srai x1, x9, 46
	mulhsu x8, x6, x26
	sub x2, x18, x18
	lui x19, 401718
	beq x5, x28, crash_forward
	addi x25, x0, 569
	xor x12, x12, x12
	addi x8, x0, 996
	sll x17, x17, 63
	sll x27, x30, x30
	mul x20, x25, x25
	addi x21, x0, 1
	addi x22, x0, -1
	addi x2, x0, 1646
	sll x21, x21, 63
	xor x22, x22, x17
	addi x19, x0, 391
	and x10, x16, x22
	addi x31, x0, -1824
	mulw x15, x8, x2
	subw x27, x26, x26
	addi x3, x0, -1921
	addi x18, x0, -1
	mulw x4, x19, x3
	addi x20, x0, 759
	addi x25, x0, 56
	or x30, x15, x16
	slti x15, x28, 1128
	la x8, test_memory+1956
	sllw x2, x26, x26
	xori x4, x17, -722
	addi x27, x25, 1430
	bge x25, x27, crash_backward
	xori x15, x28, 926
	addi x12, x0, 497
	sllw x15, x0, x0
	rem x24, x9, x9
	mulw x25, x2, x16
	sllw x14, x31, x31
	sub x30, x10, x10
	lwu x19, -1536(x8)
	addi x7, x0, 236
	addi x4, x0, 2046
	addi x27, x0, -1380
	addi x2, x0, -89
	div x23, x12, x12
	addi x9, x0, 0
	and x28, x24, x22
	sltu x14, x24, x24
	mul x16, x4, x4
	mulw x8, x27, x27
	or x31, x28, x28
	addi x19, x3, 0
	slliw x3, x18, 30
	xor x18, x18, x21
	addi x30, x0, 1
	or x6, x10, x17
	sll x30, x30, 63
	subw x29, x7, x2
	and x26, x28, x18
	or x13, x17, x21
	blt x26, x13, crash_forward
	div x1, x20, x12
	andi x4, x17, 350
	addi x13, x0, -740
	addi x7, x0, 799
	addi x23, x19, 0
	addi x1, x0, -852
	sra x31, x6, x6
	and x5, x20, x20
	addi x14, x0, -1058
	addi x20, x0, -869
	addi x9, x0, -1977
	sllw x2, x14, x14
	mul x28, x1, x1
	addi x27, x13, -830
	addi x24, x0, -1
	sra x29, x20, x20
	addi x5, x0, -1382
	srlw x1, x5, x5
	addi x26, x0, 1209
	addi x4, x0, -1396
	la x31, test_memory-455
	xor x24, x24, x30
	and x15, x29, x24
	addi x6, x0, 1170
	la x8, test_memory+2553
	lw x11, -1853(x8)
	addw x12, x26, x26
	or x25, x15, x30
	beq x13, x27, crash_backward
	sllw x18, x7, x9
	addiw x3, x27, 990
	blt x19, x23, crash_backward
	la x28, test_memory-1445
	div x22, x29, x29
	sra x1, x15, x27
	beq x15, x25, crash_forward
	la x26, test_memory-1556
	addi x18, x0, 837
	lh x11, 1784(x26)
	lh x2, 1957(x28)
	addiw x8, x12, -105
	addi x19, x0, 1917
	divu x12, x7, x7
	addi x21, x0, 1731
	la x20, test_memory+1750
	ld x5, 1255(x31)
	mulh x3, x19, x19
	la x31, test_memory-20
	or x13, x27, x17
	mulhu x23, x18, x18
	div x17, x6, x21
	addi x29, x0, -1888
	lw x2, 92(x31)
	addw x24, x15, x15
	ori x27, x20, -314
	addi x22, x0, 1
	sh x1, -844(x20)
	srlw x16, x4, x29
	addi x25, x0, -876
	addi x26, x0, -1791
	sll x22, x22, 63
	la x10, test_memory+2152
	lbu x14, -1682(x10)
	addi x1, x0, 0
	divw x12, x26, x26
	addi x30, x0, 0
	addi x9, x0, 1146
	addi x28, x0, -1
	remu x7, x9, x9
	xor x28, x28, x22
	bltu x1, x30, crash_backward
	and x11, x21, x28
	addi x5, x25, -1892
	bltu x25, x5, crash_backward
	or x15, x11, x22
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x0000000000000000
reg_x1_init:	.dword 0x01271e8418628f17
reg_x2_init:	.dword 0xffffffffffffffff
reg_x3_init:	.dword 0x75a388828eb1ee92
reg_x4_init:	.dword 0x354bf924db0690cb
reg_x5_init:	.dword 0x8a96d81e964739ef
reg_x6_init:	.dword 0x6755154840ea3c25
reg_x7_init:	.dword 0xffffffffffffffff
reg_x8_init:	.dword 0xffffffffffff8004
reg_x9_init:	.dword 0x5e60ee3ac6a5fead
reg_x10_init:	.dword 0x39360962b874cf39
reg_x11_init:	.dword 0xdb391ede7706a135
reg_x12_init:	.dword 0xa7667b588e6833f4
reg_x13_init:	.dword 0xffffffffffffff87
reg_x14_init:	.dword 0xe6a0b0f28ea20b90
reg_x15_init:	.dword 0xe7d41386eb09764d
reg_x16_init:	.dword 0x20aa08bfd801b2b5
reg_x17_init:	.dword 0x73dc59948e3c719e
reg_x18_init:	.dword 0xcaf6181dfe607678
reg_x19_init:	.dword 0xfccd468540044ad9
reg_x20_init:	.dword 0x0000000000000008
reg_x21_init:	.dword 0x0000000000000000
reg_x22_init:	.dword 0x070689afe2640c0c
reg_x23_init:	.dword 0x7bca69f110901f13
reg_x24_init:	.dword 0x3f0e711032f6582a
reg_x25_init:	.dword 0xfffffffffffffffb
reg_x26_init:	.dword 0x0800000000000000
reg_x27_init:	.dword 0x0000000000000000
reg_x28_init:	.dword 0xb4867567d31d6bfe
reg_x29_init:	.dword 0x0000000000000000
reg_x30_init:	.dword 0xc3183af8bcd91b04
reg_x31_init:	.dword 0x77c85ac92b85717a

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0xccd0a7e9cd87ee6a
reg_x1_output:	.dword 0xd840bb047082fe61
reg_x2_output:	.dword 0x2d7667488f746b7c
reg_x3_output:	.dword 0xe474b2497c4338e5
reg_x4_output:	.dword 0xe650b4bfe123c719
reg_x5_output:	.dword 0xfc3c995df458824c
reg_x6_output:	.dword 0x5ee9f886f685431d
reg_x7_output:	.dword 0x7342e68cd484fc80
reg_x8_output:	.dword 0x558b19307a15500d
reg_x9_output:	.dword 0x5bfb4a699f9d6a17
reg_x10_output:	.dword 0x01c4c1d466532934
reg_x11_output:	.dword 0xf22e8323065fa11d
reg_x12_output:	.dword 0x8d8a578dadb18f0f
reg_x13_output:	.dword 0xf01f911c65f6e616
reg_x14_output:	.dword 0x3d02522d3bee43ea
reg_x15_output:	.dword 0xd9f720bacd3c7342
reg_x16_output:	.dword 0x4f36ec242c522eca
reg_x17_output:	.dword 0x989b3d7f23e2b022
reg_x18_output:	.dword 0x250d5dc52c16488d
reg_x19_output:	.dword 0xe0e6a256b49ddd3b
reg_x20_output:	.dword 0xef9917adf547b750
reg_x21_output:	.dword 0x6f943b3113453819
reg_x22_output:	.dword 0x1e43b0834f47bc10
reg_x23_output:	.dword 0x7a68abcfbe13db96
reg_x24_output:	.dword 0x079979dca4aa5693
reg_x25_output:	.dword 0x556cefe20de0e05b
reg_x26_output:	.dword 0x1015f080bd00c388
reg_x27_output:	.dword 0xfcaa6850f09a81a7
reg_x28_output:	.dword 0x904a7bd3a24b38ed
reg_x29_output:	.dword 0x5909e9d96bc84a4f
reg_x30_output:	.dword 0x526d308def9f84b0
reg_x31_output:	.dword 0xe6fca0da2e948e05

// Memory Blocks
	.align 8
test_memory:
	.dword 0x06048aae5f487199, 0x28aede6e3c1db2dc
	.dword 0x0a4052ad347c1666, 0xa0f222be63d40f0b
	.dword 0x6bdf21f63e057337, 0x290cf8914eb15ef0
	.dword 0x9d833a947e20012c, 0x4f74762519631758
	.dword 0xf050a62bb68a184c, 0x295c7742055117fd
	.dword 0x01d9d02e08bd4fa8, 0x0a48e48ac0fe824f
	.dword 0x82ff0f46c78a3bbf, 0xec9b9c162bdab877
	.dword 0xecb8d21963472f24, 0xd1bfcf3e9674c898
	.dword 0xe30b632dca97e15d, 0xe94ce9b92663c857
	.dword 0x56de782899ce200e, 0x218855e4c95ae49d
	.dword 0x8c62003e5041ee57, 0xb24eb2659d08299b
	.dword 0x584ce5e37001b679, 0xe2e24cf4bdc9470e
	.dword 0x71d9b7c6bf2171bf, 0x74a5f6716d31d4c3
	.dword 0x1d306d02d4f9ea9b, 0xcda884389712db5d
	.dword 0xa12bb88f0f177d0e, 0xd75692be106ba556
	.dword 0x975b9ff5fba9f94d, 0xfced5d52eba81c43
	.dword 0xc50e494d203d8ca1, 0x53a2bf46d911365b
	.dword 0x9b433460cd9ed48e, 0x9923b23475983839
	.dword 0xf8fc532edb4a8037, 0xcd4bdd995d6dcee1
	.dword 0x4aa3b597bfeb2400, 0xff0e0ba5cf624600
	.dword 0x8973bc557f6e2375, 0xcbae97572a1c5e77
	.dword 0x0a3b07276c62d56a, 0xb7ee27c3d108891a
	.dword 0x0ab492533fe54662, 0x35d44cb65cba89b4
	.dword 0xc33fb74cb3883d34, 0xecaed07ced97c64e
	.dword 0xa74b04b299c865eb, 0xdcd3d3001840c6b0
	.dword 0xdc80217b95ccc6ee, 0xbb0202140594a828
	.dword 0xa6ee2f7098d6e460, 0x711b8310dc918989
	.dword 0x2a5360db650735c9, 0xf8ad61a27f013376
	.dword 0xf57db57c9840d1f5, 0xb87e97dcab1180e0
	.dword 0x0fc612c46941751c, 0x7e7f039317ec4bcc
	.dword 0xe1282b3beab14542, 0xfc1fdce78a5ae259
	.dword 0x2eace945963ff8e0, 0x09a48224d4bd4801
	.dword 0x5e0451083b1b43c4, 0xae93accc6b5dc71e
	.dword 0x4f870da47964ae35, 0x1f5e63eb9fad96b0
	.dword 0xdca71dab660b3a5a, 0x3bd33fb6aa7f985d
	.dword 0x9d5a52d319cf7bdb, 0x2449d250ab2272b8
	.dword 0x288098e8017f05c8, 0xcddb49ea678b8bc5
	.dword 0xecf338001ede52ba, 0x05baa00e6cd8a7bd
	.dword 0xd20985f1c7868b37, 0x920fea3ab786300d
	.dword 0x8a32bb08336ece5a, 0x68df9fb3141466a4
	.dword 0x600bddf29e2ee0b3, 0xb4bfe89443b6096e
	.dword 0xf153faff4683656b, 0x50ab4a24b1472a1b
	.dword 0xe2901a87057a05ac, 0xd961447141733e24
	.dword 0xed53aaa9fc2e2a3f, 0x90bab519e1ddab0e
	.dword 0x8939503e4a652b76, 0x4f611365ce9052f0
	.dword 0xcfe353045be31b4b, 0x30b4d99cb727e533
	.dword 0x8e1a191cfc3f8dc9, 0xa4a0af96a66df799
	.dword 0xda9265bc8b9403aa, 0x18dc2a8fbb8d2b80
	.dword 0x1d4c4f1cc7d3db41, 0x7ffa363dd40be366
	.dword 0x7c171fb63137eb9a, 0xfdcc7b256d7e4caf
	.dword 0xe0d596ab0a262dde, 0xdf6656297da8c1a6
	.dword 0xb7e13b85e6a018fc, 0x869f356543d7c7c1
	.dword 0x7fa2b92722c89386, 0xee9d6e3a26c32e28
	.dword 0xe96073f805bc9fd8, 0x15efe0a953a61078
	.dword 0xada3cf64cc08267e, 0xac4dfbe4cd8dc1c3
	.dword 0x17a8d68af5b282d7, 0x737af822fb7de3db
	.dword 0x62533c2e8574b5f5, 0x7d4259b519282ecf
	.dword 0x395ee5f10b6563c7, 0xd15111558cdaacb6
	.dword 0x6a3176c06b84fe7a, 0x9e0fcdc7662f6daa
	.dword 0x1c158c900256c41b, 0x4cd85299c834f817
	.dword 0xceffa549ad597280, 0x1d28e84cdf76f935
	.dword 0x1d87df040cfcd568, 0x1916399924c2f9d2
	.dword 0x81c307712fdf92e1, 0xa86d320bf8fd1b55
	.dword 0x8858ae9b7df2d9ea, 0xf4fbb1d5491520fe

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
