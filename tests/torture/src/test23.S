// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	remu x26, x1, x11
	addi x21, x0, 304
	mulhsu x23, x1, x29
	addi x12, x0, 115
	mulhsu x7, x12, x12
	addi x20, x0, -744
	addi x5, x12, 956
	sraiw x8, x10, 21
	sra x31, x20, x20
	addi x17, x0, -1413
	xor x9, x8, x8
	addi x18, x0, -1837
	mulhsu x28, x29, x1
	mulhu x14, x22, x7
	addi x2, x0, 766
	sll x4, x27, x16
	divw x6, x2, x2
	subw x23, x13, x6
	divw x27, x21, x21
	addi x1, x0, -246
	la x24, test_memory+1638
	sh x27, -1558(x24)
	mulw x31, x10, x4
	addi x16, x0, -586
	la x22, test_memory+1527
	sw x12, -1079(x22)
	addi x24, x0, -13
	la x30, test_memory-718
	andi x14, x3, 70
	div x8, x24, x24
	slt x25, x17, x27
	addi x31, x0, -370
	addi x27, x0, -565
	addi x12, x0, 1
	la x9, test_memory-1084
	blt x12, x12, crash_forward
	remw x21, x27, x27
	addi x29, x16, -1293
	sll x12, x12, 63
	addi x5, x0, -1
	xor x6, x31, x31
	sw x8, 1272(x9)
	addi x15, x0, -1976
	xor x5, x5, x12
	addi x26, x0, -93
	and x7, x11, x5
	remu x3, x1, x15
	or x23, x20, x12
	sub x13, x18, x26
	la x28, test_memory+75
	lb x19, 980(x30)
	addi x11, x0, 1806
	xor x10, x17, x11
	lb x2, 474(x28)
	addi x27, x0, 1947
	addi x4, x0, 611
	slli x16, x29, 55
	addi x2, x0, 160
	addi x20, x0, 1627
	xor x19, x4, x20
	la x13, test_memory+603
	addi x26, x0, -1895
	addi x31, x0, -884
	addi x25, x0, 1
	divu x24, x26, x26
	addi x23, x0, 0
	andi x1, x27, 1492
	srlw x17, x1, x22
	addi x22, x0, 457
	sltu x21, x27, x26
	addi x3, x0, -1826
	addi x30, x0, 0
	addi x19, x0, -1487
	mulw x10, x3, x3
	sll x25, x25, 63
	addi x15, x0, 1418
	add x8, x2, x22
	mulw x28, x31, x31
	mulh x18, x15, x15
	addi x20, x19, -162
	addi x4, x0, 1949
	addi x11, x0, -1
	addi x10, x0, -1166
	srl x9, x6, x19
	addi x5, x0, 342
	lhu x14, -575(x13)
	divuw x6, x5, x5
	blt x23, x30, crash_forward
	addi x26, x0, -1214
	addiw x17, x0, -1217
	addi x24, x0, 335
	mul x12, x9, x9
	xor x11, x11, x25
	srl x3, x4, x26
	addi x27, x10, -1523
	addi x20, x0, -1206
	and x14, x7, x7
	srlw x23, x12, x1
	mulw x8, x7, x7
	divuw x5, x17, x21
	divuw x1, x30, x30
	addw x28, x14, x6
	slti x30, x25, -1487
	xor x2, x6, x6
	ori x1, x27, -1357
	addi x31, x0, 133
	addi x30, x0, -795
	addi x21, x24, 1513
	addi x19, x0, -1532
	remu x15, x16, x16
	la x4, test_memory+972
	addi x2, x30, -1430
	addi x17, x0, 1696
	addi x5, x0, -983
	add x9, x17, x17
	addi x6, x20, -1110
	addi x22, x0, 385
	slt x13, x2, x2
	la x23, test_memory
	bgeu x24, x21, crash_forward
	rem x3, x19, x19
	divw x18, x19, x19
	add x26, x31, x22
	srl x24, x21, x21
	addi x3, x0, -31
	mulhsu x12, x1, x0
	sw x17, 12(x4)
	addi x1, x0, -364
	addi x9, x0, 1699
	or x8, x5, x1
	bltu x30, x2, crash_forward
	addi x27, x0, -176
	srlw x14, x19, x9
	sllw x16, x7, x7
	lhu x28, 72(x23)
	mulw x5, x19, x19
	sra x30, x26, x1
	remu x21, x27, x27
	addi x1, x0, 1
	sra x17, x3, x3
	addi x19, x0, 1515
	addi x20, x0, -1749
	addi x15, x9, 791
	addi x27, x0, 1
	addi x24, x0, -1861
	addi x22, x0, -1259
	addi x17, x0, 1
	la x6, test_memory+2081
	la x16, test_memory-818
	and x7, x3, x11
	sll x27, x27, 63
	sll x1, x1, 63
	mulhu x13, x15, x17
	or x29, x28, x25
	addi x12, x0, -1
	sll x17, x17, 63
	ld x18, -1457(x6)
	add x10, x19, x20
	sraw x8, x24, x22
	la x14, test_memory-164
	sh x21, 756(x14)
	addi x2, x0, -1
	xor x2, x2, x1
	lb x26, 1431(x16)
	xor x12, x12, x27
	addi x3, x0, -1
	and x4, x31, x2
	srlw x28, x18, x7
	xor x3, x3, x17
	and x30, x19, x3
	or x31, x12, x1
	and x5, x16, x12
	addi x28, x0, 1225
	addi x18, x0, 1658
	or x23, x30, x17
	addi x24, x0, -195
	la x8, test_memory-951
	divw x9, x28, x28
	lw x10, 1627(x8)
	addi x22, x0, -1611
	addi x14, x0, 157
	and x8, x5, x5
	sra x31, x31, x14
	sll x2, x18, x14
	sub x20, x22, x22
	addi x15, x0, -318
	or x21, x5, x27
	addi x26, x0, 762
	blt x7, x29, crash_forward
	addw x4, x24, x24
	divu x13, x28, x15
	la x1, test_memory-392
	lh x19, 1408(x1)
	addi x16, x0, 631
	sra x6, x26, x16
	addi x5, x0, -1642
	addi x26, x0, -777
	la x18, test_memory+1410
	or x27, x5, x5
	sltu x22, x29, x2
	la x29, test_memory-1103
	div x12, x26, x26
	addi x11, x0, -1040
	sra x9, x24, x8
	add x28, x8, x9
	addi x12, x0, 1696
	addi x5, x0, -935
	lwu x7, -1342(x18)
	mulw x9, x21, x21
	xor x26, x9, x3
	addi x8, x0, 573
	and x22, x12, x5
	addi x4, x0, 1631
	add x2, x11, x11
	addi x16, x0, -1552
	sraw x24, x8, x8
	sd x13, 1599(x29)
	addi x14, x0, -150
	addi x26, x0, 1772
	add x9, x22, x15
	addi x1, x0, -1138
	divu x22, x24, x24
	addi x31, x0, -44
	mulh x8, x26, x26
	addi x12, x8, 0
	div x13, x16, x31
	addi x2, x12, 0
	mulh x27, x8, x1
	or x19, x4, x14
	addi x22, x0, 622
	subw x7, x12, x0
	la x21, test_memory+848
	addi x30, x0, -1495
	addi x9, x0, -1582
	addi x23, x0, 693
	addi x16, x0, 1787
	addi x5, x0, -524
	addi x11, x0, 1822
	addi x18, x0, -828
	addi x13, x0, 268
	addi x24, x0, -210
	addi x15, x0, -780
	remu x17, x30, x30
	addi x20, x0, -1418
	mulhu x31, x9, x9
	addi x8, x0, 1206
	srlw x12, x9, x6
	addi x27, x0, -1156
	srlw x14, x16, x8
	divu x28, x18, x24
	addi x26, x27, -933
	divuw x3, x23, x23
	sh x8, -734(x21)
	addi x10, x0, 736
	sll x12, x5, x5
	addi x2, x0, -1146
	xor x29, x5, x15
	addi x28, x0, 259
	sraw x25, x20, x10
	addi x4, x0, 716
	rem x27, x14, x30
	addi x8, x0, 971
	addi x21, x0, -2024
	xor x19, x22, x13
	sub x26, x8, x8
	addi x3, x0, -1808
	sll x5, x19, x14
	xor x10, x6, x6
	sllw x7, x2, x4
	addi x20, x0, -1807
	addi x9, x28, 393
	srl x19, x0, x17
	addi x18, x0, 1
	srlw x6, x1, x11
	xor x5, x20, x20
	divu x14, x13, x15
	sra x16, x21, x3
	sll x18, x18, 63
	sraw x25, x24, x24
	addi x11, x0, -1401
	addi x1, x11, -758
	addi x20, x0, -754
	divu x27, x9, x23
	addi x7, x0, 1290
	addi x9, x0, -859
	addi x6, x0, -705
	addi x16, x0, -860
	slt x14, x16, x16
	addi x19, x0, 652
	addi x31, x0, -1044
	div x3, x9, x9
	subw x4, x28, x12
	addi x17, x0, -1515
	addi x2, x0, -1088
	addi x24, x0, -454
	addi x10, x2, -875
	addi x15, x0, -1
	or x23, x24, x24
	addi x16, x0, 1349
	xor x15, x15, x18
	addi x21, x0, 1888
	remw x5, x20, x6
	addi x27, x0, -772
	addi x10, x16, 586
	sra x28, x9, x19
	addw x8, x7, x7
	mulhsu x1, x16, x16
	addi x2, x0, 393
	addi x14, x0, 330
	remu x30, x31, x17
	srl x3, x19, x19
	subw x25, x21, x14
	mulh x11, x27, x2
	addi x26, x0, -379
	addi x22, x0, -1773
	addw x13, x26, x22
	and x12, x26, x15
	or x29, x7, x18
	remw x16, x22, x31
	addi x31, x0, -999
	addi x24, x0, 1477
	divu x11, x20, x20
	rem x16, x12, x29
	la x4, test_memory+1308
	lh x12, -340(x4)
	divw x26, x17, x25
	rem x9, x18, x16
	sra x18, x31, x31
	addi x20, x0, 1892
	la x8, test_memory-1754
	addi x17, x0, -1114
	addi x29, x0, 1049
	addi x7, x0, 1754
	addi x23, x0, -1767
	addi x2, x0, -779
	subw x25, x20, x29
	addi x30, x0, 569
	mulhu x16, x15, x15
	addi x26, x0, 1
	sll x26, x26, 63
	addi x6, x7, 1181
	addi x12, x0, -1
	xor x5, x31, x17
	div x22, x18, x18
	addi x13, x0, 1
	bne x0, x0, crash_backward
	remw x27, x24, x23
	slt x11, x11, x18
	sd x28, 1938(x8)
	sll x13, x13, 63
	addi x10, x0, -1
	addi x28, x0, -1994
	xor x12, x12, x26
	and x4, x0, x12
	xor x10, x10, x13
	mulhu x19, x30, x30
	and x15, x9, x10
	remw x1, x2, x2
	or x18, x23, x26
	slti x1, x5, 1476
	mulhsu x16, x23, x23
	or x14, x15, x13
	addi x2, x0, 743
	mulh x5, x12, x12
	addi x25, x0, -201
	addi x8, x0, 687
	remu x6, x2, x8
	mulhu x7, x15, x12
	addi x9, x0, 563
	divuw x20, x11, x11
	addi x30, x0, -1196
	addi x18, x0, 1
	addi x11, x9, 702
	sll x18, x18, 63
	addi x22, x0, 1550
	addi x19, x0, -53
	divu x23, x5, x26
	addi x27, x30, -526
	divu x24, x22, x22
	add x17, x25, x19
	addi x16, x0, -1
	xor x16, x16, x18
	and x12, x1, x16
	addi x21, x0, -1620
	or x4, x9, x18
	addi x31, x0, 309
	srlw x3, x28, x21
	addi x29, x31, 1459
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0xc701f69a2613ddb6
reg_x1_init:	.dword 0x0000000000000008
reg_x2_init:	.dword 0xffffffffffff8009
reg_x3_init:	.dword 0x56dc65aa09d8526b
reg_x4_init:	.dword 0x07a606d60917acd3
reg_x5_init:	.dword 0xd1b69487233a6965
reg_x6_init:	.dword 0xe6a6ac9be86339a3
reg_x7_init:	.dword 0xcd9ece0c905d57c4
reg_x8_init:	.dword 0x051816b6cc08389d
reg_x9_init:	.dword 0xffffffffffffffff
reg_x10_init:	.dword 0xf4b6bab100ad9c54
reg_x11_init:	.dword 0x4eeede6e44eadc6b
reg_x12_init:	.dword 0x8fd9fb282e010cdc
reg_x13_init:	.dword 0x2ab3582d006fb2ca
reg_x14_init:	.dword 0x73bb5e6855c16f32
reg_x15_init:	.dword 0x1c831a436707a7ec
reg_x16_init:	.dword 0x0000000000000000
reg_x17_init:	.dword 0x0800000000000003
reg_x18_init:	.dword 0x1d92642fc4b12333
reg_x19_init:	.dword 0x89ed42c32ca7fea3
reg_x20_init:	.dword 0x03f61432d9da472f
reg_x21_init:	.dword 0xfffffffffffffff7
reg_x22_init:	.dword 0xffffffffffffff84
reg_x23_init:	.dword 0x2aab6f4eda329f25
reg_x24_init:	.dword 0x0000000000000000
reg_x25_init:	.dword 0xffffffffffff8008
reg_x26_init:	.dword 0x2a8814514aa31df4
reg_x27_init:	.dword 0xffffffffffffffff
reg_x28_init:	.dword 0xfffffffffffffffd
reg_x29_init:	.dword 0x1afe35141bfa19f1
reg_x30_init:	.dword 0xffffffffffffffff
reg_x31_init:	.dword 0xffffffffffff8005

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0xcd5a39044078f03d
reg_x1_output:	.dword 0x010c9fe0ac5eef20
reg_x2_output:	.dword 0xd98df6c005e961fe
reg_x3_output:	.dword 0xadec5d8646df13a3
reg_x4_output:	.dword 0xa5aadb7f41d3533d
reg_x5_output:	.dword 0xebcacd574c8b271f
reg_x6_output:	.dword 0x8f91ea6618e67f8b
reg_x7_output:	.dword 0x14f330df95ce442a
reg_x8_output:	.dword 0x7a2df4eea98a2dd9
reg_x9_output:	.dword 0x135db4b9cf8567ed
reg_x10_output:	.dword 0x21dcc3eabf2d3f2a
reg_x11_output:	.dword 0x4ceb6b313ae881f5
reg_x12_output:	.dword 0xa6534cc9a2fbf48a
reg_x13_output:	.dword 0xe594cd272d542d46
reg_x14_output:	.dword 0x26397719de57a03e
reg_x15_output:	.dword 0x8984e53683cd66b6
reg_x16_output:	.dword 0x317e364d307bb63c
reg_x17_output:	.dword 0x1419891c91d9d477
reg_x18_output:	.dword 0x202cfbbddf7eefdd
reg_x19_output:	.dword 0x1563455459dc72f4
reg_x20_output:	.dword 0x8099c4f6549676d0
reg_x21_output:	.dword 0xe445deffefcfbae1
reg_x22_output:	.dword 0xd1494a2a376c4b52
reg_x23_output:	.dword 0x3204900df333948d
reg_x24_output:	.dword 0x5d4f11080bb9599b
reg_x25_output:	.dword 0xf3136198d396ac7a
reg_x26_output:	.dword 0x1d3367b27266f29b
reg_x27_output:	.dword 0x8ab9488ea987fd2e
reg_x28_output:	.dword 0xff0f8c0a53829be6
reg_x29_output:	.dword 0x01a4e8947d36a24b
reg_x30_output:	.dword 0x7eae83304b8a6aeb
reg_x31_output:	.dword 0x55502124d9d348dd

// Memory Blocks
	.align 8
test_memory:
	.dword 0x566565481c475f6c, 0xad2cc9001a27d0f3
	.dword 0xa33e217faace712a, 0x2d573bc3550ef470
	.dword 0xb73bfe50489844df, 0xcb319dd2b0bf0722
	.dword 0x23315a03e02abc70, 0xb114fa7ef7782413
	.dword 0x23126f76cdced662, 0x8173a063f0575c1f
	.dword 0x742923201580908d, 0xe99a60127115b9c6
	.dword 0xe04a1c519fedc210, 0x16f490eea2932e43
	.dword 0x246baebebc342085, 0x9191005b277abbdd
	.dword 0xc003583d525de474, 0xe9e42f14eb4e717c
	.dword 0x2596d6cbae9fc10c, 0x60a680dc5dff0b7e
	.dword 0x703a1ad73e52230f, 0xec734258de1c4dcb
	.dword 0x6d8399b9d8caeb0e, 0x9bb7a93b7ee86b26
	.dword 0x7c14c4838edc16d6, 0x88cf32a3316a0dc6
	.dword 0x7c6ca6fd7f0f0e2a, 0x4c1d03c3753dd525
	.dword 0x2896f2e9c9fb86b1, 0xd2c830c100a15d17
	.dword 0x67a9fb8ea4943331, 0xaabb0ddf843f221d
	.dword 0x302a65744d32b1fd, 0x7be3eee09fe3d6fa
	.dword 0xe0938e6ba6cf6eac, 0x7db7f8a6eebaff87
	.dword 0x7baff1d1bb696b0b, 0x14dee9197d39e4c3
	.dword 0x4f5d0d15de6d2354, 0x61f8f94b0dbd362e
	.dword 0x5c0a88768929019f, 0xc5de3ddfec4eec56
	.dword 0x81fca810f9511498, 0x3bc929a92b4f40b1
	.dword 0x73564919ab7afd71, 0xccd416918314cead
	.dword 0x9f6eef67cc96491a, 0x544bf8bc93453205
	.dword 0x713da735ecf4a8af, 0xbfd89fef5ee8b656
	.dword 0x07e9bf2590b8bd32, 0xfb9d2b2ad150ebf1
	.dword 0x021e9e8893b96a7a, 0xc779929c431335f2
	.dword 0x8ad03bddd552e56a, 0xe1c06bb700d5a591
	.dword 0xd4f1f797d27df164, 0xc3424ba002bdb6b8
	.dword 0xe379df23fd190100, 0xbac26bcd6835c1d4
	.dword 0x68269c29f5d62df8, 0x90fe74e911b736ef
	.dword 0xbe1e9411bdfc3c67, 0x2cad93fa5694f5fe
	.dword 0x61e2fbc95e581d32, 0x7d793dc568a25877
	.dword 0x9e79e3c3f49fa3c6, 0x783444706048c027
	.dword 0x945e80441f5d6303, 0x3bbb23692266bf41
	.dword 0xe1f731dc1588e577, 0xc732a585a3712db9
	.dword 0x7345122f896db4cf, 0x9e08496e59ffbfd2
	.dword 0xbf7908fda9b6e489, 0x8e6a0835b373f1f5
	.dword 0xab56ad61fe9c13ee, 0xb221624dd9025dc5
	.dword 0x970d77548f881b3f, 0xfa17d69e2753cc6f
	.dword 0xc1b505762e60d82e, 0xd08927eb18749a46
	.dword 0x1c217b0d2c1acd8f, 0xef4a147f8c1e3f8e
	.dword 0x1c913a4c3dba8a4f, 0xa4d06408eed01297
	.dword 0xe5057ed754910ba4, 0xc6136fc0a9e9970d
	.dword 0x9b2b9c856f9f8e86, 0x332a88cf0749ee8e
	.dword 0xb2d4e66879e2845d, 0x8300e0ec9f1d3e7d
	.dword 0xef578209990a9efb, 0x65ccd94ae7ba1f15
	.dword 0x5512aaf88d2627cb, 0x0072dbb252fe67c1
	.dword 0x3ef52a860b2c164a, 0xbada21eadbbbeca9
	.dword 0x648d07c9257d99b7, 0x2abc0f6025bb0190
	.dword 0x3013b3e6a58a0a06, 0x41dd010394e1d5dc
	.dword 0x315a3695ac0c7419, 0x2c27b76f916cfdf6
	.dword 0x66ad1ee171193532, 0x3612bf4db116bdd4
	.dword 0x28003c27b5a559a2, 0x28497bf9a4cfe8d3
	.dword 0xa72e636b7c98b2c6, 0x2908b864a1866ac9
	.dword 0xa219c4c73d16d833, 0xf038e23cdda2ce5a
	.dword 0x453d953eb1ba8830, 0xdf4e53499da7548a
	.dword 0x8f0a10bf24421b64, 0xeb9a4d1aedf07194
	.dword 0x4270185e01e2ffd0, 0xb73d8ae1673fc2f9
	.dword 0xa191f0e33d656efe, 0x4c978d9a64b7d2db
	.dword 0x84e2e5899888d37a, 0xb01c0670a5803c8a
	.dword 0xb757d30721449181, 0x872a036407af065f
	.dword 0xd9e6decab88026f8, 0xee16c226868d44c9
	.dword 0xffb4de854218d69f, 0xee584d46e91a5aa4

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
