// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	addi x5, x0, -287
	addi x17, x0, -1506
	xor x4, x1, x1
	ori x11, x30, -1565
	addi x2, x0, 974
	bltu x25, x25, crash_forward
	addi x15, x0, 1
	and x25, x0, x0
	addi x31, x0, -657
	addi x10, x0, 0
	addi x12, x0, 922
	srai x14, x4, 62
	addi x18, x0, 868
	addi x7, x0, 327
	divu x27, x7, x7
	addi x16, x5, -5
	addi x19, x0, 2021
	remuw x13, x15, x15
	sub x22, x2, x18
	sll x15, x15, 63
	addi x26, x0, 0
	blt x10, x26, crash_forward
	addi x30, x0, 1932
	addi x1, x12, 102
	addi x24, x0, -2015
	addi x28, x0, 511
	addi x8, x0, -649
	addi x20, x0, -1
	mulw x9, x30, x30
	beq x12, x1, crash_forward
	remw x3, x17, x24
	bltu x5, x16, crash_forward
	mul x23, x19, x28
	divu x29, x31, x8
	xor x20, x20, x15
	and x21, x1, x20
	addi x7, x0, 769
	addi x31, x0, 1980
	addi x14, x0, -2037
	remuw x2, x18, x20
	slt x9, x7, x7
	addi x13, x0, 1989
	and x3, x21, x2
	or x19, x13, x29
	or x6, x19, x15
	addw x29, x31, x13
	mul x4, x5, x5
	la x10, test_memory+2585
	addi x5, x0, 169
	addi x12, x0, -584
	la x27, test_memory-1385
	addi x23, x0, -83
	addi x16, x0, -1225
	addi x30, x0, -1393
	mulhu x11, x14, x12
	divu x1, x22, x22
	la x17, test_memory+594
	sw x4, -1613(x10)
	sraw x18, x23, x30
	mul x28, x5, x5
	la x26, test_memory+1249
	blt x21, x6, crash_forward
	remu x25, x16, x16
	divu x22, x19, x19
	addi x31, x0, -1306
	mul x23, x10, x10
	sub x15, x24, x24
	mulhu x25, x6, x6
	addi x11, x0, 1497
	la x18, test_memory-1438
	addi x6, x0, 1760
	addi x29, x0, 515
	remuw x28, x31, x11
	addi x22, x0, 487
	addi x30, x0, -1199
	addi x9, x0, 576
	lw x8, 170(x17)
	addi x13, x0, 1503
	addi x1, x11, 0
	sltu x14, x6, x6
	sw x3, 1754(x18)
	lh x24, 1539(x27)
	addi x7, x0, -890
	addi x16, x0, 894
	xor x3, x13, x13
	addi x25, x0, -1713
	mulhu x15, x25, x25
	srl x19, x22, x22
	srl x5, x28, x28
	addi x10, x1, 0
	addw x4, x29, x16
	sraw x20, x30, x30
	sb x21, -1091(x26)
	remw x2, x9, x7
	addi x12, x0, 563
	addi x3, x0, -2030
	addi x9, x0, 822
	divuw x21, x22, x12
	la x2, test_memory+1024
	srl x25, x24, x27
	addi x11, x0, 1777
	addi x26, x0, 1
	addi x12, x0, 525
	lwu x23, -504(x2)
	addi x22, x0, -713
	slli x8, x15, 30
	addi x5, x0, 0
	srlw x14, x17, x14
	subw x1, x12, x22
	addi x28, x0, 0
	la x6, test_memory-674
	mulhu x18, x3, x25
	sraw x10, x24, x24
	addi x15, x0, -1293
	addi x21, x0, 1280
	sltu x25, x21, x21
	sltiu x16, x3, 1342
	addi x20, x0, 1032
	addi x27, x11, 619
	bge x11, x27, crash_backward
	sd x8, 1610(x6)
	addi x8, x0, -1177
	la x16, test_memory+895
	addi x14, x0, 1313
	addi x4, x23, 0
	addi x13, x4, 0
	divu x7, x9, x15
	addi x1, x0, -1974
	divu x11, x27, x20
	sll x26, x26, 63
	lhu x22, 1(x16)
	sll x18, x22, x15
	xor x12, x14, x14
	slt x2, x8, x1
	la x21, test_memory+1119
	sltu x13, x28, x31
	addi x31, x0, -1
	ori x11, x12, -182
	addi x1, x0, -1822
	addi x25, x0, -96
	subw x29, x3, x3
	xor x31, x31, x26
	and x17, x7, x31
	addi x6, x0, 1518
	add x24, x20, x20
	rem x2, x7, x7
	addi x15, x0, -1101
	blt x14, x14, crash_backward
	addi x29, x0, 1851
	add x20, x4, x13
	addi x8, x0, 1
	sll x8, x8, 63
	mulh x9, x4, x4
	la x19, test_memory+1174
	or x30, x17, x26
	addi x13, x0, -1
	sh x23, -1144(x19)
	addi x11, x0, 1312
	xor x13, x13, x8
	divu x27, x6, x6
	sltiu x12, x23, -1772
	ld x10, -151(x21)
	and x14, x4, x13
	bgeu x17, x30, crash_forward
	addi x27, x0, 406
	sllw x12, x28, x25
	srai x30, x5, 46
	or x24, x11, x11
	addi x18, x0, 1
	addi x28, x0, -456
	la x20, test_memory+1486
	addi x17, x0, 1838
	divuw x2, x29, x28
	sll x18, x18, 63
	slli x10, x7, 49
	srlw x21, x17, x27
	addi x26, x0, -1169
	addi x9, x0, 1785
	srlw x6, x27, x27
	addi x23, x25, -1956
	slt x19, x9, x9
	sub x4, x1, x15
	blt x25, x23, crash_backward
	lh x3, -1406(x20)
	or x5, x11, x8
	addi x16, x0, -1
	xor x16, x16, x18
	and x7, x16, x16
	slt x31, x17, x26
	or x22, x7, x18
	sllw x1, x24, x17
	srli x25, x23, 30
	rem x29, x5, x31
	xor x12, x27, x27
	sltu x22, x10, x5
	addi x24, x0, -1702
	divu x26, x24, x24
	addi x20, x0, 1
	remu x25, x1, x1
	sll x20, x20, 63
	rem x11, x18, x29
	addi x13, x0, -1
	addi x24, x0, 1
	addi x9, x9, 0
	srlw x21, x27, x27
	sub x18, x14, x0
	addi x23, x0, -1190
	la x19, test_memory+1168
	addw x16, x23, x23
	remu x3, x10, x24
	lhu x15, -232(x19)
	slti x7, x27, -1043
	mulhsu x5, x31, x12
	addi x7, x7, 0
	addi x23, x0, 833
	xor x13, x13, x20
	addi x30, x9, 0
	sub x10, x26, x26
	divw x31, x22, x15
	addi x12, x7, 0
	sraw x5, x26, x26
	la x18, test_memory+1824
	sll x24, x24, 63
	addi x26, x0, -1
	la x25, test_memory+146
	addi x14, x0, -1503
	sllw x19, x23, x23
	addi x11, x0, -439
	and x8, x7, x13
	or x28, x24, x20
	la x21, test_memory-757
	bgeu x8, x28, crash_backward
	addi x16, x0, 1728
	sub x1, x11, x16
	addi x2, x0, -762
	lw x3, -1572(x18)
	lh x15, 474(x25)
	addi x27, x0, 1046
	xor x26, x26, x24
	slti x4, x30, -1013
	la x12, test_memory-820
	addi x1, x0, -1278
	addi x19, x0, -551
	addi x8, x0, 968
	remw x13, x19, x19
	sw x14, 1404(x12)
	add x23, x15, x6
	lui x10, 1034698
	addi x3, x0, 1344
	sh x17, 1379(x21)
	and x22, x5, x26
	addi x28, x1, -196
	addi x11, x0, 465
	or x29, x11, x24
	addi x5, x0, -1345
	remw x4, x11, x11
	xori x4, x31, -230
	addi x10, x0, -606
	remu x17, x14, x2
	addi x28, x0, -1962
	addi x16, x0, 83
	addi x11, x0, -423
	mulw x6, x27, x27
	beq x22, x29, crash_forward
	xor x7, x8, x3
	addi x9, x0, -1426
	divw x13, x11, x27
	addi x15, x0, 1
	addi x30, x0, 84
	la x2, test_memory+1836
	rem x20, x9, x30
	sll x15, x15, 63
	addi x1, x10, -1725
	addi x31, x5, -1571
	addi x21, x0, -1
	remw x18, x19, x16
	xor x21, x21, x15
	and x12, x11, x21
	addi x17, x0, -548
	addi x22, x0, 1010
	addi x13, x0, 435
	xor x31, x24, x10
	remuw x26, x18, x20
	sll x20, x13, x1
	addi x29, x0, -1722
	sll x30, x22, x22
	addi x6, x0, 208
	lbu x4, -878(x2)
	divw x7, x6, x6
	addi x9, x0, -1980
	xori x1, x14, 74
	div x23, x28, x11
	addiw x3, x26, -639
	addi x16, x0, 1
	slt x5, x29, x29
	slliw x14, x28, 15
	mulw x8, x11, x11
	remuw x27, x13, x13
	la x8, test_memory+780
	addi x1, x0, 1
	lhu x23, 136(x8)
	remu x30, x2, x2
	addi x2, x0, 1841
	or x25, x29, x15
	srl x19, x17, x9
	subw x29, x2, x2
	bltu x25, x12, crash_backward
	sll x16, x16, 63
	addi x10, x0, -1
	la x4, test_memory+2309
	sll x1, x1, 63
	addi x13, x0, -1
	la x6, test_memory+2555
	addi x20, x0, 1
	or x9, x31, x23
	lb x5, -2003(x6)
	mulh x15, x0, x11
	addi x23, x0, 1
	addi x12, x0, 1
	srai x28, x3, 42
	xor x10, x10, x16
	addi x5, x0, -1856
	sll x12, x12, 63
	addi x22, x15, 0
	and x24, x21, x10
	and x17, x5, x26
	sll x23, x23, 63
	addi x15, x5, -88
	div x21, x23, x23
	lbu x3, -1740(x4)
	addi x8, x0, -1
	xor x13, x13, x1
	addi x9, x0, -1720
	addi x2, x0, -1
	or x18, x24, x16
	addi x28, x0, 959
	sll x20, x20, 63
	addi x11, x22, 0
	blt x5, x15, crash_forward
	and x7, x3, x13
	addi x14, x0, -1
	xor x14, x14, x20
	xor x8, x8, x23
	or x27, x27, x1
	addi x4, x0, 1461
	xor x2, x2, x12
	addi x10, x0, 1
	bgeu x7, x27, crash_backward
	and x19, x27, x2
	addi x17, x0, 1301
	and x29, x31, x8
	or x25, x29, x23
	and x31, x2, x14
	sub x27, x13, x24
	srliw x15, x25, 19
	sll x10, x10, 63
	addw x6, x9, x28
	addi x23, x11, -141
	addi x23, x0, 1887
	addi x13, x0, -483
	or x26, x18, x20
	addi x7, x0, 24
	or x30, x19, x12
	addi x6, x0, -253
	divuw x29, x13, x13
	mulw x5, x24, x24
	addi x21, x0, -1
	xor x3, x7, x7
	addi x3, x0, -7
	sll x15, x23, x23
	bltu x26, x31, crash_backward
	la x8, test_memory+1836
	addi x5, x0, -786
	addi x29, x0, -782
	sllw x16, x4, x17
	and x11, x29, x29
	lw x25, -852(x8)
	beq x19, x30, crash_backward
	xor x21, x21, x10
	addw x19, x7, x25
	addi x9, x0, -1806
	addi x14, x0, -1743
	addi x8, x0, -1556
	addi x25, x0, 2038
	and x18, x22, x21
	or x24, x18, x10
	la x4, test_memory+252
	addi x23, x0, -1128
	mul x11, x8, x23
	divuw x1, x6, x9
	addi x26, x0, -220
	sllw x28, x23, x23
	addi x2, x0, 1407
	mulh x15, x26, x26
	addi x29, x0, 1914
	addi x18, x18, 0
	addi x17, x14, -1744
	mulh x24, x8, x8
	addi x28, x18, 0
	addi x16, x0, -286
	addi x30, x2, 150
	srlw x12, x16, x16
	or x20, x25, x29
	lw x31, 520(x4)
	mulhsu x27, x21, x0
	addi x26, x0, 801
	remu x8, x27, x27
	or x22, x2, x2
	addi x6, x0, -1367
	addi x11, x0, 1329
	addi x13, x3, -1022
	blt x3, x13, crash_forward
	sub x7, x5, x5
	sub x9, x26, x26
	divw x1, x6, x11
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0xffffffffffffffff
reg_x1_init:	.dword 0x0000000000000004
reg_x2_init:	.dword 0x158986230b321405
reg_x3_init:	.dword 0x74f0d182e8375153
reg_x4_init:	.dword 0xe9b7b0f83f42a96a
reg_x5_init:	.dword 0xffffffffffffff80
reg_x6_init:	.dword 0xec25a4f63ec90b44
reg_x7_init:	.dword 0xffffffffffff8004
reg_x8_init:	.dword 0xe922c705b56ec435
reg_x9_init:	.dword 0x10f605255c63b833
reg_x10_init:	.dword 0xffffffffffff8006
reg_x11_init:	.dword 0x0000000000000000
reg_x12_init:	.dword 0x0000000000000000
reg_x13_init:	.dword 0x0000000000000001
reg_x14_init:	.dword 0x211e678bc6477796
reg_x15_init:	.dword 0x0000000000000000
reg_x16_init:	.dword 0x2e77c016aa5a3d33
reg_x17_init:	.dword 0x2b097ca65830d9c1
reg_x18_init:	.dword 0xfb6a6f4deddeff89
reg_x19_init:	.dword 0x0000000000000001
reg_x20_init:	.dword 0xf182213991c935c7
reg_x21_init:	.dword 0x0000000000000002
reg_x22_init:	.dword 0xffffffffffffff83
reg_x23_init:	.dword 0x7d336ad154608dd4
reg_x24_init:	.dword 0xffffffffffffffff
reg_x25_init:	.dword 0xffffffffffffffff
reg_x26_init:	.dword 0xffffffffffff8009
reg_x27_init:	.dword 0x0000000000000000
reg_x28_init:	.dword 0xffffffffffffffff
reg_x29_init:	.dword 0xffffffff80000008
reg_x30_init:	.dword 0xffffffff80000004
reg_x31_init:	.dword 0xffffffffffffffff

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x8b4d66861155697b
reg_x1_output:	.dword 0x50d56ec65d5d8d58
reg_x2_output:	.dword 0xf6a6f016ad82b2a3
reg_x3_output:	.dword 0xae62845667f00e58
reg_x4_output:	.dword 0x65d6667091bbd998
reg_x5_output:	.dword 0x7e3fe851e82a05bb
reg_x6_output:	.dword 0x583c4daa4bdca357
reg_x7_output:	.dword 0xb7fa2a6a12609513
reg_x8_output:	.dword 0xda6602205c6b0844
reg_x9_output:	.dword 0x7a4d4d9f9132109d
reg_x10_output:	.dword 0x90f04e990d257981
reg_x11_output:	.dword 0xf971c5092415b6b5
reg_x12_output:	.dword 0x117ac0ab729fa782
reg_x13_output:	.dword 0x71b5f8d3efeaea8b
reg_x14_output:	.dword 0x14515f5da2cc9de1
reg_x15_output:	.dword 0xf4bc978ac234e617
reg_x16_output:	.dword 0x5ba8a80ee8ee486e
reg_x17_output:	.dword 0xbe783798b10b174a
reg_x18_output:	.dword 0xc4a1f596464fb58a
reg_x19_output:	.dword 0x59810d0b1d959c85
reg_x20_output:	.dword 0x810cb5aa8fb0a9b4
reg_x21_output:	.dword 0x30e9b79a6070944e
reg_x22_output:	.dword 0x493b1085769e5864
reg_x23_output:	.dword 0x7c846ce975c83441
reg_x24_output:	.dword 0xa186e6c3655e5617
reg_x25_output:	.dword 0x7bda030a35aadb43
reg_x26_output:	.dword 0x718e498f30ce17ab
reg_x27_output:	.dword 0x38289f45d32d92fe
reg_x28_output:	.dword 0xe1fcd0ffc6ea92ec
reg_x29_output:	.dword 0x0ed80d1d05d2b488
reg_x30_output:	.dword 0x232974c07fd8d46e
reg_x31_output:	.dword 0xe02e018adb69a465

// Memory Blocks
	.align 8
test_memory:
	.dword 0xa926caedfb819e9c, 0x39ecce8c6899d9af
	.dword 0xfb5dd1453c5f6611, 0x472b4ae182baa493
	.dword 0x3ca9a47d4a3f3f26, 0xce5cf21531bc67ff
	.dword 0x7f6cc9f13aaa90cb, 0x706d80bb63ff3a99
	.dword 0x257eef8141b8a09a, 0x904390f89b3e22f2
	.dword 0x705c45b8f2644c29, 0x6d31fb49387562fb
	.dword 0xe0edd8323a73839f, 0xb517ff7ce01d86b7
	.dword 0x99d48837e0c35989, 0x106c7a033f7c2a32
	.dword 0x09968dad66a4bbee, 0x5b70a9689266aab1
	.dword 0x3da9a22b83232aa0, 0x988b482365e2372a
	.dword 0x52523a70f2cffed4, 0x6094fe8baacff3f6
	.dword 0x0ff271f6cd4217f4, 0x2aeb7129a38b25c4
	.dword 0x62e98ce1d42301b4, 0x38b06f362b4a97d0
	.dword 0x91cf341f6b9fe763, 0x00ef055a5575b155
	.dword 0xe4e3cfc8e2a5e883, 0x76b878bc3130ee40
	.dword 0x7b41a3cdf7b6a29b, 0x72e76e3a516caf25
	.dword 0xd4f092d1c69b044a, 0x8157c1f77efc9476
	.dword 0xceb8ab518107bd9f, 0xa145d3160fecd8f2
	.dword 0x7bade30c11a7e1a8, 0x8a7047c4d8ae5f5a
	.dword 0x2331a49e73378d48, 0x58c38d7c9009676a
	.dword 0x46cd136c95a1a74d, 0x3f06998709521e07
	.dword 0xac1129c7eeb10dc2, 0xf274adc088597cb4
	.dword 0x19d8154bac16c480, 0xcda825a20b482c4a
	.dword 0x881575891e8bf90b, 0x5cf68f7a0f385ee8
	.dword 0x941960e4aaefef9a, 0xd19e95fd983ed527
	.dword 0xeb0453bff3af2d77, 0x302c7e0423e28292
	.dword 0x37686dd933c27489, 0x69823c8a59058555
	.dword 0xc7f6a1eef269642e, 0xa93c68fc69396533
	.dword 0x51dcbbab64add34e, 0x3ffd8fb508a3cdbd
	.dword 0xbc635fbc6cfa37ad, 0xb0bda8c5f23837c0
	.dword 0x0aa96a4332deae7f, 0x95d3b6f7215e35fe
	.dword 0x1e4c4f719ac57a41, 0x994bd30a37635921
	.dword 0xf8a3626f601109c6, 0x6c7c27461592deec
	.dword 0x3a2e267d792adc8f, 0x18ef9f332bbca0b3
	.dword 0x37340e5c8dabd860, 0xc8e54fa0a997f50d
	.dword 0xff964df2483be40f, 0x1c0fdaeeef0678c7
	.dword 0x04baa222e94fdb9e, 0xa6305588bf05f31b
	.dword 0x95803303c2ca318c, 0x74dc6eb1ca5fc921
	.dword 0x939df437cff3d167, 0x9877e182c517b484
	.dword 0x91dc278fe68817a5, 0x16657231fb82b179
	.dword 0xdd90e5f68de7f2b4, 0x4ff3fb970d0a57ed
	.dword 0xd9e1d2923e358150, 0x7ed050ec523013fd
	.dword 0xf6cb5c23135ac213, 0x250cf7d474a6f1ab
	.dword 0x831030ae25132852, 0x305cfe9dca91efcd
	.dword 0x9539c75e0e392a26, 0x962f72ca34600e48
	.dword 0x66fd24a868161bc7, 0x9d2d3bcb1e9e8b7e
	.dword 0x3de53cb05b83ec21, 0x28735e0e21ad0504
	.dword 0x7e5697ebfe9596a0, 0xb5ffea39bfc66f98
	.dword 0xd1161e072b745e4e, 0x6c681cb9618d1a51
	.dword 0x81b72b07516d2620, 0x60527176c9773118
	.dword 0xfbf352b0850a7a8c, 0x0097afe95a5c7256
	.dword 0xc130762aaccd205f, 0x749a3351443d0bef
	.dword 0x6ca00fe30ede3ccc, 0x4b92f33eaf64d36e
	.dword 0x9dacd9af06336ac7, 0x89881059808d4d80
	.dword 0x841a3136244e5193, 0x4f98e96033d438a6
	.dword 0x918ade8d3546909a, 0xbd87fc6b67838f26
	.dword 0xa75b21244766147c, 0x6a2b18750e033442
	.dword 0x401426e31b8d2969, 0xe3eea31d5f1bc0ac
	.dword 0x3f7d518ef114deb3, 0x0a20f6a9b7352238
	.dword 0x95b1ee71fc3b8f9e, 0xf7871c4fc6b302d3
	.dword 0xeee8443a9a90a57a, 0x670c66b21f3c2ab3
	.dword 0x9d011b227291e6f4, 0x7872b0a81fd951cf
	.dword 0x7fc5234e9bfde8a8, 0x0d014440feab1491
	.dword 0x4f27dd7c0a8472f9, 0x678cae0aaebdffca

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
