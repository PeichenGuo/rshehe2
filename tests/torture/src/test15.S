// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	addi x2, x0, -1742
	addi x18, x0, 900
	addi x4, x0, 433
	addi x25, x21, -742
	mulw x20, x25, x28
	remu x21, x14, x12
	rem x12, x5, x5
	divw x29, x2, x4
	addi x7, x0, 1560
	addi x13, x0, 1164
	divu x8, x18, x13
	addi x19, x0, -955
	sraiw x30, x9, 4
	addi x21, x0, 630
	srai x4, x8, 4
	addi x25, x0, -1329
	addi x9, x0, 1
	addi x27, x0, 139
	addi x26, x0, -1945
	mul x17, x7, x19
	slt x5, x27, x26
	or x20, x25, x25
	mulw x29, x21, x21
	addi x18, x0, -1092
	addi x3, x0, 695
	addi x8, x18, -814
	andi x22, x27, -526
	add x12, x9, x9
	sll x9, x9, 63
	addi x6, x0, -1669
	beq x18, x8, crash_backward
	remuw x28, x3, x6
	addi x1, x0, 1986
	remu x2, x9, x27
	addi x10, x0, 1783
	addi x14, x0, -1
	addi x4, x0, -259
	xor x14, x14, x9
	addi x7, x0, 1056
	addi x13, x0, 1846
	addi x16, x0, 1938
	la x19, test_memory-1328
	addi x27, x0, 327
	mulh x30, x4, x13
	or x12, x27, x27
	addi x2, x0, 1906
	sub x17, x2, x2
	and x23, x1, x14
	add x22, x7, x7
	or x11, x2, x9
	addi x28, x0, 1
	lb x6, 1838(x19)
	mulw x24, x10, x16
	addi x26, x0, -1847
	bltu x0, x0, crash_forward
	addi x17, x0, -362
	rem x9, x21, x26
	la x16, test_memory+1716
	mulhu x24, x17, x17
	addi x13, x0, 2001
	addi x29, x0, -805
	addi x12, x0, 68
	sll x28, x28, 63
	addi x25, x0, -302
	addi x4, x0, -1149
	sra x3, x25, x25
	sw x15, -996(x16)
	addi x30, x4, -673
	la x24, test_memory-119
	addi x31, x0, 1226
	mulw x15, x1, x31
	addi x16, x0, -267
	remw x10, x29, x29
	ld x25, 223(x24)
	addi x14, x0, 1
	addi x21, x0, -1713
	addi x18, x0, -1
	addi x11, x0, -1459
	addi x29, x0, -1664
	addi x15, x0, 1803
	mulh x27, x13, x11
	xor x18, x18, x28
	srlw x25, x15, x15
	and x8, x30, x18
	div x10, x13, x13
	addi x10, x0, -1242
	srlw x4, x29, x29
	addi x24, x0, 1099
	div x1, x4, x23
	remuw x30, x22, x31
	addi x6, x0, -1560
	mulh x31, x24, x24
	divu x9, x17, x17
	addi x9, x0, 1518
	addi x31, x0, 899
	mulw x17, x16, x6
	sltu x5, x26, x21
	sll x14, x14, 63
	or x20, x8, x28
	addi x2, x12, 2039
	addi x22, x0, -1
	addi x30, x0, 253
	addw x4, x9, x31
	addi x1, x0, 122
	xor x22, x22, x14
	la x27, test_memory+181
	addi x11, x0, 2040
	addi x3, x0, -1500
	add x25, x10, x11
	sra x9, x0, x0
	mulhu x24, x30, x1
	addi x26, x0, 1029
	bltu x2, x12, crash_forward
	addiw x16, x23, 520
	remw x30, x11, x11
	beq x8, x20, crash_forward
	la x31, test_memory+1624
	addi x13, x0, -541
	addw x21, x5, x5
	lh x4, -1190(x31)
	divu x19, x3, x3
	and x23, x29, x22
	add x29, x13, x13
	la x2, test_memory+946
	bltu x29, x29, crash_forward
	la x11, test_memory+1480
	sd x6, -674(x2)
	lhu x12, -1476(x11)
	addi x9, x0, 390
	or x7, x6, x14
	bltu x7, x23, crash_forward
	lhu x15, 641(x27)
	addw x17, x26, x26
	addi x25, x0, 1
	addi x1, x0, 1912
	div x10, x9, x1
	sll x25, x25, 63
	addi x5, x0, -1
	la x2, test_memory-600
	addi x11, x0, -151
	xor x5, x5, x25
	addi x26, x0, -1994
	addi x27, x0, -851
	addi x17, x0, -1563
	addi x10, x0, 1861
	la x15, test_memory-1300
	addi x13, x0, 76
	mulh x21, x11, x27
	mul x4, x26, x26
	addi x23, x0, 1793
	sraiw x28, x23, 14
	srli x29, x14, 0
	lbu x31, 1700(x15)
	addi x18, x10, 1364
	sra x20, x17, x23
	ld x12, 1232(x2)
	addi x14, x0, -97
	addi x1, x0, 1651
	mulhu x19, x13, x13
	addi x24, x0, -1363
	la x20, test_memory+2782
	addi x26, x0, 1256
	addi x3, x14, -877
	xor x11, x4, x4
	addi x14, x0, 1
	subw x22, x1, x1
	srliw x2, x25, 10
	addi x7, x0, -1575
	addw x28, x26, x26
	srl x30, x24, x7
	sll x14, x14, 63
	and x16, x23, x5
	addi x31, x0, 1373
	sh x4, -2030(x20)
	addi x27, x0, 1563
	or x6, x11, x25
	sra x9, x27, x27
	addi x17, x0, 1530
	addi x19, x0, -1468
	addi x13, x0, 45
	addi x3, x0, -1
	sraw x12, x19, x19
	bge x6, x16, crash_backward
	xor x3, x3, x14
	and x11, x28, x3
	addi x21, x0, 1227
	addi x15, x0, -1921
	mulh x29, x21, x15
	remw x8, x17, x13
	or x4, x11, x14
	addi x23, x31, 386
	beq x11, x4, crash_forward
	addi x4, x0, -1714
	addi x18, x0, -1573
	bne x0, x0, crash_forward
	divu x1, x14, x14
	addi x21, x0, -579
	mulhsu x16, x6, x30
	sltu x5, x15, x15
	addi x17, x0, -1427
	addi x5, x0, -483
	addi x23, x0, -1846
	add x22, x1, x1
	sltu x28, x17, x17
	addi x16, x0, -2039
	mulh x20, x23, x29
	addi x12, x0, 1213
	addi x2, x0, -1867
	addi x6, x0, 1904
	addi x11, x16, -925
	addi x27, x0, 816
	addi x26, x0, -1089
	addi x9, x0, -1760
	remu x25, x27, x27
	bne x14, x14, crash_forward
	addi x1, x5, -1120
	srlw x13, x4, x18
	addi x24, x0, 401
	remu x14, x2, x2
	addi x19, x0, 1036
	and x8, x23, x26
	divuw x7, x21, x24
	rem x30, x12, x9
	la x22, test_memory+879
	addi x3, x0, -368
	addi x15, x0, -38
	ld x17, -719(x22)
	sraw x10, x3, x15
	remw x28, x9, x9
	la x3, test_memory+2308
	sraw x8, x1, x1
	la x17, test_memory+19
	mulhsu x30, x23, x12
	sd x12, 781(x17)
	divw x13, x16, x28
	addi x23, x0, -129
	srl x18, x2, x2
	div x29, x21, x5
	addi x7, x0, -771
	mulhu x24, x29, x29
	divuw x31, x6, x19
	ori x14, x29, -1386
	addi x26, x0, 2024
	addi x9, x0, 1
	sh x19, -1768(x3)
	addi x29, x0, 1
	addi x31, x0, -561
	sll x9, x9, 63
	addi x4, x0, -275
	sll x2, x8, x26
	addi x28, x23, -2023
	sraw x21, x16, x12
	divu x5, x7, x7
	sll x29, x29, 63
	addi x10, x0, -1
	addi x20, x26, 366
	bltu x20, x26, crash_forward
	addi x18, x0, -1871
	sraiw x12, x22, 21
	addi x7, x0, 1805
	sub x3, x28, x3
	addi x15, x0, -205
	addi x27, x0, -254
	addi x19, x0, -1
	xor x19, x19, x29
	addi x2, x0, -958
	sll x20, x25, x25
	mulw x24, x27, x27
	sltu x22, x4, x4
	remu x21, x7, x2
	addi x25, x0, -807
	sllw x14, x18, x18
	addi x23, x0, 1
	sra x6, x31, x31
	and x17, x14, x19
	sll x23, x23, 63
	addi x5, x0, -1
	xor x5, x5, x23
	addi x3, x0, -172
	divu x1, x15, x15
	and x26, x8, x5
	xor x10, x10, x9
	la x28, test_memory+153
	remuw x31, x8, x30
	or x12, x31, x23
	and x8, x29, x10
	addi x14, x0, 1369
	or x13, x17, x29
	addi x11, x0, 1008
	srl x15, x23, x24
	la x22, test_memory+350
	lw x2, 610(x22)
	or x30, x8, x9
	lh x27, 333(x28)
	addi x13, x0, -2021
	bge x30, x8, crash_forward
	addi x18, x0, -518
	addi x17, x0, 1658
	srlw x9, x23, x23
	and x10, x28, x6
	andi x12, x11, -1358
	mulhu x20, x14, x18
	addw x22, x27, x27
	addi x4, x0, 1
	xor x31, x18, x9
	addi x19, x0, -373
	xor x16, x25, x11
	divw x10, x6, x4
	addi x20, x0, 1
	addw x29, x13, x17
	addi x8, x19, -1846
	addi x21, x3, -261
	divuw x28, x12, x12
	addi x17, x0, 1
	la x10, test_memory+1945
	addi x23, x0, 1
	bltu x3, x21, crash_backward
	addi x11, x0, -569
	addi x2, x0, -822
	remuw x30, x22, x22
	sll x20, x20, 63
	sll x23, x23, 63
	blt x19, x8, crash_forward
	addi x27, x0, -1
	sll x4, x4, 63
	addi x7, x0, -1
	addi x13, x11, -253
	addi x15, x2, -879
	sll x17, x17, 63
	addi x28, x0, -1
	xor x28, x28, x17
	xor x7, x7, x4
	and x24, x9, x7
	or x6, x29, x4
	addi x18, x0, -1
	and x16, x1, x28
	or x25, x24, x17
	xor x18, x18, x20
	and x26, x11, x18
	or x22, x26, x20
	sh x17, -963(x10)
	blt x16, x25, crash_backward
	xor x27, x27, x23
	and x5, x9, x27
	addi x12, x0, 1
	sltu x30, x13, x13
	la x28, test_memory+2072
	addi x21, x0, 1801
	sll x12, x12, 63
	addi x6, x21, 482
	addi x8, x0, 1
	addi x3, x0, -666
	addi x9, x0, -1
	addi x20, x0, -1657
	addi x24, x0, -1899
	bge x21, x6, crash_forward
	xor x9, x9, x12
	mulw x15, x3, x3
	or x1, x5, x23
	addi x11, x0, -1684
	addi x2, x0, 457
	addi x19, x0, 473
	addi x25, x2, 848
	mulhu x18, x20, x11
	sra x29, x24, x24
	sb x11, -1709(x28)
	add x3, x26, x28
	sll x8, x8, 63
	la x7, test_memory-1016
	and x31, x3, x9
	slt x16, x19, x19
	la x29, test_memory-1112
	addi x1, x0, 472
	addi x26, x0, -1
	addi x5, x1, 1614
	mulhu x27, x13, x5
	xor x26, x26, x8
	sub x4, x17, x17
	sltu x11, x4, x28
	srl x6, x30, x30
	sh x27, 1778(x29)
	addi x23, x0, 0
	and x10, x18, x26
	lbu x22, 1365(x7)
	or x17, x22, x8
	addi x18, x0, 0
	rem x28, x3, x3
	or x14, x23, x12
	bltu x17, x10, crash_forward
	addi x24, x0, 1038
	addi x20, x0, 1364
	addi x21, x0, -641
	bge x1, x5, crash_forward
	addi x13, x0, -1249
	beq x31, x14, crash_forward
	lui x15, 333790
	mulh x3, x24, x20
	div x30, x21, x13
	la x13, test_memory-1058
	la x17, test_memory-60
	addi x22, x0, 1
	addi x28, x0, -1317
	sll x22, x22, 63
	addi x20, x0, -626
	addi x26, x0, -1550
	div x29, x12, x12
	addi x6, x0, -1
	mulw x30, x20, x20
	srai x29, x19, 1
	sllw x11, x8, x19
	addi x14, x0, 0
	remu x7, x28, x26
	and x23, x22, x22
	addi x24, x0, 0
	addi x8, x0, 0
	addi x5, x0, -1671
	addi x9, x0, -1900
	la x4, test_memory+626
	sw x20, -270(x4)
	addi x10, x0, -592
	addi x2, x0, 0
	xor x6, x6, x22
	lbu x12, 1708(x13)
	slt x15, x5, x10
	addi x19, x0, 1
	and x18, x0, x6
	addi x11, x0, -1261
	or x3, x2, x22
	sb x12, 801(x17)
	addw x25, x9, x9
	sll x19, x19, 63
	addi x20, x0, -9
	la x16, test_memory-56
	blt x18, x3, crash_backward
	ld x27, 248(x16)
	addi x21, x0, -1
	xor x21, x21, x19
	and x31, x0, x21
	or x1, x2, x19
	divw x30, x11, x20
	beq x31, x1, crash_backward
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x3dc3efd2242e81e4
reg_x1_init:	.dword 0x63460152b5656db7
reg_x2_init:	.dword 0x81e419450a0f226c
reg_x3_init:	.dword 0xb3e15a939e0b8505
reg_x4_init:	.dword 0xffffffffffffffff
reg_x5_init:	.dword 0x0000000000000000
reg_x6_init:	.dword 0xf5eddce58ff47896
reg_x7_init:	.dword 0x7bef48598dbc9509
reg_x8_init:	.dword 0x0800000000000008
reg_x9_init:	.dword 0x0000000000000003
reg_x10_init:	.dword 0xffffffffffff8000
reg_x11_init:	.dword 0x0000000000000003
reg_x12_init:	.dword 0xffffffffffff8007
reg_x13_init:	.dword 0xb2ae4bc800b8233f
reg_x14_init:	.dword 0xad9ac3994b4e518d
reg_x15_init:	.dword 0xffffffffffffff80
reg_x16_init:	.dword 0xdf9eb4f7fa87d112
reg_x17_init:	.dword 0x0000000000000004
reg_x18_init:	.dword 0xffffffffffffff80
reg_x19_init:	.dword 0x148efef47e29e2ac
reg_x20_init:	.dword 0x008722510e26700c
reg_x21_init:	.dword 0xffffffffffffffff
reg_x22_init:	.dword 0x5c8252d509a9b702
reg_x23_init:	.dword 0x0000000000000000
reg_x24_init:	.dword 0x0000000000000000
reg_x25_init:	.dword 0xee9deeb7a6767ce3
reg_x26_init:	.dword 0x41e12ccc85e40b0e
reg_x27_init:	.dword 0xffffffff80000001
reg_x28_init:	.dword 0x1b7fc35fef15b6ef
reg_x29_init:	.dword 0x0000000000000000
reg_x30_init:	.dword 0x0000000000000000
reg_x31_init:	.dword 0x8e9d6d625ffa2573

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0xa60baa2f03c35868
reg_x1_output:	.dword 0xff2f91bbc067784f
reg_x2_output:	.dword 0x0e16fe7de4eab5b1
reg_x3_output:	.dword 0xf68097f11d6d846c
reg_x4_output:	.dword 0xe4a91f71d30d81f1
reg_x5_output:	.dword 0x191432c035c395d7
reg_x6_output:	.dword 0xb9293306ae011d14
reg_x7_output:	.dword 0xda2058708272bb38
reg_x8_output:	.dword 0x716f8d94f1109f60
reg_x9_output:	.dword 0x184e933a6fd826bc
reg_x10_output:	.dword 0xd37b74457d04dcda
reg_x11_output:	.dword 0x2e614ad220907a19
reg_x12_output:	.dword 0x759e12c10d1ebae9
reg_x13_output:	.dword 0xd5eb93429cfd4ece
reg_x14_output:	.dword 0x89729829d5aebc39
reg_x15_output:	.dword 0x83b6950390647eaf
reg_x16_output:	.dword 0xcf06af4f503ee6e2
reg_x17_output:	.dword 0x5b8ce246469cf0a0
reg_x18_output:	.dword 0x9415c619a0f268c8
reg_x19_output:	.dword 0x8bd54d8df234eda0
reg_x20_output:	.dword 0xda6cd84c8d109e44
reg_x21_output:	.dword 0x85ec1583073a4209
reg_x22_output:	.dword 0x6fb3b16dd1e75f03
reg_x23_output:	.dword 0xe7c27a08da8caf15
reg_x24_output:	.dword 0xf333da00178ab52e
reg_x25_output:	.dword 0x233a0e8cad2770a4
reg_x26_output:	.dword 0xfb04a3f36ab662cb
reg_x27_output:	.dword 0xb1325da1ce56db3b
reg_x28_output:	.dword 0xf4870a5c6e77d962
reg_x29_output:	.dword 0x6e94b1cccb9b564f
reg_x30_output:	.dword 0x23935867878d87e3
reg_x31_output:	.dword 0x3a13179c794b36c4

// Memory Blocks
	.align 8
test_memory:
	.dword 0xa365cb8e7ad2a2c6, 0xf70cecfb80193db0
	.dword 0x5376a50313dcca74, 0x3e5c91cb91bdbf63
	.dword 0xac3d5e72cb6333e5, 0x95f70dad3e5cb6ab
	.dword 0x0ba5f5ed545d3789, 0x6d7fbf1aed234853
	.dword 0xc9fa851ddd406a6c, 0x157f67c0c93b7aed
	.dword 0x757297c17ea4a594, 0xc20f2a07a0dd26d1
	.dword 0xbfbcf55634169fad, 0x8dbd4bf01b2f6265
	.dword 0xbcefd2112d47fce8, 0x977ad3232b1dee9d
	.dword 0x09969b14bf55f91f, 0x4bbe4e46e57a67c5
	.dword 0xb553d1e09dce103c, 0xcef95f9287f93e7e
	.dword 0x8c00ab09cbaa48db, 0x4b43dca47916bd05
	.dword 0x9f9b642a4bf5052e, 0x9df89790c6f09cbb
	.dword 0x14f085178a5e7e21, 0xe92d253c60e4efe1
	.dword 0xeafa8058ac0c4cbe, 0xd1af34eb2d8f63a2
	.dword 0x34b666d50a8da5d1, 0x79c74d15b0ca1e56
	.dword 0x6de3a2cd7c652bcf, 0x6caa018233e7be04
	.dword 0xd00fee0c5a437af3, 0xdb7df68e11b03b29
	.dword 0xe5aff75c641bd3a9, 0x846e45cbb002b3b7
	.dword 0xd0186b3b67ee8730, 0xf3a617d2de9a6260
	.dword 0x823253ce5bbb0a7a, 0x2e8b875255954613
	.dword 0x8001041626c5d356, 0x405d21683b3f3dc6
	.dword 0xe1bf0260aa7c63d0, 0x1db69733478c9c76
	.dword 0x7bbaa6026b0427d7, 0x4fb674a6e8db796b
	.dword 0x29725c4319270920, 0x48c7f09fd94340c0
	.dword 0x8dfbc899ed1add4a, 0xf9b12a38c22e4822
	.dword 0xd4c0341b59cf1243, 0x96b7675dc5716bd7
	.dword 0x7f4c002de53e3ce9, 0xafb0289f33d1f802
	.dword 0x6e96108089f76df4, 0x13ef2647112a6225
	.dword 0xa2ff603ebaed7112, 0x116e8aacba6296e6
	.dword 0xa59a368222d85a53, 0xa68ffdc88978e015
	.dword 0xe24bae05565805c7, 0x3caa56096c24a6ed
	.dword 0x1451841ca1cc6d64, 0x908102654a6c9699
	.dword 0x20e162e8bbc2f92d, 0xf9ff81afd81de2fa
	.dword 0xa5361ac7b1262d91, 0x4f647b3106aab7a7
	.dword 0x19b27f0abb4f5c10, 0xfead4c7210d21335
	.dword 0xb208d9ea9ff03a24, 0x93cc2056d6d392b7
	.dword 0x3dd12bbca9c4825e, 0xf83fe3708d15f188
	.dword 0xdce7a962855a03ce, 0x1a46a994304f4147
	.dword 0xb2902e05493fc3a8, 0xfc5858a5a5aa1e22
	.dword 0x28f2940082d31523, 0x2a20acba43536357
	.dword 0x474f291f42ebcba4, 0x440ce95bda9023f8
	.dword 0x0789b2093616eb1b, 0x5ef2cc2e6833ebee
	.dword 0x1e9cb0f8d5217aad, 0xcf9b94b2b74b8d3f
	.dword 0xe66de3b392ab5d93, 0x2b57356a7450fd93
	.dword 0xd1982cb5a3945641, 0xac69021e218107f3
	.dword 0x4a4e5bae089397ca, 0x34606f7bc733d6d4
	.dword 0x07bd892be96c8982, 0x1c85b7e519a59a54
	.dword 0xa88cf9981439a0e4, 0x3eab7984a0accec2
	.dword 0xd884bb65a77075b6, 0xcc33a1a479afe764
	.dword 0x0243748711d0746b, 0xe727393bd9046173
	.dword 0xcf7f1321ca9fd2c7, 0x9725e6ca09fd836a
	.dword 0xb9d3558374b0aac9, 0xcaeb396964914c7f
	.dword 0x16dc5d52b1e25fc4, 0x1c75111b58de5871
	.dword 0x3b8ac2095171b1ce, 0x12b7b86a2445bb84
	.dword 0x1f81d69febac235e, 0x8581832f1d781ac9
	.dword 0xd928168a7fc19530, 0x8ff906b1650584a3
	.dword 0x191cede37eb93c6c, 0x713e3ef092f3cd85
	.dword 0xa74650ea773d5706, 0xba68354317d77500
	.dword 0xafdbd6ab93434267, 0xea9dfc20252756fc
	.dword 0x42fc4b0170cbd84d, 0xe6a3143a3d43ad45
	.dword 0xd0b5ebbbdc5235ef, 0xae1c8ed0fc2d2549
	.dword 0x2538c51d443d5164, 0xff55814536710e1f
	.dword 0xa86de189b30b0144, 0xc79e9deb709be2cb
	.dword 0x90a5407df0315a8f, 0xe3ce0622aed3b4c0

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
