// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	bne x14, x14, crash_forward
	la x28, test_memory+926
	divu x17, x27, x27
	addi x14, x0, -428
	addi x30, x0, 1
	subw x16, x6, x6
	addi x12, x0, 1
	addi x15, x19, 0
	addi x26, x0, 1205
	subw x5, x20, x20
	rem x25, x20, x17
	sll x30, x30, 63
	sllw x1, x26, x26
	addi x11, x0, -510
	addi x21, x0, 0
	ld x3, -758(x28)
	addi x10, x15, 0
	addw x6, x11, x11
	addi x19, x0, -2003
	addi x29, x0, 947
	addi x24, x0, 442
	addi x8, x0, -1
	addi x16, x0, 1
	addi x23, x29, 86
	mulh x27, x14, x19
	blt x15, x10, crash_forward
	addi x6, x0, 1
	sll x6, x6, 63
	addi x1, x0, 0
	addi x26, x0, 0
	addi x5, x0, -1
	sll x12, x12, 63
	sll x16, x16, 63
	addi x4, x0, 0
	addi x2, x0, -1
	bne x11, x11, crash_forward
	mul x11, x25, x25
	addi x7, x24, 1682
	addi x18, x0, -1
	divuw x25, x17, x17
	bne x1, x26, crash_backward
	xor x5, x5, x6
	blt x23, x29, crash_backward
	and x17, x5, x5
	xor x8, x8, x30
	addi x10, x0, -1554
	xori x23, x20, 1263
	xor x18, x18, x16
	xor x2, x2, x12
	remu x7, x0, x30
	and x28, x22, x18
	and x22, x5, x2
	slt x24, x23, x1
	addi x19, x0, 0
	or x20, x22, x12
	or x31, x28, x16
	addi x11, x0, 0
	and x13, x4, x8
	sra x15, x10, x10
	addi x20, x0, 1
	or x9, x5, x30
	blt x28, x31, crash_forward
	or x3, x1, x6
	addi x14, x0, 1
	sll x14, x14, 63
	bltu x9, x13, crash_backward
	addi x4, x0, -1
	xor x4, x4, x14
	addi x29, x0, -706
	addi x23, x0, 0
	remuw x12, x16, x24
	addiw x13, x28, -58
	la x31, test_memory-811
	or x16, x13, x13
	sll x20, x20, 63
	addi x7, x0, -1
	la x9, test_memory-714
	addi x30, x0, -1168
	addi x17, x0, -609
	addi x11, x0, -1439
	mulh x12, x22, x22
	addi x19, x0, -570
	and x26, x15, x4
	addi x22, x0, -502
	addi x3, x0, 938
	xor x7, x7, x20
	and x24, x17, x7
	addi x10, x0, 0
	or x2, x24, x20
	addi x6, x0, 654
	addi x15, x0, -976
	mulhu x16, x15, x15
	xor x18, x17, x17
	bne x23, x10, crash_forward
	addi x1, x0, 46
	or x25, x12, x14
	addi x18, x0, -1193
	divuw x8, x3, x3
	sub x5, x30, x6
	la x16, test_memory-793
	addi x17, x0, 527
	mul x23, x10, x10
	sllw x21, x22, x15
	ld x12, 1265(x16)
	addi x8, x0, 619
	addi x3, x0, 203
	bge x2, x24, crash_backward
	divuw x10, x18, x17
	addi x5, x0, -1883
	bltu x25, x26, crash_backward
	mulw x27, x29, x1
	srlw x6, x8, x3
	lw x28, 1419(x31)
	sd x8, 1322(x9)
	sub x13, x11, x19
	sraw x30, x5, x5
	addi x25, x0, 1568
	srli x31, x18, 21
	sllw x2, x4, x26
	mulw x7, x30, x21
	srl x13, x3, x3
	la x15, test_memory-242
	ori x16, x21, 786
	add x24, x25, x25
	addi x12, x0, -27
	add x9, x8, x8
	addi x20, x0, -91
	sh x14, 334(x15)
	la x3, test_memory+834
	rem x31, x17, x17
	bne x10, x10, crash_forward
	addi x21, x0, 1
	addi x27, x0, 121
	sll x21, x21, 63
	addi x13, x0, 1
	addi x29, x0, -733
	addi x24, x0, 1398
	blt x0, x0, crash_backward
	sllw x10, x20, x27
	mulh x7, x24, x24
	addi x23, x0, 1
	andi x16, x5, 864
	addi x6, x0, 504
	addi x30, x0, -1
	addi x2, x0, 141
	sb x25, -639(x3)
	xor x30, x30, x21
	sll x23, x23, 63
	srl x17, x12, x29
	addi x15, x0, 588
	addi x5, x0, -1
	xor x5, x5, x23
	addi x24, x0, 38
	addi x8, x0, 1905
	mulhu x31, x2, x15
	addi x2, x0, 1489
	la x27, test_memory+1975
	sltu x31, x2, x2
	and x14, x8, x30
	sll x13, x13, 63
	sb x29, -1084(x27)
	and x18, x7, x5
	addi x25, x0, -1
	or x19, x20, x21
	bltu x19, x14, crash_forward
	addi x27, x0, 1533
	or x1, x18, x23
	mul x15, x28, x28
	xor x25, x25, x13
	addi x7, x0, 666
	and x4, x20, x25
	addi x2, x0, 510
	addi x12, x0, 278
	addi x28, x0, 1756
	divuw x16, x8, x8
	div x31, x27, x2
	addi x20, x0, 1778
	sub x17, x12, x20
	addi x26, x6, 1559
	addi x3, x0, 1444
	addi x22, x0, -1970
	remu x11, x28, x22
	sra x29, x7, x3
	rem x10, x24, x24
	or x9, x4, x13
	bltu x9, x4, crash_forward
	div x5, x15, x31
	la x26, test_memory+1401
	addw x25, x10, x11
	divuw x24, x15, x15
	sw x6, -389(x26)
	sllw x3, x25, x31
	divw x16, x1, x1
	addi x28, x0, -627
	sllw x17, x5, x27
	addi x15, x0, -654
	or x16, x22, x31
	addi x22, x0, 1
	addi x17, x16, 0
	addi x19, x0, 1993
	addi x7, x20, 0
	sraw x18, x28, x28
	addiw x13, x26, -306
	sllw x8, x14, x14
	addi x28, x0, -1829
	mulhu x27, x7, x7
	addi x31, x0, 1001
	subw x1, x7, x21
	addi x10, x0, 1597
	addi x2, x7, 0
	sub x26, x28, x28
	addi x16, x0, -1133
	sllw x14, x31, x31
	addi x9, x0, -411
	subw x23, x1, x8
	mulhsu x18, x16, x16
	addi x25, x17, 0
	addi x24, x0, 557
	sraw x3, x17, x17
	remuw x5, x24, x24
	mulhsu x1, x7, x7
	addi x14, x0, -1247
	srl x8, x25, x25
	blt x17, x25, crash_forward
	div x24, x4, x18
	addi x28, x0, 1155
	rem x3, x6, x6
	addi x21, x0, -146
	mulh x5, x11, x11
	la x25, test_memory+666
	sb x3, 163(x25)
	sraw x8, x8, x8
	addi x23, x0, 693
	div x26, x2, x2
	and x12, x15, x19
	slliw x27, x6, 8
	divw x30, x10, x10
	addi x12, x18, 0
	sub x17, x16, x10
	sraiw x31, x16, 13
	remuw x2, x14, x28
	la x5, test_memory+2252
	addi x13, x0, -639
	sll x22, x22, 63
	addi x24, x0, 1481
	lb x25, -1386(x5)
	addi x11, x0, -1
	addi x18, x0, -204
	remw x6, x23, x14
	addi x16, x23, 142
	sraw x1, x24, x24
	sraw x4, x9, x21
	ori x6, x20, 1612
	xor x7, x13, x18
	addi x1, x0, 1689
	addi x2, x0, 739
	addi x30, x0, 1
	or x10, x19, x31
	addi x8, x0, 1
	addi x5, x0, -1000
	addi x3, x12, 0
	sll x30, x30, 63
	xor x11, x11, x22
	srli x21, x0, 48
	addi x14, x0, -2024
	remu x31, x1, x14
	addi x28, x0, -1
	addi x18, x0, 574
	la x4, test_memory-170
	addi x24, x2, 328
	or x14, x31, x31
	mulhsu x17, x5, x5
	sraiw x6, x26, 12
	sll x8, x8, 63
	divw x7, x18, x18
	subw x6, x31, x10
	addi x17, x0, -1863
	blt x24, x2, crash_forward
	and x29, x22, x11
	sll x1, x17, x17
	addi x10, x0, 1479
	la x5, test_memory+300
	xor x28, x28, x30
	addi x31, x0, 1453
	addi x13, x0, 894
	or x20, x27, x22
	addi x19, x0, -1
	la x18, test_memory+798
	blt x29, x20, crash_forward
	mulw x2, x25, x25
	addi x12, x0, -1965
	addi x6, x0, 0
	sll x14, x31, x12
	remuw x22, x19, x7
	addi x31, x0, -1840
	lbu x3, 10(x18)
	and x25, x31, x28
	addi x1, x0, -1689
	or x27, x25, x30
	sb x7, 570(x4)
	addi x14, x0, -1552
	add x24, x1, x1
	addi x2, x0, -971
	addi x23, x0, 0
	blt x6, x23, crash_forward
	addi x20, x0, -645
	addi x22, x0, 1328
	beq x25, x27, crash_backward
	add x24, x22, x22
	mulh x9, x0, x24
	addi x6, x0, 1198
	bltu x0, x0, crash_forward
	lw x7, 380(x5)
	rem x17, x14, x2
	sltiu x16, x13, -620
	sra x21, x10, x13
	addi x18, x0, 0
	or x1, x18, x19
	slt x27, x25, x25
	mul x5, x20, x20
	addi x7, x22, 0
	divw x25, x16, x16
	xor x23, x6, x6
	addi x4, x0, 0
	addi x2, x0, -772
	addi x12, x31, -1065
	la x3, test_memory+1268
	la x21, test_memory+630
	la x5, test_memory+2761
	addi x25, x12, 813
	addi x22, x0, -1215
	xor x19, x19, x8
	addi x9, x0, -1947
	mulhsu x28, x22, x22
	addi x11, x0, 1304
	and x15, x14, x19
	addi x23, x0, -414
	sub x6, x23, x23
	and x29, x20, x11
	sh x1, 384(x21)
	sra x16, x9, x9
	addi x17, x0, 997
	addi x30, x7, 0
	ld x27, -1993(x5)
	or x26, x22, x8
	lhu x13, -258(x3)
	mulhu x10, x2, x2
	addi x14, x0, 1782
	rem x24, x17, x14
	addi x1, x0, 1
	sll x1, x1, 63
	addi x14, x0, 782
	la x7, test_memory-884
	sd x20, 940(x7)
	la x10, test_memory+2149
	addi x31, x0, 1
	divuw x24, x22, x1
	sltu x15, x11, x0
	mulh x19, x21, x13
	and x29, x31, x31
	sll x31, x31, 63
	addi x13, x0, -1134
	remu x15, x28, x28
	addi x21, x14, 16
	addi x20, x0, -827
	addi x25, x0, -1
	bgeu x14, x21, crash_forward
	addi x5, x0, -365
	srliw x16, x27, 15
	lh x2, -2035(x10)
	xor x25, x25, x1
	addi x8, x0, -756
	addi x12, x0, 1868
	divu x6, x13, x5
	addi x3, x0, 1597
	addi x4, x0, -860
	addi x29, x0, -190
	remw x18, x20, x3
	mulhu x9, x12, x4
	addi x7, x28, 0
	addi x11, x0, -1
	addi x15, x0, -1675
	remu x2, x9, x17
	xor x11, x11, x31
	mulh x16, x31, x31
	addw x12, x5, x5
	slliw x23, x18, 15
	addi x27, x0, -330
	addi x4, x0, 385
	la x3, test_memory-766
	sh x17, 1090(x3)
	addi x24, x7, 0
	addi x18, x0, 976
	sub x17, x8, x27
	divw x10, x15, x15
	addi x12, x0, 1417
	sraw x19, x29, x29
	or x27, x2, x21
	and x22, x31, x25
	addi x6, x0, 662
	add x13, x4, x4
	and x30, x9, x11
	div x16, x28, x6
	slti x8, x5, -1204
	addi x7, x0, -1738
	sra x23, x12, x12
	addi x10, x0, 299
	addi x29, x0, 1
	addi x3, x0, 1639
	slt x9, x18, x6
	or x26, x5, x31
	sll x29, x29, 63
	addi x2, x3, 2045
	addi x17, x0, -1
	or x28, x4, x1
	addi x27, x0, 1077
	mulhu x8, x15, x15
	mulh x13, x27, x27
	addi x21, x0, 1
	mul x15, x7, x10
	xor x17, x17, x29
	sll x21, x21, 63
	addi x5, x0, -1
	and x24, x24, x17
	or x19, x24, x29
	xor x5, x5, x21
	and x20, x9, x5
	or x14, x20, x21
	bge x14, x20, crash_forward
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0xefa8c03d8bb446ef
reg_x1_init:	.dword 0xffffffffffffff85
reg_x2_init:	.dword 0x0800000000000009
reg_x3_init:	.dword 0x02362b430822b0ff
reg_x4_init:	.dword 0xb57559090045dab3
reg_x5_init:	.dword 0xcb78cfe2619b39b0
reg_x6_init:	.dword 0x2b2b0337d1f62299
reg_x7_init:	.dword 0x6004348cae5655f0
reg_x8_init:	.dword 0xedbf491f1f03e718
reg_x9_init:	.dword 0x0000000000000000
reg_x10_init:	.dword 0xffffffffffffffff
reg_x11_init:	.dword 0xef39e189aa541a5e
reg_x12_init:	.dword 0xffffffffffffffff
reg_x13_init:	.dword 0x9b7584c8fe7d75c6
reg_x14_init:	.dword 0xf8723b7528e27288
reg_x15_init:	.dword 0x0000000000000000
reg_x16_init:	.dword 0xeb6f5a27d41940e9
reg_x17_init:	.dword 0xffffffff80000007
reg_x18_init:	.dword 0xffffffffffffffff
reg_x19_init:	.dword 0x21ba7fef1c1cd088
reg_x20_init:	.dword 0x0800000000000000
reg_x21_init:	.dword 0x0000000000000006
reg_x22_init:	.dword 0xffffffffffffffff
reg_x23_init:	.dword 0x0000000000000000
reg_x24_init:	.dword 0x1479f6cac793419a
reg_x25_init:	.dword 0x1cedefcc949e2cea
reg_x26_init:	.dword 0x1c209195dcdf7b01
reg_x27_init:	.dword 0xe3c166c7158e2259
reg_x28_init:	.dword 0xffffffffffffffff
reg_x29_init:	.dword 0x458f7fd68e5d4431
reg_x30_init:	.dword 0x0000000000000000
reg_x31_init:	.dword 0x0000000000000000

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x9268598baf7a21da
reg_x1_output:	.dword 0x433fe5a70987385e
reg_x2_output:	.dword 0x3f9d32b72c3de6fa
reg_x3_output:	.dword 0x7f57a0ecbda2b1c7
reg_x4_output:	.dword 0x7a583ba187b3c88e
reg_x5_output:	.dword 0xcc1e6206a9dcfccb
reg_x6_output:	.dword 0xbacbaefa71400be4
reg_x7_output:	.dword 0xae008c584cbd0829
reg_x8_output:	.dword 0xb8e1ab44265b8f95
reg_x9_output:	.dword 0x5bb54a3b52d19d66
reg_x10_output:	.dword 0xaead92ec839bac0a
reg_x11_output:	.dword 0x83ffbd33e3319ef1
reg_x12_output:	.dword 0xa40ad99f05391841
reg_x13_output:	.dword 0x95567d67b53f8487
reg_x14_output:	.dword 0xb8cad2d54c99d6d1
reg_x15_output:	.dword 0x7c3f1c4deafdb9d8
reg_x16_output:	.dword 0x5ed855b0c61e6f2b
reg_x17_output:	.dword 0x5fd29ea75ff7c36b
reg_x18_output:	.dword 0x24d14a0c47b2f722
reg_x19_output:	.dword 0xb1bb21aabe9e4dbe
reg_x20_output:	.dword 0xb10372cf69a8b0ac
reg_x21_output:	.dword 0xef4a1f846b328ab0
reg_x22_output:	.dword 0x0dbb098068653fe9
reg_x23_output:	.dword 0x674a06fefe3f8123
reg_x24_output:	.dword 0x6fa6ff1f4ac0bd65
reg_x25_output:	.dword 0xe3251a80576632dd
reg_x26_output:	.dword 0x46fff63316bc2899
reg_x27_output:	.dword 0x0d26ca371e2bbcaf
reg_x28_output:	.dword 0x215c4a1f10cdfeb7
reg_x29_output:	.dword 0x283bfd910fc6d4d8
reg_x30_output:	.dword 0xa5ecb7b9619af9a7
reg_x31_output:	.dword 0x2ae9ffefa0dc4baa

// Memory Blocks
	.align 8
test_memory:
	.dword 0x9d827b1c56cd3b4c, 0x867b049d06f0726e
	.dword 0x6c78f6bc961c690b, 0xffda75fc994d8c84
	.dword 0xe3aa37bb99bd7b8c, 0xa08a8401f27daece
	.dword 0xa836eb7c439946c2, 0x3ebfa5e44478b14f
	.dword 0x4d5f9a751d14fe29, 0xb3460310c08d170e
	.dword 0x51363c485428394e, 0x059ff761c3151040
	.dword 0x89cc7912d8303c94, 0x920c268e0076faa5
	.dword 0xd5f42c0649a88a34, 0x1514d2e33f030431
	.dword 0x87ecfb362becff85, 0x34316b321e35d3ef
	.dword 0x8ab318afdfaa027d, 0x561e840a12025d22
	.dword 0x915080d113e38377, 0xa71fb0297e4340ad
	.dword 0x23d349d54ac3d735, 0xf0a1ec2ed59660b4
	.dword 0x5ca0d8acc2efad29, 0x5fec9194bdeb8a82
	.dword 0xfc070f140e2ca5f0, 0x8ffa04db9e395aac
	.dword 0xcc69c6e31efc4e1e, 0xb67093091a59bf77
	.dword 0x687c2ea3e8a58140, 0xf64732500641bd76
	.dword 0x63dadb665c42791e, 0xcb291a0e46de5a77
	.dword 0xc654a3ceaa0a0d40, 0xaa6665fc171ad2a0
	.dword 0x387d98770c6ee6b3, 0x386f38a0c9327bd4
	.dword 0x3e08ad72db17ac0c, 0x5fba110791b2fb5a
	.dword 0x4d19e92f525f69ad, 0xb6cd47b348b9b1c0
	.dword 0x728c2c80013dba46, 0xb22ee6ce914180fd
	.dword 0xcf42e7f78f6a739e, 0x4b7d51a81c0450d5
	.dword 0x7351527bf088db93, 0xf4266f5e05c5f581
	.dword 0xa645f513cb62a95f, 0xaf5a4cd8c6145c8e
	.dword 0x5182a0020dfb571c, 0x173169f90de32405
	.dword 0x1f761d154cc88789, 0x5bce26120326ffcb
	.dword 0xaa0e333d9ce4840e, 0x2bc3ff96c9f7914a
	.dword 0x490dcf6352dc16fd, 0x12869b147b049551
	.dword 0x4f5c66733209461a, 0x8f4dc560dc958c38
	.dword 0xba20e4b9a780b15d, 0xc3fae5142d194048
	.dword 0xfecbbe752faf99f5, 0xa35f8f376ebcce59
	.dword 0x1b58f5a8cb24d590, 0x700c333a30d814bb
	.dword 0xb74c292ebddf31d9, 0xd3c9122b3877ac59
	.dword 0xc1760112d1200c42, 0xfb4af523732ad01b
	.dword 0xd7b38c1f0a692203, 0xc4d85702c0bdd68c
	.dword 0x0fcd62b19f38dc61, 0xfaaaf55faff021bd
	.dword 0xa4a5a2d4bc889d33, 0xbe24fcbac1bea968
	.dword 0x2641198f2744cfa1, 0x26b043f504ca8357
	.dword 0x37292d78702ec12f, 0xc9914b0160f50e06
	.dword 0x93695e8b5e1486f9, 0x7e5ef0db20c1a187
	.dword 0x1e446f3fbd4b7340, 0x896b14b7b4a6eaa5
	.dword 0x60ea8ada271ddf24, 0x2177967e4278544c
	.dword 0x2f3afcfcc7a54cb3, 0x7bd66a74e2b22328
	.dword 0xd5314e8328962521, 0x90cab43eecf9278b
	.dword 0x1946db8e94129759, 0x3cec1d04fec92993
	.dword 0xb30f36e17fee5ab4, 0x52acd8f3795b738b
	.dword 0x52e6ee6b68255a07, 0x5c360fe4b0811e91
	.dword 0x94f185249ae38ae3, 0xf0d59d6271c30579
	.dword 0xe01cb61d499c7517, 0x85735bc793d381f1
	.dword 0x3eac54d10d952e79, 0xe4336ec8f07c57e5
	.dword 0x42335ec04b2bcee5, 0x0fce411538f57324
	.dword 0x6614123e1a53a086, 0x4a7e295814375b43
	.dword 0x9aea1e87b46d9054, 0x81edea66a2a681c1
	.dword 0x7fdf4116c418a2dc, 0x309282b4f8a2ce6c
	.dword 0xae1be4383b0e7147, 0x3c8dff0b24590e02
	.dword 0x938a92dbb0dbf294, 0xd3e0447788ea271a
	.dword 0xf63e55ac73871527, 0x488605848bd63944
	.dword 0xf6394d5fd535ec88, 0x7c7556acefd80a6f
	.dword 0x71521e5157f47763, 0x386a960a943f668b
	.dword 0x11cc014bdf0241d6, 0x786f9a555f9f556f
	.dword 0x251e8da843e167ec, 0x29325d07ba8f4afb
	.dword 0x0aa7909998f4bc63, 0x50df93e4698cb581
	.dword 0x9ad285c70c1317b5, 0x3088ed9aadfc8e60

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
