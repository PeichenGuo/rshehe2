// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	mulw x7, x18, x18
	sll x4, x2, x2
	addi x3, x0, 344
	xor x15, x10, x19
	addi x22, x0, -1981
	addi x10, x0, -1949
	addi x29, x0, 827
	addi x24, x0, 16
	addi x18, x0, -1471
	divuw x27, x10, x10
	srl x16, x3, x3
	addi x11, x0, 785
	mulw x12, x3, x16
	addi x6, x0, 1432
	and x1, x29, x24
	xor x31, x18, x18
	la x30, test_memory+2006
	addi x26, x0, 1
	srai x17, x22, 53
	sll x5, x9, x26
	la x9, test_memory-1722
	addi x8, x0, 860
	addi x24, x25, 0
	sllw x19, x22, x8
	addi x25, x0, 936
	addi x10, x0, 1350
	addi x22, x0, -363
	subw x15, x10, x10
	addi x28, x0, -1826
	sll x3, x1, x1
	addi x31, x0, 1
	mulw x14, x6, x25
	addi x1, x0, 1948
	sll x26, x26, 63
	addi x21, x0, -1
	addi x8, x0, -1985
	remu x17, x22, x8
	srliw x27, x11, 27
	sll x31, x31, 63
	or x20, x11, x28
	addi x18, x24, 0
	addi x16, x0, 978
	bltu x24, x18, crash_backward
	addi x4, x0, -1
	sh x15, 1898(x9)
	xor x21, x21, x26
	and x13, x21, x21
	sllw x7, x1, x16
	xor x4, x4, x31
	or x2, x16, x26
	lhu x23, -1824(x30)
	and x12, x26, x4
	or x29, x18, x31
	addi x9, x0, 1
	addi x31, x0, 283
	la x10, test_memory-227
	sllw x18, x0, x0
	sll x9, x9, 63
	addi x8, x0, -1
	addi x29, x0, 1
	addi x24, x0, -1826
	addi x4, x0, 587
	xor x8, x8, x9
	divw x23, x31, x31
	la x5, test_memory-48
	mul x19, x4, x4
	sll x29, x29, 63
	addi x27, x0, -1
	addi x26, x0, 0
	la x16, test_memory+565
	addi x15, x0, 1
	and x25, x4, x8
	mulhsu x22, x17, x17
	addi x21, x0, -975
	addi x6, x0, 0
	addi x14, x0, -349
	or x30, x27, x9
	bge x30, x25, crash_backward
	rem x1, x24, x24
	sra x17, x21, x14
	sw x3, 499(x10)
	sll x15, x15, 63
	xor x27, x27, x29
	addi x20, x2, 0
	addi x11, x20, 0
	sw x12, 327(x16)
	blt x26, x6, crash_backward
	and x13, x23, x27
	or x2, x14, x29
	lwu x3, 936(x5)
	bgeu x13, x2, crash_forward
	addi x12, x0, -1
	xor x12, x12, x15
	and x7, x28, x12
	or x28, x7, x15
	addi x23, x0, -1478
	blt x0, x0, crash_forward
	mulhu x19, x28, x9
	addi x14, x0, 1
	sll x14, x14, 63
	addi x18, x0, 889
	addi x6, x0, 1984
	div x12, x19, x9
	sra x11, x30, x16
	srlw x9, x28, x28
	addi x25, x0, -1
	mulhsu x27, x23, x23
	addi x29, x18, 1889
	addi x16, x0, -389
	addi x2, x0, 657
	srl x10, x1, x1
	sub x20, x25, x25
	addi x21, x0, -483
	sllw x24, x22, x22
	mulw x28, x21, x21
	addi x30, x0, 1877
	sra x7, x8, x1
	addi x15, x0, -582
	blt x29, x18, crash_forward
	addi x31, x0, 2013
	remu x1, x30, x30
	add x4, x6, x15
	xor x25, x25, x14
	and x13, x22, x25
	la x17, test_memory+2125
	divw x22, x2, x31
	mulhu x20, x19, x19
	addi x11, x0, -766
	addi x9, x0, -842
	sraw x1, x9, x9
	rem x18, x11, x11
	addi x15, x0, -1280
	addi x6, x0, 464
	rem x5, x30, x20
	addi x23, x0, 1534
	la x9, test_memory+13
	slli x29, x18, 27
	rem x28, x6, x23
	or x3, x0, x14
	sub x10, x0, x28
	la x7, test_memory+789
	divw x31, x6, x3
	addi x27, x0, -607
	lbu x21, -757(x7)
	subw x19, x12, x13
	bgeu x13, x3, crash_forward
	add x11, x28, x1
	lbu x22, 491(x9)
	addi x1, x0, 1864
	addi x5, x0, 1027
	addi x2, x5, 1049
	or x24, x15, x27
	addi x26, x0, 541
	mul x8, x16, x26
	sw x23, -1917(x17)
	addi x29, x0, 744
	addi x14, x0, -582
	la x11, test_memory-624
	la x20, test_memory+1795
	div x16, x29, x29
	addi x2, x0, 0
	sllw x28, x14, x14
	sraw x31, x25, x25
	divw x8, x16, x15
	addi x30, x0, 722
	addi x6, x0, 0
	addi x18, x1, 714
	addi x7, x0, -1611
	addi x22, x0, 1262
	divu x10, x14, x22
	sd x12, -1379(x20)
	sllw x19, x2, x10
	divuw x4, x1, x17
	addi x8, x0, -679
	addi x15, x0, 1
	addi x29, x0, -35
	addi x10, x0, 1
	lb x3, 1047(x11)
	addi x26, x0, -924
	divu x31, x24, x24
	divw x19, x8, x8
	beq x1, x18, crash_forward
	sll x10, x10, 63
	srlw x21, x29, x29
	addi x4, x0, -925
	addi x20, x0, -1303
	sll x15, x15, 63
	mulhsu x17, x4, x4
	addi x25, x0, -1954
	addi x11, x20, -1812
	addi x27, x0, -1
	sll x9, x26, x25
	addi x2, x0, 1
	sll x2, x2, 63
	addi x19, x0, -1
	addi x29, x0, -992
	addiw x3, x2, -1534
	addi x6, x0, -316
	xor x19, x19, x2
	addw x23, x7, x7
	addi x24, x0, 338
	addi x4, x0, -1361
	addi x1, x0, 238
	xor x27, x27, x15
	bge x11, x20, crash_forward
	mulw x18, x6, x1
	addi x21, x0, 1
	addi x3, x0, 160
	and x31, x18, x19
	addi x22, x0, -1
	xor x28, x24, x24
	srlw x12, x30, x30
	and x13, x30, x27
	or x5, x13, x15
	or x8, x31, x2
	sll x21, x21, 63
	xor x22, x22, x10
	or x7, x3, x3
	add x25, x29, x4
	and x16, x6, x22
	remw x29, x12, x12
	or x14, x0, x10
	addi x12, x0, 27
	la x11, test_memory-1112
	addi x30, x0, -4
	addi x9, x0, -1
	addi x23, x0, -493
	addi x18, x0, -853
	mul x31, x23, x23
	divw x27, x4, x4
	addi x15, x0, 383
	sw x30, 1848(x11)
	mul x4, x18, x15
	addi x28, x0, -178
	sltu x25, x25, x25
	divuw x7, x19, x19
	addi x6, x0, 1199
	xor x9, x9, x21
	addi x20, x0, -271
	remu x2, x30, x28
	and x17, x26, x9
	addi x3, x0, 597
	slt x23, x5, x5
	or x26, x18, x21
	or x7, x4, x4
	mulh x10, x11, x11
	addi x27, x0, 1
	rem x16, x10, x18
	addi x18, x0, 1302
	div x15, x15, x22
	sll x27, x27, 63
	addi x17, x0, 1
	div x5, x6, x3
	addi x11, x0, 1
	sllw x8, x22, x13
	addi x1, x0, 1855
	div x19, x20, x1
	remu x26, x6, x6
	addi x29, x0, -1
	sll x24, x25, x28
	div x13, x12, x12
	addi x22, x0, 1297
	sll x11, x11, 63
	and x30, x18, x22
	la x23, test_memory+1027
	addi x31, x0, -1
	la x14, test_memory+1864
	xor x29, x29, x27
	sll x17, x17, 63
	addi x10, x0, -1
	lw x7, -923(x23)
	sb x20, -1757(x14)
	xor x10, x10, x17
	div x5, x21, x27
	addi x3, x0, -255
	la x12, test_memory-1262
	or x7, x12, x12
	addi x15, x0, -1227
	la x26, test_memory+486
	sd x30, 458(x26)
	mulhsu x14, x16, x16
	sw x13, 1758(x12)
	addi x24, x0, 1706
	xor x31, x31, x11
	addi x18, x0, -1019
	la x22, test_memory+1728
	add x16, x18, x18
	and x28, x15, x31
	sraiw x7, x25, 3
	addi x13, x0, -452
	sra x6, x13, x13
	addw x14, x17, x17
	sraw x8, x15, x15
	and x4, x1, x29
	addi x1, x0, 2032
	mul x16, x25, x14
	la x5, test_memory-1086
	or x25, x10, x27
	lh x18, 1350(x5)
	srl x20, x3, x24
	lbu x19, -1473(x22)
	or x2, x2, x11
	addi x30, x0, -507
	and x21, x29, x10
	mulhsu x23, x1, x30
	or x9, x31, x17
	bge x9, x21, crash_backward
	or x3, x17, x8
	divu x18, x20, x20
	add x21, x3, x3
	srliw x30, x27, 27
	addi x24, x0, 1
	addi x2, x0, 1
	addi x27, x0, 1801
	addi x22, x0, -83
	mulhu x6, x0, x0
	slt x19, x27, x27
	addi x16, x0, -1641
	addi x7, x0, 554
	sraw x20, x30, x29
	mulw x21, x30, x30
	sll x24, x24, 63
	sll x2, x2, 63
	mulhsu x31, x14, x14
	la x27, test_memory-1401
	sltu x10, x22, x22
	andi x30, x9, -1373
	slt x8, x16, x16
	addi x15, x0, -70
	la x19, test_memory+1550
	addi x3, x0, -1154
	remuw x9, x0, x0
	ld x6, 1625(x27)
	addi x13, x0, 1342
	rem x9, x24, x24
	ori x11, x5, -1898
	addi x29, x7, 1768
	addi x14, x0, -1
	addi x4, x0, -1
	addi x22, x0, -2028
	xor x4, x4, x24
	sltu x18, x3, x3
	and x12, x29, x4
	addi x31, x12, -286
	addi x10, x0, 1
	sh x14, -1320(x19)
	mulh x23, x15, x13
	addi x7, x0, 1438
	sll x10, x10, 63
	or x17, x5, x24
	addi x30, x0, 216
	div x11, x9, x10
	sra x16, x22, x30
	addi x13, x0, 2023
	addi x29, x0, 1800
	xor x14, x14, x2
	addi x21, x0, -1
	xor x21, x21, x10
	addiw x23, x15, 1212
	srlw x9, x7, x29
	and x8, x7, x21
	divw x3, x15, x15
	la x19, test_memory+2551
	or x20, x7, x10
	addi x18, x0, 527
	divuw x27, x13, x18
	ld x31, -1559(x19)
	and x28, x26, x14
	or x25, x4, x2
	or x15, x2, x2
	addi x12, x0, 1875
	addi x9, x0, 968
	and x29, x5, x5
	addi x24, x0, -975
	addi x21, x0, 1813
	remu x28, x24, x24
	addi x1, x0, 1
	divu x10, x9, x9
	sll x1, x1, 63
	addi x15, x0, 400
	addi x22, x0, -1
	addi x31, x0, 1
	sll x31, x31, 63
	addi x13, x0, -565
	sltu x20, x15, x15
	srlw x8, x13, x13
	addi x30, x0, 1841
	xor x22, x22, x1
	addi x5, x0, 1
	xor x7, x21, x30
	sll x5, x5, 63
	addi x11, x0, -1
	addi x6, x0, -1
	addi x25, x0, 1361
	sub x23, x12, x25
	xor x6, x6, x5
	and x19, x29, x6
	addi x17, x0, 579
	xor x11, x11, x31
	addi x26, x0, 662
	sltu x16, x17, x26
	and x4, x31, x22
	or x14, x4, x1
	and x27, x16, x11
	or x3, x27, x31
	blt x4, x14, crash_forward
	or x2, x28, x5
	bge x2, x19, crash_forward
	sub x27, x4, x4
	srli x20, x19, 5
	sllw x18, x26, x26
	la x16, test_memory+471
	addi x13, x0, -179
	slti x3, x16, 2032
	and x22, x7, x7
	addi x7, x0, 1
	addi x15, x13, -904
	addi x11, x9, 0
	sll x7, x7, 63
	addi x5, x0, 1
	addi x25, x11, 0
	addi x29, x0, -1978
	blt x11, x25, crash_forward
	addi x23, x0, -1
	la x9, test_memory+1613
	addi x19, x0, 530
	lhu x14, -233(x16)
	sw x8, -1381(x9)
	rem x2, x29, x17
	addi x4, x0, 1
	addi x1, x19, 497
	sll x4, x4, 63
	remuw x9, x5, x17
	addi x10, x0, -1
	addi x12, x0, 1658
	addi x3, x0, 1026
	xor x14, x8, x30
	sll x5, x5, 63
	la x2, test_memory-638
	lh x1, 888(x2)
	subw x17, x29, x12
	addi x11, x0, 1
	sll x11, x11, 63
	addi x18, x0, 1
	addi x27, x0, -1
	sll x18, x18, 63
	addi x16, x0, -1
	addi x31, x0, -1
	xor x10, x10, x4
	xor x23, x23, x7
	xor x27, x27, x11
	and x26, x18, x10
	div x24, x3, x3
	sltiu x25, x12, 482
	and x22, x8, x27
	slt x19, x23, x23
	or x30, x26, x4
	xor x31, x31, x5
	or x20, x22, x11
	and x28, x13, x31
	and x8, x27, x23
	or x21, x8, x7
	bltu x30, x26, crash_backward
	bgeu x22, x20, crash_forward
	or x6, x19, x5
	xor x16, x16, x18
	bltu x6, x28, crash_backward
	beq x8, x21, crash_forward
	and x15, x6, x16
	or x13, x15, x18
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x2cda32859272fa03
reg_x1_init:	.dword 0x0000000000000008
reg_x2_init:	.dword 0x0000000000000001
reg_x3_init:	.dword 0x03950269a51942d5
reg_x4_init:	.dword 0x0800000000000002
reg_x5_init:	.dword 0x0800000000000004
reg_x6_init:	.dword 0x2fc39e08d6977a97
reg_x7_init:	.dword 0xc8f3030375cef4b4
reg_x8_init:	.dword 0x56052fbe9fcf9dd3
reg_x9_init:	.dword 0x40da18e227e58d3d
reg_x10_init:	.dword 0xffffffffffff8000
reg_x11_init:	.dword 0x7988c7683c5010ac
reg_x12_init:	.dword 0xffffffffffffff81
reg_x13_init:	.dword 0xecf7729af727d998
reg_x14_init:	.dword 0x33ca629c7d6e0ed0
reg_x15_init:	.dword 0x04c6ee8d65fe73f2
reg_x16_init:	.dword 0xffffffffffff8002
reg_x17_init:	.dword 0xc403e2e2d246a2a2
reg_x18_init:	.dword 0x8e3335ff747a54bf
reg_x19_init:	.dword 0x928d4c0f159896db
reg_x20_init:	.dword 0x86541df1dce43843
reg_x21_init:	.dword 0x0800000000000002
reg_x22_init:	.dword 0xdb6407e6121b620e
reg_x23_init:	.dword 0xb901994a34673c6e
reg_x24_init:	.dword 0xe85786324d3ac8a8
reg_x25_init:	.dword 0x0000000000000000
reg_x26_init:	.dword 0xe6ab0f03992bde5f
reg_x27_init:	.dword 0x0000000000000000
reg_x28_init:	.dword 0x8b6051f988b62296
reg_x29_init:	.dword 0x3f196950c64d429c
reg_x30_init:	.dword 0xe8cb7ed234c328ff
reg_x31_init:	.dword 0x0000000000000000

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x2f9405531910e17a
reg_x1_output:	.dword 0x178109f6484e55f7
reg_x2_output:	.dword 0xeb563c8c721f9540
reg_x3_output:	.dword 0xf008b62cca9ee7f5
reg_x4_output:	.dword 0x5d640f693d4f03a9
reg_x5_output:	.dword 0xc25e71ec57905c0b
reg_x6_output:	.dword 0x0100199cdbf6d3ef
reg_x7_output:	.dword 0xbc7e9bacfa46089e
reg_x8_output:	.dword 0xafaf742ca9a8eed0
reg_x9_output:	.dword 0x22682f27e94f583b
reg_x10_output:	.dword 0xb7c6105631cd09a5
reg_x11_output:	.dword 0x6ebaf4d6ce629ccc
reg_x12_output:	.dword 0x0ca35cabab014eb2
reg_x13_output:	.dword 0xb78aa5b757156206
reg_x14_output:	.dword 0x1a319886016cb6be
reg_x15_output:	.dword 0xfc5a074b4fa2f325
reg_x16_output:	.dword 0xe17c799946e4e7e6
reg_x17_output:	.dword 0x2fdd43e4bca907db
reg_x18_output:	.dword 0x7a5a07e20b92adae
reg_x19_output:	.dword 0xc4530327bacdcc85
reg_x20_output:	.dword 0x206ad3c938dd5e58
reg_x21_output:	.dword 0xa03806c78ac1b99f
reg_x22_output:	.dword 0x2e64ea836c16c178
reg_x23_output:	.dword 0x13114f930042ee7a
reg_x24_output:	.dword 0x1bef2cb733e64bc8
reg_x25_output:	.dword 0x53450eb562ef032b
reg_x26_output:	.dword 0xde88eb63c40bc438
reg_x27_output:	.dword 0x6ebae736bb0b85c6
reg_x28_output:	.dword 0x3f53ef00cbfea649
reg_x29_output:	.dword 0x5c8043c8023c96cc
reg_x30_output:	.dword 0x7c554ce4cf70d59b
reg_x31_output:	.dword 0xfe35c4bff3a458e1

// Memory Blocks
	.align 8
test_memory:
	.dword 0x3623aee9311076c4, 0x98d70a61675d27c2
	.dword 0x713ff14aa94e0162, 0x5dbe5f5e9debca75
	.dword 0xaebf3ad411a8df73, 0x8ada07a2706614c1
	.dword 0x90bbf33cc2562de3, 0xfc21374884ddabe0
	.dword 0x86753bce913a7266, 0x8cb2f5f1e365e273
	.dword 0xe05ace4837685a87, 0xabe972384206dfb5
	.dword 0xd7bd66053ae3d801, 0x2650897c345f85f3
	.dword 0x56ba175cc68a2e4d, 0x6c1687e7f1dacc3b
	.dword 0x1579394a3ef4c57c, 0xf27a64b162747f53
	.dword 0x483fc54e1a35d646, 0x8c2afe9a91549dec
	.dword 0x185c519316ab4362, 0x61bf1cc1f547c417
	.dword 0x56e7095384153417, 0x37a63796548e59f8
	.dword 0xc5de477bdee34412, 0xd66e4e277ae379b8
	.dword 0x609fb78b89845c7a, 0x253b4ba1d137c0c0
	.dword 0xc25820c157b28a41, 0x0910c119e5ab8023
	.dword 0x16023f74d57565bd, 0x9e56f78b8b17005b
	.dword 0x722f50c57c2adf76, 0x61109e1bd126cc37
	.dword 0x995a34733c8f8641, 0x53c698a54bfd3714
	.dword 0x6830490e12bc9a8d, 0xf183b27003a9924a
	.dword 0xc449664f81a382fc, 0x7c923941b3d8c5e9
	.dword 0x417a99c66bf37635, 0x1649c49b7a2a40a5
	.dword 0x788589b671cf6df8, 0x8c5bad3c98cf730e
	.dword 0xd9a0a23bc287b772, 0x41f0f8eaeacb4a03
	.dword 0xae7270b4c0ebb4d2, 0x66d4be72228a5c68
	.dword 0xb3dcd16154fda41b, 0x691245ebf1e3c016
	.dword 0xca9ad342c81b7f3b, 0x561e6943071dba13
	.dword 0x707e764c5e4d495d, 0x9c17f8f40c90be02
	.dword 0x2149a7b7e99a5d7b, 0x32232914f33670dd
	.dword 0x27f020b5884c9236, 0xcca04a981b19a2e0
	.dword 0x75c60b4de62146e9, 0x173e54d0f27774c8
	.dword 0x8ef9917f4fd5adfb, 0x6fee033564b11c3d
	.dword 0xb0f3baa6e17ce874, 0xc2c28b62a030fb8c
	.dword 0xda1f3b2717e3c6d2, 0xac192f67fd5d0098
	.dword 0x015a1a462d2f431d, 0x2c31303e03db7f12
	.dword 0x7041525556200839, 0x01f1e495fe0ef9e7
	.dword 0x14d3cf1431369a7a, 0x3a34f7d740008ffa
	.dword 0x9edc6e545898f57d, 0xf1c7156536380013
	.dword 0x2268e6dcf453b335, 0x82b18425a57b7816
	.dword 0xac8db990a19e1044, 0xed837640dd60a377
	.dword 0x091590d0d669618b, 0xdd7a1128503baced
	.dword 0xd8bcb21dbbf9cf04, 0x06d271d852902765
	.dword 0xde7f660308cf67ce, 0x3181315f2df31239
	.dword 0x118c7a32b703e389, 0x2c3f2d9e268c6ca1
	.dword 0xe6db41ed31b2a4e3, 0x4c939a50325a0c69
	.dword 0x6b76b8a72f45d173, 0x747f9e49853cabe4
	.dword 0x1585aaea70dc92c5, 0xc5f0010387f36320
	.dword 0xb032097ae5abd4b5, 0xeb5dac5691b9005a
	.dword 0xe40fcabaad7c1500, 0xe44e0687bf79f3b4
	.dword 0xacc5fe506c7c1817, 0x8ff068846fd0c224
	.dword 0x83c2f702adc99737, 0x4026346d5b6233af
	.dword 0x40eeaeeb5e8e3bb5, 0xb81750548511b0d7
	.dword 0x2bdcc9cafaa07b9e, 0x634d094798198352
	.dword 0x9431d9b7ea7d2b7f, 0xd969a28ef299edfc
	.dword 0x8d05c9fefa67d980, 0xf7331532fced500d
	.dword 0x3f47944438cd45b7, 0xcc0bc3c0683ec78e
	.dword 0x40c4a3edffe48bba, 0x2b5c264a14c40708
	.dword 0xaab88bc25940d176, 0xf81cb2b438d2527f
	.dword 0x61eff1ce42ce8f3e, 0xdddf852ea911d79e
	.dword 0x5dd3d586f0d4c526, 0x82ad8d010691d533
	.dword 0x59609434d943b192, 0xb8034186fcb345dc
	.dword 0x7b5e4f8ed71fdd09, 0x7b75237c76070202
	.dword 0x50669aa0d2718f4e, 0xe1448e7acf978d07
	.dword 0x339d90f52f0e01b1, 0x40b19ec214e601bb
	.dword 0xa8c2bbf18410e2a2, 0x235f2f386764d213

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
