// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	addi x20, x0, -1685
	addi x24, x0, -501
	mulhu x5, x18, x3
	addi x28, x0, 1623
	addiw x3, x14, 1658
	addi x11, x0, 2009
	slti x10, x9, 99
	la x13, test_memory+242
	lw x19, 770(x13)
	srliw x23, x23, 1
	sub x18, x20, x20
	addw x22, x5, x11
	divu x15, x24, x11
	divuw x31, x19, x23
	addi x22, x0, 1
	addi x15, x0, 606
	add x10, x8, x19
	addi x18, x0, 1979
	addi x9, x0, -287
	slt x27, x28, x28
	addi x16, x0, 1514
	la x21, test_memory+90
	addi x26, x0, 313
	mulw x7, x16, x26
	addw x20, x14, x14
	addi x5, x0, 1136
	sllw x24, x18, x18
	andi x23, x6, 328
	addi x12, x0, -1167
	sll x22, x22, 63
	addi x31, x0, 1016
	sllw x2, x15, x31
	addi x29, x0, -843
	addi x11, x0, -2004
	remuw x25, x9, x29
	addi x6, x0, -998
	addi x3, x0, -1
	divu x14, x12, x6
	la x4, test_memory-702
	la x1, test_memory+2861
	xor x3, x3, x22
	and x13, x8, x3
	sraw x10, x17, x17
	slt x29, x31, x31
	remu x6, x26, x26
	sraiw x16, x25, 3
	la x14, test_memory+2123
	addi x23, x0, 1146
	or x17, x11, x22
	addi x28, x0, 533
	sb x22, -1379(x14)
	addi x18, x0, -1994
	addi x12, x0, 1377
	ld x8, 30(x21)
	addi x27, x0, -47
	lb x30, 1670(x4)
	slt x25, x27, x27
	slt x19, x5, x11
	addi x7, x0, -361
	addi x26, x12, 1909
	remuw x2, x23, x28
	sh x30, -1887(x1)
	addi x9, x0, -1604
	beq x12, x26, crash_backward
	addi x4, x0, -1281
	add x2, x24, x21
	la x5, test_memory+612
	addi x22, x0, 243
	addi x1, x0, 1570
	sw x8, -396(x5)
	srai x15, x12, 46
	addi x6, x0, -258
	blt x0, x0, crash_backward
	addi x25, x0, -1118
	addi x23, x0, -886
	addi x24, x0, -167
	remu x3, x23, x23
	addi x30, x0, -1623
	addi x16, x0, 904
	remuw x29, x26, x17
	addi x19, x0, 491
	and x27, x18, x18
	remu x10, x22, x22
	div x3, x16, x16
	div x8, x30, x16
	or x5, x9, x9
	la x23, test_memory+1956
	or x13, x28, x28
	bltu x0, x0, crash_forward
	addw x31, x18, x24
	addi x17, x9, 778
	addw x28, x4, x6
	srlw x11, x19, x19
	srl x21, x25, x25
	remu x6, x9, x9
	la x17, test_memory-448
	mulw x20, x7, x9
	addi x8, x0, -1681
	addi x16, x0, 1287
	mulhsu x10, x30, x30
	sllw x30, x29, x1
	la x28, test_memory+1120
	mulh x19, x23, x23
	addi x3, x16, 1440
	mulh x14, x22, x1
	addi x18, x0, 0
	addi x29, x0, -1217
	divuw x26, x18, x18
	addi x13, x0, 0
	sh x5, 946(x17)
	addi x5, x22, 0
	lhu x27, -900(x28)
	addi x2, x0, 1972
	beq x16, x3, crash_forward
	div x11, x21, x21
	addw x12, x29, x2
	addi x4, x5, 0
	addi x21, x0, -1900
	addi x31, x0, 1492
	lh x15, -1158(x23)
	addi x25, x0, 690
	bne x18, x13, crash_forward
	addi x15, x0, -275
	srlw x29, x8, x17
	sra x19, x15, x15
	la x16, test_memory+284
	addi x27, x0, 1
	divw x17, x13, x13
	addi x9, x0, 1524
	mul x6, x21, x25
	rem x24, x8, x31
	addw x18, x31, x20
	addi x12, x0, 1
	addi x23, x0, 1282
	addi x6, x0, -1685
	addi x7, x0, -1092
	sll x27, x27, 63
	divu x25, x6, x6
	mul x26, x23, x23
	addi x6, x0, 851
	addi x14, x0, -408
	addi x19, x0, 736
	addi x22, x0, -1
	addi x23, x0, 1528
	mul x17, x19, x19
	slli x3, x4, 3
	srli x24, x19, 38
	divuw x29, x4, x9
	addi x8, x0, 230
	srl x26, x13, x26
	blt x5, x4, crash_forward
	addi x31, x0, 23
	div x25, x6, x23
	add x18, x8, x31
	sll x12, x12, 63
	addi x20, x7, -1096
	xor x22, x22, x27
	and x1, x0, x22
	addi x2, x14, -392
	sllw x11, x9, x9
	or x30, x12, x27
	la x28, test_memory+1807
	addi x21, x0, -1
	xor x21, x21, x12
	and x13, x7, x21
	sh x31, -1313(x28)
	ld x10, 204(x16)
	or x15, x10, x12
	srl x24, x23, x12
	addi x31, x0, 1654
	add x29, x29, x29
	addi x28, x0, -1145
	or x17, x24, x24
	addi x13, x0, -57
	addi x22, x0, 1647
	addi x23, x0, 1094
	srl x4, x22, x22
	slt x8, x4, x4
	or x18, x28, x28
	addi x26, x0, 1
	add x7, x31, x13
	addi x5, x0, -632
	la x10, test_memory+1563
	subw x19, x19, x19
	sll x26, x26, 63
	addi x12, x0, 1520
	srlw x21, x12, x12
	addi x1, x0, 1
	sll x1, x1, 63
	and x11, x23, x23
	sll x22, x27, x27
	addi x13, x0, 508
	remu x16, x23, x1
	addi x31, x0, 1
	la x17, test_memory+1354
	sraw x2, x13, x13
	addi x19, x0, -324
	addi x24, x0, -868
	addi x4, x19, -1907
	remu x3, x5, x5
	sll x31, x31, 63
	addi x25, x0, -1
	addi x20, x0, -1
	addi x23, x0, -1
	addi x30, x0, 380
	sltiu x12, x3, -926
	la x21, test_memory+984
	sd x28, -906(x17)
	xor x23, x23, x31
	and x6, x30, x30
	addi x22, x0, -944
	xor x20, x20, x26
	lhu x18, -190(x21)
	xor x25, x25, x1
	sb x20, -859(x10)
	and x27, x29, x25
	addi x29, x13, 1363
	bltu x29, x13, crash_forward
	and x9, x10, x20
	mulhsu x28, x3, x3
	addi x6, x0, 813
	sub x30, x16, x19
	addi x16, x0, -22
	addi x10, x0, 1
	srl x5, x22, x16
	addi x3, x0, 703
	bne x0, x0, crash_backward
	or x14, x9, x26
	addi x12, x0, -249
	sll x10, x10, 63
	and x11, x16, x23
	add x19, x6, x6
	or x8, x11, x31
	addi x18, x0, -1
	sra x21, x3, x3
	xor x18, x18, x10
	add x6, x16, x24
	addi x4, x12, -742
	mulhu x7, x24, x24
	addi x16, x0, -1180
	addi x19, x0, 1945
	slti x13, x15, -1389
	bgeu x9, x14, crash_backward
	addi x28, x0, 1930
	or x22, x16, x16
	or x15, x15, x1
	addi x29, x0, -1491
	and x2, x8, x18
	blt x27, x15, crash_forward
	la x21, test_memory+1723
	divw x30, x29, x29
	sd x23, -1427(x21)
	beq x12, x4, crash_forward
	divu x6, x23, x23
	remu x5, x19, x28
	addi x3, x0, 941
	or x17, x2, x10
	beq x2, x17, crash_backward
	addi x24, x0, 256
	add x7, x3, x24
	addi x19, x0, 953
	addi x29, x0, -702
	mul x24, x19, x29
	div x25, x4, x4
	sll x12, x28, x28
	addi x1, x0, 1
	addi x15, x0, -1902
	addi x5, x0, -1870
	addi x23, x0, -438
	divw x31, x25, x0
	la x24, test_memory+1340
	addi x22, x0, -1913
	addi x6, x0, -454
	mulhsu x28, x22, x6
	srai x14, x9, 38
	addi x3, x0, -408
	mulh x18, x13, x19
	sll x1, x1, 63
	addi x16, x0, 1134
	addi x8, x0, -1
	addi x7, x0, 1882
	la x29, test_memory+550
	mulhu x25, x31, x7
	addi x13, x16, 1083
	sd x9, 74(x29)
	addi x10, x0, -1953
	sltu x21, x15, x7
	xor x8, x8, x1
	and x17, x23, x8
	mulhsu x20, x5, x5
	or x2, x19, x1
	addi x4, x3, -85
	addi x11, x0, -286
	or x9, x10, x11
	addi x30, x0, 1682
	la x26, test_memory-1191
	sh x23, 1785(x26)
	addw x27, x23, x30
	lb x19, -709(x24)
	bgeu x16, x13, crash_forward
	andi x28, x27, -851
	addi x29, x0, 1121
	andi x11, x5, -14
	addi x30, x0, -1069
	addi x8, x0, -418
	sub x10, x31, x23
	srai x21, x3, 34
	addi x13, x0, 1
	sraiw x12, x28, 18
	addi x18, x0, -1074
	la x2, test_memory+1831
	add x31, x30, x30
	addi x3, x0, -832
	mulw x21, x3, x3
	la x30, test_memory+2018
	lui x25, 664730
	addi x12, x0, 1685
	mulhu x9, x12, x12
	srlw x24, x29, x29
	addi x16, x0, 1853
	addi x14, x0, 729
	la x17, test_memory+630
	divu x20, x18, x14
	sw x11, -1214(x30)
	mul x3, x24, x8
	addi x31, x0, -849
	addi x27, x0, -724
	addi x9, x0, -840
	la x14, test_memory-615
	add x21, x25, x4
	slti x30, x11, -349
	addi x10, x0, 1840
	sub x5, x12, x10
	la x3, test_memory+935
	divuw x29, x31, x9
	sw x15, -1527(x2)
	la x24, test_memory+1591
	sll x13, x13, 63
	addi x6, x0, -1
	addi x30, x0, 1415
	addi x29, x0, 1
	remu x22, x21, x20
	addw x12, x28, x28
	sraw x9, x30, x30
	add x1, x8, x16
	rem x31, x30, x30
	xor x22, x29, x29
	addi x4, x0, 0
	addi x1, x0, 1298
	lh x7, 302(x17)
	xor x6, x6, x13
	addi x9, x0, 361
	addi x23, x0, 0
	bltu x4, x23, crash_forward
	la x28, test_memory+1607
	ld x11, -703(x28)
	and x26, x31, x6
	addi x16, x0, -2022
	sll x29, x29, 63
	addi x25, x0, -1
	divw x30, x9, x16
	addi x17, x0, -1271
	or x19, x25, x13
	xor x25, x25, x29
	lh x18, -789(x3)
	slt x2, x1, x1
	sra x15, x27, x27
	addi x8, x0, -1801
	and x5, x7, x25
	sllw x10, x0, x0
	lbu x20, 1163(x14)
	addi x10, x0, 500
	sw x9, -1047(x24)
	addi x23, x0, -694
	addi x15, x0, 598
	addi x9, x0, 1422
	rem x12, x1, x8
	or x21, x5, x29
	addi x28, x0, -1711
	sub x30, x28, x28
	add x2, x23, x15
	addi x18, x0, 1295
	addi x22, x0, 253
	mul x16, x10, x22
	mulw x11, x9, x18
	addi x7, x0, 1538
	mulh x31, x17, x7
	sltu x31, x27, x27
	addi x11, x4, 0
	xori x19, x10, 1981
	addi x17, x0, 526
	divu x8, x23, x18
	addi x18, x0, -1320
	srlw x7, x17, x17
	addi x14, x0, 1260
	sllw x1, x27, x27
	addi x5, x0, -855
	addi x23, x11, 0
	bltu x11, x23, crash_forward
	addi x4, x0, -1708
	addi x6, x5, -100
	addi x30, x0, 1
	sll x30, x30, 63
	sllw x2, x14, x4
	add x15, x18, x22
	addi x3, x0, 2018
	mulh x10, x18, x18
	addi x20, x0, -1
	sraw x22, x3, x3
	la x28, test_memory+1975
	bge x6, x5, crash_forward
	sw x16, -1339(x28)
	xor x20, x20, x30
	and x27, x5, x20
	or x21, x27, x30
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0xffffffffffff8002
reg_x1_init:	.dword 0x0800000000000002
reg_x2_init:	.dword 0x99be5c5765c32fe3
reg_x3_init:	.dword 0xffffffffffffffff
reg_x4_init:	.dword 0xffffffffffffffff
reg_x5_init:	.dword 0x289ea061f2697c31
reg_x6_init:	.dword 0xffffffffffff8000
reg_x7_init:	.dword 0x0000000000000000
reg_x8_init:	.dword 0x0000000000000007
reg_x9_init:	.dword 0xffffffffffffff85
reg_x10_init:	.dword 0x752593fd6d8ee07a
reg_x11_init:	.dword 0x8a8552328b8f7946
reg_x12_init:	.dword 0x0800000000000000
reg_x13_init:	.dword 0x232a08e6c3723d5e
reg_x14_init:	.dword 0x021f763c1c4c8853
reg_x15_init:	.dword 0xffffffff80000008
reg_x16_init:	.dword 0x0000000000000001
reg_x17_init:	.dword 0xf9b12fa8cbc0bdb2
reg_x18_init:	.dword 0xffffffff80000002
reg_x19_init:	.dword 0x7d291706fa37c5af
reg_x20_init:	.dword 0x98b7b76ccaf04994
reg_x21_init:	.dword 0x0800000000000004
reg_x22_init:	.dword 0x0000000000000000
reg_x23_init:	.dword 0xffffffffffffff84
reg_x24_init:	.dword 0xffffffff80000000
reg_x25_init:	.dword 0xffffffffffffffff
reg_x26_init:	.dword 0x268fdc1c587ee0b2
reg_x27_init:	.dword 0xbdde18830c439f34
reg_x28_init:	.dword 0xffffffffffffff86
reg_x29_init:	.dword 0xffffffff80000002
reg_x30_init:	.dword 0x03477c5cbceb60e3
reg_x31_init:	.dword 0xffffffff80000005

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0xeed2e7db865c017a
reg_x1_output:	.dword 0x51af4fdd8803817c
reg_x2_output:	.dword 0x3b70a29b3d837d90
reg_x3_output:	.dword 0xe29bef3742951675
reg_x4_output:	.dword 0x82bdf6768e5ca020
reg_x5_output:	.dword 0x923f3519d83402b7
reg_x6_output:	.dword 0xd92f74003e727546
reg_x7_output:	.dword 0x6cb18eb3f9feec05
reg_x8_output:	.dword 0x791d2815296a2a5f
reg_x9_output:	.dword 0x41ec7e33ab70892c
reg_x10_output:	.dword 0x807ac999bb6e3bab
reg_x11_output:	.dword 0x5b9e619d159dc246
reg_x12_output:	.dword 0x69f88e67ec6c582d
reg_x13_output:	.dword 0xdf7352dcc3ff113d
reg_x14_output:	.dword 0x4d27db850df31fd6
reg_x15_output:	.dword 0x3083751f5b50e68e
reg_x16_output:	.dword 0x333e44942aab1fe2
reg_x17_output:	.dword 0xacc8435d718f164f
reg_x18_output:	.dword 0xe8c48e8f2038b180
reg_x19_output:	.dword 0x177fb437cbcb9172
reg_x20_output:	.dword 0xff26a9b1a90a9eb8
reg_x21_output:	.dword 0x287d470a9be0ef4b
reg_x22_output:	.dword 0xb6f4d6ba0573b189
reg_x23_output:	.dword 0xafd64e3cd9058b4f
reg_x24_output:	.dword 0x4bf56b4f08ab9151
reg_x25_output:	.dword 0xb6580ad5f34c3b1d
reg_x26_output:	.dword 0x4a29e9bdd1359271
reg_x27_output:	.dword 0x030b6d53a76be0c2
reg_x28_output:	.dword 0xd5e15fea1af25c30
reg_x29_output:	.dword 0x8df38fbeddf75d38
reg_x30_output:	.dword 0x041d4183be0b88df
reg_x31_output:	.dword 0x15713cfb4bc3a730

// Memory Blocks
	.align 8
test_memory:
	.dword 0xd32d3178cf36a43e, 0x4787195c00d20a11
	.dword 0x08b96eabd5bf2c1e, 0x8fdf407e83f0d13f
	.dword 0x29bad7e5709d7747, 0x882c6c5753a4e3a0
	.dword 0x155abb0877daa69b, 0x7f8df9863d13135b
	.dword 0x24a3e38978e0047b, 0x603f5cec87c825e2
	.dword 0x61919c1f4d527668, 0x0e50de8655aad832
	.dword 0xb7a097b75300e4ed, 0xe7b0ad7029536359
	.dword 0x69d0f5ab7276bdbd, 0x62a8a14b6eb84538
	.dword 0x8d47d5330731f417, 0x85663cc54ad8518a
	.dword 0x67b22c1ae28e2371, 0x8c67c5754b064f24
	.dword 0xf471d4b5ef6cb854, 0x180284e6bbfaa57e
	.dword 0x46b907127abc4385, 0x7fe386f73013de71
	.dword 0x4047b16c427f5b65, 0xe7ad6961c3770042
	.dword 0x17c163e63c15af9a, 0xa6eb1098f84d03de
	.dword 0x55c9c376799032ed, 0xe1b855d9156aeb67
	.dword 0x6080b820cf037f75, 0x7bff02770a863cef
	.dword 0xf0d6ca695259d8f5, 0x2037ac8046efe582
	.dword 0x27c56403ac587182, 0xf983488136ebc869
	.dword 0xa1fde7ce76a1d469, 0x28eb84a2505b7ead
	.dword 0x4a5dd4febab99b4e, 0x63e540f88dd70ada
	.dword 0xa5a5699f9fabd198, 0xa011b91bc7b68504
	.dword 0x77d17839a13caa0c, 0x1af032f7a13c030e
	.dword 0x7c5064d162ab6ab8, 0x64fb46e05d3d4129
	.dword 0x31557d0f8a5db311, 0xabca14e845a0ce9b
	.dword 0x9b0d1fc4b176805f, 0x2f7efb73cbfac2c1
	.dword 0x48a7678d94ae9459, 0x5252a30ad3d13e56
	.dword 0xa2564cd380fa220b, 0xcea3736fe0d13cf5
	.dword 0xa7b772f8b8e1e4ff, 0x75dec5f320c07adc
	.dword 0x48f114ccf534069c, 0x1a1a6904728172f2
	.dword 0x9d4cc4457f1375c8, 0x728a4907dd4ab90b
	.dword 0x8f91f16de8b294d5, 0x8167526f25833469
	.dword 0x860d6c9e77706199, 0x2d99e105d3c8fe85
	.dword 0xe15257eca3dd7bde, 0xe4cb50889ec0ea0f
	.dword 0x6c943be30ca0adfd, 0x88a7827b85a8f634
	.dword 0x7c4133721e88dbc4, 0x0d506d3a5888321e
	.dword 0x267e6325f0947ba0, 0xc493084cff7ad4c0
	.dword 0xdc982f9a3494fdf8, 0xaa8e29ffa5418cd3
	.dword 0x879ae72d1696c6d6, 0x4a712a3356274d1b
	.dword 0xec5fd2f5cc9c9dcc, 0x36015e6c8bc118ee
	.dword 0x7fa5e2f3e7c7b815, 0x1df2c337243f94f6
	.dword 0x688c698a0df3c0f9, 0x7d1166a711426035
	.dword 0x5a399a2921608476, 0x71fe68398a997949
	.dword 0x43ddbf4e6979201c, 0xdc1ca1e7356133f1
	.dword 0xe3df5bae9662de38, 0x75764e6faba982cf
	.dword 0xcf0baab066fc1f34, 0x662640fa5ca1996f
	.dword 0xea6a341be095f53d, 0x736481e0554d2a87
	.dword 0x1509670fdf395626, 0x4dff64c32658c680
	.dword 0x6a057039e6f3078c, 0xcf076be490f71e34
	.dword 0x2969bf4288afa939, 0xe7058cb6b3092df9
	.dword 0xbba0ef8901e381cd, 0x3978a9b01e6f94de
	.dword 0x1e2e081083cff19b, 0x7cd0555f30839c34
	.dword 0x44a546bc6ff2afd0, 0xbbe832c3719ab34f
	.dword 0xf589eab6e14935da, 0x126886da195f638e
	.dword 0x7b19b237bfd4fd06, 0xd6a5cf76a7f70097
	.dword 0x2b65ff65f373726b, 0xd2e27357f59b98e7
	.dword 0x8ca5d897cee6c506, 0x0272df770ec5ea89
	.dword 0x61ab37c19a1af226, 0x9e75a59f927b6025
	.dword 0x9a195d2afd84b40a, 0x56d670433f105a3c
	.dword 0x51a119629e2e36c7, 0xa86bdf8a97ef48b1
	.dword 0x4463427444dfb76f, 0xf56da3ad88f9588a
	.dword 0x63e8c856a110716f, 0x8b8168861a1db9f7
	.dword 0x3b231ca8ec2e7e39, 0x1f7266616410c294
	.dword 0x37dee19e19928b22, 0x9390ac1445dc6feb
	.dword 0x983e1434b55e898c, 0x87f27655de980e3c

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
