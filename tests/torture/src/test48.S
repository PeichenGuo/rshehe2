// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	addi x4, x0, 1957
	andi x24, x1, -1298
	mulh x27, x10, x10
	la x3, test_memory+900
	la x28, test_memory-217
	la x6, test_memory+1144
	sw x7, -1072(x6)
	addi x13, x0, -805
	addi x11, x0, 1049
	lb x26, 292(x28)
	la x8, test_memory+1409
	addi x30, x0, 1689
	sll x19, x4, x4
	mulhsu x21, x11, x11
	sltu x16, x2, x2
	addi x21, x0, -992
	srlw x10, x1, x31
	la x22, test_memory+577
	sub x11, x7, x7
	srl x5, x28, x28
	addi x24, x0, -889
	addi x15, x0, 1282
	addi x25, x0, 0
	addi x14, x0, -1212
	addi x29, x0, -1237
	addi x28, x0, 107
	div x16, x21, x28
	addi x27, x0, 1068
	mulhu x20, x15, x29
	addi x26, x18, 0
	addi x2, x0, 0
	sub x1, x13, x13
	addi x17, x0, 943
	bltu x25, x2, crash_forward
	mulw x23, x14, x14
	slt x12, x30, x17
	addi x5, x0, -1500
	mulhsu x18, x5, x27
	addi x19, x0, 1186
	remu x6, x19, x19
	ld x7, -1305(x8)
	lw x31, -188(x3)
	srl x9, x24, x27
	sd x21, 135(x22)
	addi x11, x0, -1305
	addi x4, x26, 0
	or x10, x5, x11
	la x31, test_memory+383
	addi x19, x0, 961
	addi x25, x0, 1
	la x22, test_memory-1567
	sra x15, x14, x10
	sll x25, x25, 63
	sh x20, 237(x31)
	addi x29, x0, 2036
	addi x7, x0, 0
	sllw x11, x0, x15
	addi x23, x0, 899
	add x31, x9, x9
	addi x13, x0, -1
	mulw x14, x29, x29
	addi x28, x0, 2046
	mulhu x12, x23, x23
	addi x2, x0, 0
	addi x16, x4, 0
	addi x30, x0, 462
	lh x1, 1803(x22)
	la x17, test_memory+2234
	addi x24, x0, 0
	or x15, x25, x25
	addi x8, x16, 0
	addi x20, x0, 1233
	addi x5, x0, 0
	blt x16, x8, crash_backward
	sraw x18, x19, x30
	addi x27, x0, 1
	sll x27, x27, 63
	blt x7, x5, crash_forward
	slt x10, x28, x20
	divuw x8, x26, x26
	la x26, test_memory+751
	addi x22, x0, -126
	sh x1, -1752(x17)
	sd x27, 89(x26)
	slti x30, x13, -682
	addi x29, x0, -1306
	addiw x10, x18, -1395
	addi x9, x0, -1
	addi x17, x0, -1311
	addi x26, x0, -791
	xor x9, x9, x27
	rem x5, x12, x14
	addi x14, x0, 1413
	addi x23, x0, 1174
	and x3, x14, x9
	div x12, x29, x14
	blt x2, x24, crash_forward
	or x6, x3, x27
	addi x29, x0, -1756
	addi x11, x0, -1487
	divw x31, x23, x11
	addi x12, x0, -1959
	addi x8, x17, -1904
	la x16, test_memory-735
	divuw x1, x22, x22
	bge x6, x3, crash_forward
	addi x5, x0, -189
	addi x7, x0, 1
	xor x13, x13, x25
	and x4, x17, x13
	sll x7, x7, 63
	ld x28, 1679(x16)
	addi x15, x0, -1
	divu x19, x29, x12
	or x21, x4, x25
	addi x30, x0, 953
	xor x15, x15, x7
	divuw x10, x26, x30
	mulhsu x14, x5, x5
	and x18, x6, x15
	or x20, x18, x7
	bge x21, x4, crash_forward
	beq x18, x20, crash_forward
	la x17, test_memory+1111
	la x7, test_memory-559
	addi x14, x0, 1630
	addi x31, x0, 1292
	addi x12, x0, -189
	addi x30, x0, -1008
	mul x23, x1, x10
	srl x24, x1, x1
	mulw x18, x14, x14
	addi x1, x31, 1955
	la x25, test_memory+567
	srlw x13, x1, x16
	lbu x29, -680(x17)
	addw x19, x12, x12
	addi x3, x0, 320
	subw x16, x14, x3
	sb x11, 89(x25)
	addi x2, x0, -566
	addi x29, x0, 766
	la x13, test_memory+313
	addi x17, x0, -173
	rem x11, x23, x23
	mulhsu x21, x25, x25
	lhu x20, 1221(x7)
	addi x18, x0, 1006
	la x6, test_memory+1158
	lw x15, -266(x6)
	addi x20, x0, -565
	sub x21, x22, x26
	sraw x8, x30, x2
	xor x19, x30, x30
	sllw x11, x21, x21
	addi x22, x0, -1200
	addi x5, x0, 1295
	div x23, x17, x17
	mulhsu x27, x14, x28
	or x7, x20, x20
	addi x9, x0, -1409
	sltu x10, x22, x22
	slt x26, x18, x18
	rem x24, x9, x9
	lbu x3, 606(x13)
	xor x28, x5, x5
	sraw x31, x16, x16
	addi x14, x0, -561
	addi x16, x0, 829
	addi x12, x16, 1522
	mulh x4, x29, x14
	addi x14, x0, 1
	ori x31, x18, -904
	la x16, test_memory+1405
	divuw x6, x26, x20
	divu x2, x28, x28
	addi x18, x0, -1634
	addi x1, x0, 1753
	addi x21, x0, 1848
	sra x5, x28, x6
	addi x25, x0, -1010
	addi x15, x0, 490
	divu x20, x1, x1
	addi x19, x0, -379
	addi x4, x0, 1
	sll x14, x14, 63
	sll x4, x4, 63
	sltu x11, x18, x21
	addi x29, x15, 1020
	sltu x12, x29, x30
	slt x28, x25, x19
	addi x27, x0, -1
	xor x27, x27, x4
	addi x10, x0, -1
	lbu x26, -613(x16)
	sraiw x20, x14, 21
	and x17, x2, x27
	addi x18, x0, -1026
	addi x12, x0, 0
	addi x21, x0, 1757
	or x30, x17, x4
	mulhsu x28, x6, x6
	addi x5, x0, 169
	addi x6, x0, 0
	la x19, test_memory-264
	bne x12, x6, crash_forward
	addi x15, x5, 519
	la x25, test_memory+2445
	addi x16, x0, 1756
	addi x3, x0, 1
	sll x3, x3, 63
	xor x10, x10, x14
	addi x13, x0, -1
	xor x13, x13, x3
	la x29, test_memory-1271
	addi x12, x0, -54
	sh x20, 2013(x29)
	lw x2, -1709(x25)
	addi x30, x0, -286
	and x9, x12, x10
	divuw x20, x13, x7
	addw x27, x18, x18
	sraw x5, x30, x30
	la x28, test_memory+800
	mulhsu x1, x18, x16
	addi x31, x0, 281
	addi x7, x0, -2003
	add x15, x12, x12
	and x22, x17, x13
	or x23, x9, x14
	or x8, x11, x3
	addi x30, x0, 1
	beq x22, x8, crash_forward
	sll x30, x30, 63
	la x6, test_memory+201
	sh x26, 726(x19)
	addi x20, x0, -1
	xor x20, x20, x30
	lwu x17, 88(x28)
	sh x12, 691(x6)
	or x26, x21, x31
	mul x19, x17, x17
	and x29, x27, x20
	addi x15, x0, 0
	srai x22, x27, 45
	bltu x0, x0, crash_backward
	addi x18, x0, 1619
	mulhsu x22, x5, x7
	addi x1, x0, 0
	addi x8, x0, 0
	mul x12, x18, x18
	or x2, x25, x30
	addi x17, x0, -1406
	addi x5, x0, 1992
	sltu x4, x15, x24
	addi x13, x0, 376
	addi x28, x0, -1476
	addi x26, x0, 1737
	addi x21, x0, -1603
	addi x25, x0, 62
	bgeu x9, x23, crash_backward
	bltu x2, x29, crash_backward
	addi x16, x0, 0
	mulh x6, x28, x21
	addi x14, x0, 1847
	addi x10, x0, -956
	sraw x3, x13, x25
	divuw x9, x10, x10
	addi x28, x0, -645
	divu x23, x5, x5
	mulh x10, x1, x9
	bltu x1, x16, crash_forward
	addi x13, x0, -1643
	la x22, test_memory+749
	addi x21, x0, 0
	addi x9, x0, 649
	la x4, test_memory-2
	sub x15, x9, x9
	srliw x1, x3, 3
	srliw x20, x29, 6
	addi x2, x0, 0
	rem x3, x26, x1
	sw x9, 135(x22)
	addi x19, x17, -565
	sb x14, 329(x4)
	addi x1, x0, -244
	blt x0, x0, crash_forward
	mulw x18, x26, x26
	addi x27, x0, 715
	slli x21, x7, 43
	addi x16, x0, 0
	addi x15, x0, 1707
	and x10, x1, x15
	la x8, test_memory-1617
	addi x6, x0, -1397
	slli x3, x14, 19
	addi x30, x0, -1024
	la x26, test_memory+788
	mulw x25, x13, x13
	mulw x24, x7, x7
	addi x22, x0, -268
	rem x29, x28, x6
	slli x31, x12, 7
	addi x18, x0, -1135
	addi x2, x0, -644
	sw x10, -340(x26)
	sra x9, x18, x2
	remu x11, x5, x27
	addi x23, x0, 0
	addi x29, x0, 641
	addi x24, x0, 0
	addi x7, x29, 422
	addi x27, x0, -1888
	bltu x0, x0, crash_backward
	addi x2, x27, -776
	and x9, x0, x16
	sra x12, x14, x30
	sraw x28, x23, x23
	addi x21, x24, 0
	addi x6, x0, 1457
	remw x20, x22, x22
	addi x17, x0, 1
	divw x15, x6, x6
	addi x11, x0, 588
	sw x1, 1701(x8)
	addi x10, x0, 1
	sll x17, x17, 63
	blt x24, x21, crash_forward
	addi x18, x0, 971
	divw x5, x11, x18
	sll x10, x10, 63
	blt x27, x2, crash_backward
	addi x1, x0, -1214
	sub x16, x7, x7
	addi x24, x0, 0
	addi x2, x0, 1431
	addi x5, x0, 291
	remuw x12, x2, x5
	sraw x14, x31, x6
	addi x23, x0, 0
	remu x7, x27, x22
	sra x29, x30, x30
	slti x22, x26, -654
	addi x28, x0, -2040
	blt x24, x23, crash_backward
	subw x8, x18, x18
	bltu x2, x2, crash_backward
	addi x21, x0, -1777
	mulhu x26, x1, x1
	addi x30, x0, -217
	divu x20, x18, x18
	divuw x15, x28, x21
	addw x9, x21, x21
	addi x19, x0, -1
	addi x25, x0, -1
	xor x19, x19, x10
	mulh x18, x30, x30
	mul x16, x12, x12
	addi x11, x0, 1846
	add x27, x22, x22
	xor x25, x25, x17
	and x13, x31, x19
	divuw x6, x11, x11
	and x31, x22, x25
	la x1, test_memory+1025
	addw x29, x26, x26
	div x7, x25, x25
	addi x26, x9, 0
	mulhsu x23, x8, x12
	addi x14, x0, -1580
	subw x27, x24, x20
	or x3, x14, x10
	blt x13, x3, crash_backward
	addi x24, x26, 0
	or x4, x24, x17
	sh x10, -73(x1)
	andi x21, x30, 1164
	blt x26, x24, crash_forward
	la x2, test_memory+1432
	la x8, test_memory+1185
	addi x20, x0, 1
	mulh x30, x14, x14
	addi x12, x0, -711
	addi x15, x0, -267
	ld x18, -1057(x8)
	sd x19, -984(x2)
	blt x0, x0, crash_forward
	srlw x22, x12, x15
	sll x20, x20, 63
	mulh x6, x15, x15
	addi x28, x0, -1
	xor x28, x28, x20
	and x5, x24, x28
	or x9, x5, x20
	beq x5, x9, crash_forward
	srli x19, x23, 12
	addi x3, x0, 1
	divw x18, x8, x8
	divw x7, x29, x4
	addi x2, x0, 1332
	la x22, test_memory+519
	addi x30, x0, -1110
	addi x25, x31, 1164
	sb x6, -313(x22)
	addi x31, x0, 1
	sll x31, x31, 63
	addi x17, x0, -989
	addi x24, x0, -668
	addi x13, x0, 371
	sllw x15, x30, x17
	xor x10, x2, x13
	addi x27, x0, -1
	sll x3, x3, 63
	addi x4, x0, -1291
	addi x29, x0, -1931
	addi x11, x0, -1
	sraw x14, x24, x4
	xor x11, x11, x3
	xor x27, x27, x31
	and x26, x17, x27
	or x9, x5, x31
	addi x16, x0, -583
	sltu x23, x29, x16
	and x20, x0, x11
	or x28, x26, x3
	blt x20, x28, crash_backward
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0xffffffffffffff87
reg_x1_init:	.dword 0x0000000000000002
reg_x2_init:	.dword 0x0000000000000007
reg_x3_init:	.dword 0x7d2394a6f344ae31
reg_x4_init:	.dword 0x0800000000000006
reg_x5_init:	.dword 0x0000000000000000
reg_x6_init:	.dword 0xf78acb4a4d75d9e1
reg_x7_init:	.dword 0xc3182b461f86071f
reg_x8_init:	.dword 0xffffffff80000001
reg_x9_init:	.dword 0x7ac31473c406e5fc
reg_x10_init:	.dword 0xf54ec71735f44a47
reg_x11_init:	.dword 0x0000000000000020
reg_x12_init:	.dword 0x0000000000000000
reg_x13_init:	.dword 0x2cc744c7177423b1
reg_x14_init:	.dword 0x5348ea871c29a00a
reg_x15_init:	.dword 0x26503bb96d333e3a
reg_x16_init:	.dword 0xffffffffffffff81
reg_x17_init:	.dword 0xdcc4d80193fe1fa6
reg_x18_init:	.dword 0xffffffffffff8003
reg_x19_init:	.dword 0xffffffffffff8009
reg_x20_init:	.dword 0x0000000000000000
reg_x21_init:	.dword 0x0b733d1ab42eb6f6
reg_x22_init:	.dword 0xffffffffffff8006
reg_x23_init:	.dword 0x84978f1a7e43e654
reg_x24_init:	.dword 0xffffffffffffffff
reg_x25_init:	.dword 0xffffffff80000004
reg_x26_init:	.dword 0xffffffffffff8006
reg_x27_init:	.dword 0xc6b06f8fdb2c52d2
reg_x28_init:	.dword 0xce4ca769ea5c2da2
reg_x29_init:	.dword 0x0000000000000006
reg_x30_init:	.dword 0xffffffff80000005
reg_x31_init:	.dword 0xffffffff80000007

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x55df3db2caeeb560
reg_x1_output:	.dword 0x2737764cb3598e5d
reg_x2_output:	.dword 0x75d7c2836f3f9fbd
reg_x3_output:	.dword 0x7eb0fcc6d2fc926d
reg_x4_output:	.dword 0xa56e49795fdb6962
reg_x5_output:	.dword 0x77220f899f8cd416
reg_x6_output:	.dword 0xa31a2901a7a40b8e
reg_x7_output:	.dword 0x6bd8f26aed8b8840
reg_x8_output:	.dword 0x0cc30b7ff57ac993
reg_x9_output:	.dword 0x44b5d88669ebfbd0
reg_x10_output:	.dword 0x467c733b8f9497ba
reg_x11_output:	.dword 0x77bb8b4c9936af2a
reg_x12_output:	.dword 0x7ce1099b79738c63
reg_x13_output:	.dword 0xd51aeee2e6c425f7
reg_x14_output:	.dword 0x78772d8eb8a3bf70
reg_x15_output:	.dword 0x2481f7aa4c6e6f28
reg_x16_output:	.dword 0x602b754fdd5c3be4
reg_x17_output:	.dword 0xe5ebe5199384a939
reg_x18_output:	.dword 0x1085174b930ae7c6
reg_x19_output:	.dword 0x0db9d5d45abc06ba
reg_x20_output:	.dword 0xcf036e5bfbdc864b
reg_x21_output:	.dword 0x60b808f60e8e170a
reg_x22_output:	.dword 0xcc530d3757c03833
reg_x23_output:	.dword 0xca2560b0022c5765
reg_x24_output:	.dword 0xbffc152af5781e73
reg_x25_output:	.dword 0x1917fa17432d5021
reg_x26_output:	.dword 0x8412c408913f0313
reg_x27_output:	.dword 0x8cf2ee388997c234
reg_x28_output:	.dword 0xc28e6d601aa52c59
reg_x29_output:	.dword 0x574e90717d34a8f9
reg_x30_output:	.dword 0xbf7a52edd0c4be27
reg_x31_output:	.dword 0x2df5bdfb28591433

// Memory Blocks
	.align 8
test_memory:
	.dword 0x06771052cb104da1, 0x76b012c9d3e51e51
	.dword 0x263a8e0854048b12, 0xd9ba1798304582f3
	.dword 0xcd27af8e0c302610, 0xcc49bd3ee01999ad
	.dword 0x15f630ea1d934fdd, 0x2b8eb9477af7b90a
	.dword 0xe5f6674ffb8a800f, 0x5f8397bf7de645d2
	.dword 0x1f03d91d488e5f73, 0xdcdd96506bbff28f
	.dword 0x80f4e109ab4cfd2f, 0xbbb69c8e6e1df34e
	.dword 0x4884d09e2e3eb226, 0x866de590efcb29a2
	.dword 0x779945e46a1b569f, 0x46f12ec4086f8ced
	.dword 0xc39aa85e4abaae28, 0x29697ffbc65352e2
	.dword 0x25a30138f1352db8, 0x1763e0cbd30d9c45
	.dword 0x24c5a2c0abc88013, 0x573f8f1702eaa9f5
	.dword 0x0fe5531676556c72, 0x36308ae4c111de2c
	.dword 0x51b5ee201b830362, 0xd8be8b7a2c340e04
	.dword 0xe1e1b2bf28ed35ec, 0x9b95b1a40d0ee73c
	.dword 0x1119af4726833af5, 0xa5ff8b54919a6e3c
	.dword 0xbe5c012b349c66e8, 0xf5b03c702181d856
	.dword 0x9131dbf693905991, 0xd9fce0e772d9464e
	.dword 0x7a528b82fd09a64c, 0x784d7c04c516231b
	.dword 0x4937e564e1185a5e, 0x0dee09085c682aef
	.dword 0x1d03dda6e97c05a2, 0x898780f1cced5e75
	.dword 0x50de32b8e2f32967, 0x31c2e99fac1b6659
	.dword 0xeaec64a7c0d83198, 0x1c25c21aeb5d2b0c
	.dword 0xa8756b8fa9325c1e, 0x8858602c898ba4c8
	.dword 0x54e5e14f48e33281, 0xedfc1336cdd527d2
	.dword 0xf380927b6eff79d5, 0xe7402040be16b0fe
	.dword 0x5fd2aa9495ecbcd3, 0xadc1eb52a0def678
	.dword 0xd6c1ef7e6ecad445, 0xbb35e201c08b40c0
	.dword 0x7c7ec0293a4311a7, 0x411bfb4d3d6a4ff6
	.dword 0x820aca911f4cf00b, 0x9b9be0a8f8d1d157
	.dword 0x52a0aced4f126f3d, 0x00d21458b6d72907
	.dword 0xed57f6228b1c7d26, 0x6898a902b8249410
	.dword 0xb524397922921175, 0xc66b5e7fbd6fe6aa
	.dword 0xf80529922adadf7b, 0x08b037f2a2a86abc
	.dword 0xd128ee9731a0c256, 0x13aadf1c4d45a2a3
	.dword 0xe8212bb2e8394751, 0xdbf268ee4f78f431
	.dword 0xac5e67c4f532fa8a, 0x71a64f5e6da07ff7
	.dword 0xbf2ccd50b65859d5, 0xe418b47cb479a8c7
	.dword 0x32a875b5f63491e0, 0x627142c859760f74
	.dword 0x78ceb3a67a446997, 0x722d3ebe8b7e06db
	.dword 0x663510d08cbfffca, 0xe5969db34597c426
	.dword 0x8f45f2e2d4903f0c, 0xe39535e43e9acf4f
	.dword 0xc06e1bb0a9cd2bdc, 0x9cda5bcb1d8b77e3
	.dword 0x10a578adbb50710a, 0x999880b311b25208
	.dword 0x7570f5a30cb9ce53, 0x13fda68cfc3fffc1
	.dword 0x2722469eb9f94d4e, 0xdfc0bd052f8dca6f
	.dword 0x16f5dd2b504d608c, 0x8b7f3bcfda0fd09a
	.dword 0x35fe7cc21ae150f9, 0xe6a98e46f915cbf1
	.dword 0x06d1227f4d1a9d88, 0xeb922438e5c3b38f
	.dword 0x93db3418346a310f, 0x521c3bfc757bbe7f
	.dword 0x44782a0a6960926f, 0x31c4b9c542878a82
	.dword 0x7a7b2914921272f7, 0x1a90a0390a666b0f
	.dword 0x64343eea90cd3f09, 0xc111fe437103249a
	.dword 0xfb403622b7f194fe, 0xab6d6627b3739819
	.dword 0xe9ed3572b8c3c646, 0x795741d77e0922c3
	.dword 0xa6ed9e1dcd60c6d4, 0x38a19884c8a0b61a
	.dword 0xd4b5ddab08082eb8, 0x606819792d8dec2b
	.dword 0x1e7926d691d2320c, 0x3f718024036c9c14
	.dword 0xe38445caf2f2b314, 0xf43aa573bcd8b2c7
	.dword 0xf1f503909d18d2a1, 0x0790d268dac4540c
	.dword 0xfebfccc3df8ca2b5, 0xf2e627e6832087cc
	.dword 0x09dc8f8712a2df6c, 0xc2e42fce7e0cf78b
	.dword 0x3d8f04b82f38d219, 0x826deb46ac078036
	.dword 0x564dd8639d68c2af, 0x9b83f260afdc9c1e

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
