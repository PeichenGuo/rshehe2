// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	la x18, test_memory-1335
	addi x3, x0, 1399
	addi x27, x0, -79
	addi x20, x0, 1
	addi x4, x0, 531
	addi x9, x0, -161
	la x24, test_memory+341
	addi x8, x0, 80
	addi x29, x0, 1
	addi x15, x0, -1798
	lb x2, 1991(x18)
	la x26, test_memory+1225
	addi x30, x0, 832
	addw x6, x9, x15
	remuw x23, x3, x8
	sll x20, x20, 63
	lh x28, -1123(x26)
	srl x25, x30, x30
	lwu x13, -133(x24)
	sra x11, x20, x18
	sll x29, x29, 63
	mulh x10, x4, x4
	addi x17, x0, -1
	la x11, test_memory-1076
	addi x22, x0, -1852
	sw x1, 1404(x11)
	addi x6, x0, 1
	addi x8, x0, 988
	addi x16, x0, -504
	xor x17, x17, x20
	addi x25, x0, 225
	addi x1, x0, 1279
	div x19, x27, x16
	xor x23, x8, x8
	and x14, x20, x17
	remw x26, x16, x16
	xor x15, x25, x25
	addi x30, x0, -1097
	subw x18, x30, x30
	mulh x5, x22, x1
	sll x6, x6, 63
	or x21, x14, x20
	addi x7, x0, -1
	lui x11, 266008
	addw x30, x17, x17
	addi x3, x0, 498
	xor x7, x7, x29
	addi x16, x0, 719
	addi x13, x3, 198
	addi x11, x0, 715
	addi x27, x0, -1860
	addi x1, x0, 363
	addi x9, x0, -1
	addi x2, x0, -9
	sllw x28, x2, x2
	and x31, x23, x7
	addi x4, x25, 1134
	addi x15, x0, -1291
	sltu x18, x27, x15
	rem x30, x16, x11
	addi x4, x0, 1
	addi x30, x0, -784
	or x12, x31, x29
	addi x19, x0, -491
	xor x9, x9, x6
	addi x25, x0, -107
	addi x13, x28, 66
	mulh x28, x11, x11
	sra x22, x1, x1
	sll x4, x4, 63
	addi x26, x0, -1834
	div x11, x7, x7
	sraiw x8, x25, 22
	and x24, x20, x9
	addi x3, x30, -133
	or x16, x0, x9
	addi x18, x0, -1
	xor x18, x18, x4
	div x5, x19, x26
	or x10, x24, x6
	mulh x23, x25, x25
	and x15, x24, x18
	or x2, x10, x4
	bgeu x15, x2, crash_backward
	addi x16, x0, 1428
	addi x23, x0, -1072
	addi x22, x0, 1
	addi x1, x16, 531
	div x28, x17, x11
	addw x13, x4, x20
	addi x6, x0, -1315
	sll x22, x22, 63
	addi x31, x0, 1280
	addi x5, x0, -1
	addi x7, x23, -690
	sltiu x8, x28, -1271
	addi x28, x12, 0
	xor x5, x5, x22
	addi x19, x0, 1405
	addi x13, x28, 0
	addi x4, x0, -92
	and x20, x4, x5
	sll x9, x16, x26
	divw x11, x31, x19
	addi x14, x0, -1743
	addi x3, x0, 826
	la x25, test_memory+1818
	addi x24, x0, 1141
	div x21, x14, x14
	bne x28, x13, crash_backward
	la x2, test_memory+1897
	addi x27, x0, 949
	addi x17, x0, 1231
	addi x31, x0, 921
	addi x16, x0, -645
	addi x23, x16, -699
	sh x13, -943(x2)
	divu x29, x4, x24
	or x30, x20, x22
	xor x10, x3, x3
	addi x14, x0, 1
	addi x13, x0, -1358
	addi x24, x0, -39
	lhu x18, -860(x25)
	addi x3, x0, -1557
	mul x8, x31, x31
	bgeu x20, x30, crash_backward
	addi x10, x0, -1654
	sra x28, x20, x20
	sll x4, x13, x10
	addi x7, x0, -464
	divu x11, x20, x15
	addi x26, x0, 1659
	addi x10, x0, 1232
	addi x30, x10, 1335
	sll x14, x14, 63
	la x18, test_memory+1207
	srl x8, x8, x1
	remw x19, x7, x7
	mul x2, x31, x20
	addi x21, x0, -1
	addi x23, x0, 984
	srlw x7, x26, x26
	addi x19, x0, -96
	mulhsu x12, x27, x17
	slli x8, x24, 0
	mulw x15, x6, x26
	lh x25, -539(x18)
	addi x4, x0, 1865
	slt x13, x4, x4
	addi x22, x31, 0
	addi x31, x22, 0
	addi x16, x0, -1960
	blt x22, x31, crash_forward
	addi x28, x0, -824
	sra x5, x23, x28
	mulhu x11, x19, x19
	xor x21, x21, x14
	divw x20, x16, x16
	and x1, x5, x21
	or x9, x20, x14
	sltu x29, x24, x3
	bge x9, x1, crash_backward
	remuw x24, x31, x31
	addi x6, x0, 0
	addi x15, x0, 615
	addi x31, x0, 856
	slliw x22, x8, 27
	la x10, test_memory-456
	slliw x28, x4, 10
	addi x16, x0, 35
	sd x21, 1320(x10)
	addi x23, x0, 0
	addi x4, x0, 1478
	bne x6, x23, crash_backward
	addi x5, x0, -1744
	addi x3, x0, 234
	addi x30, x0, 1397
	sub x25, x20, x0
	addi x8, x0, -1204
	sltu x2, x22, x22
	mul x1, x24, x10
	divw x6, x5, x5
	addi x1, x0, -692
	la x21, test_memory-465
	sub x24, x12, x12
	sraw x2, x1, x1
	remw x10, x18, x18
	la x27, test_memory+1887
	addi x25, x0, 676
	addi x20, x0, 828
	addi x7, x0, -1973
	xor x13, x16, x7
	addi x22, x0, -1048
	remu x26, x15, x8
	sllw x18, x4, x30
	lh x29, -1493(x27)
	srlw x11, x3, x3
	addi x2, x0, -672
	la x14, test_memory-1699
	sb x30, 1899(x14)
	sltu x19, x31, x20
	addi x23, x0, -1338
	addi x24, x0, -62
	divu x9, x22, x23
	remuw x1, x25, x24
	lh x28, 671(x21)
	subw x12, x13, x13
	mulw x17, x5, x5
	sltu x6, x2, x2
	addi x20, x0, 1975
	add x22, x6, x10
	addi x23, x0, 1432
	addi x27, x0, 571
	sub x7, x26, x1
	mulhsu x13, x23, x23
	addi x4, x0, -1955
	mulw x21, x14, x23
	addi x14, x0, -1436
	sll x1, x20, x4
	addi x2, x0, -1926
	mulhu x18, x11, x11
	addi x9, x0, -467
	addi x30, x0, -787
	addi x8, x0, -920
	addi x28, x0, 860
	addi x26, x0, -1428
	sll x25, x8, x28
	rem x10, x14, x2
	addi x6, x0, 835
	addw x24, x6, x6
	divw x3, x14, x14
	addi x3, x0, 963
	addi x13, x0, 286
	addi x4, x0, 1
	addi x5, x0, 113
	addi x11, x0, -32
	remuw x12, x27, x11
	slti x20, x0, 88
	addi x8, x0, -619
	addi x16, x0, 170
	addi x6, x0, 1
	addi x19, x0, 958
	addi x2, x0, 1544
	sll x4, x4, 63
	mulhsu x31, x9, x19
	xor x29, x26, x16
	addw x28, x20, x8
	add x18, x2, x2
	mulhsu x21, x3, x3
	mulhsu x22, x13, x13
	sub x17, x30, x5
	addi x1, x0, -1
	addi x25, x8, -207
	sll x6, x6, 63
	la x15, test_memory-1545
	sraiw x27, x7, 28
	addi x14, x0, -1
	mul x31, x8, x16
	addi x13, x0, 1
	xor x14, x14, x6
	addi x11, x0, -473
	xor x16, x1, x31
	sw x10, 2041(x15)
	addi x8, x0, -350
	addi x2, x0, 1
	addi x12, x0, -771
	sll x13, x13, 63
	addi x30, x0, -1610
	addi x20, x12, -951
	blt x12, x12, crash_backward
	mulhu x17, x27, x27
	xor x1, x1, x4
	addi x5, x0, -1
	mulhu x9, x8, x8
	addi x21, x30, -1894
	and x7, x13, x1
	sll x2, x2, 63
	and x24, x16, x14
	sltiu x3, x24, -1458
	addi x25, x0, -1
	addi x31, x0, 0
	remw x22, x11, x11
	xor x25, x25, x2
	and x28, x8, x25
	addw x3, x21, x21
	addi x15, x0, 0
	addi x12, x0, -66
	xor x5, x5, x13
	addi x16, x0, 1762
	addi x8, x0, 614
	addi x11, x0, -180
	and x29, x11, x5
	slt x20, x7, x10
	mulh x9, x12, x8
	beq x30, x21, crash_forward
	or x26, x3, x13
	addi x27, x0, -1526
	addi x22, x0, -173
	or x9, x14, x19
	or x18, x6, x2
	addi x8, x0, -753
	remu x15, x11, x13
	remw x17, x16, x11
	or x23, x24, x6
	addi x19, x27, -1420
	bgeu x24, x23, crash_forward
	addi x31, x0, -410
	mulhsu x12, x8, x8
	or x10, x4, x4
	bgeu x19, x27, crash_backward
	bgeu x29, x26, crash_forward
	bge x10, x7, crash_backward
	addw x21, x29, x13
	addi x3, x22, -1490
	addi x20, x0, 1709
	sub x30, x31, x20
	bgeu x3, x22, crash_forward
	subw x2, x23, x14
	addi x16, x0, 852
	remuw x27, x28, x28
	slti x20, x26, 384
	la x9, test_memory+2234
	addi x6, x0, -1118
	addw x18, x26, x26
	addi x5, x0, 1930
	addi x1, x0, -1265
	addi x29, x0, -1887
	addi x8, x0, 1
	divw x7, x13, x13
	addi x3, x0, 0
	sra x11, x6, x6
	sll x8, x8, 63
	addi x15, x0, -942
	sltu x4, x2, x22
	addi x28, x1, -589
	addi x12, x16, 1458
	sllw x17, x29, x29
	addi x20, x0, -1
	mul x13, x2, x2
	addi x31, x0, 382
	xor x20, x20, x8
	addi x19, x0, 495
	addi x23, x0, 861
	bne x0, x0, crash_forward
	bltu x12, x16, crash_forward
	sll x1, x27, x28
	addi x7, x19, 604
	add x29, x14, x27
	sra x21, x5, x23
	lbu x30, -1988(x9)
	slli x13, x4, 8
	addi x26, x0, 1546
	addi x17, x0, 1508
	and x2, x15, x20
	sltu x28, x17, x17
	addi x22, x0, 0
	mulh x28, x13, x30
	addi x7, x0, 1678
	addi x5, x0, 1454
	addi x9, x0, 1076
	addi x29, x9, 993
	mulh x30, x7, x7
	sub x10, x15, x31
	sub x17, x9, x9
	or x27, x13, x8
	addi x4, x0, -1674
	addi x14, x0, -1307
	andi x18, x7, 1627
	mulhsu x24, x26, x14
	blt x3, x22, crash_backward
	addi x21, x0, 1
	addi x13, x0, -1261
	sll x20, x23, x23
	beq x9, x29, crash_forward
	addi x2, x0, 1370
	sltu x19, x22, x22
	sll x21, x21, 63
	addi x8, x0, 1
	addi x15, x0, 44
	div x24, x28, x28
	rem x7, x23, x24
	la x25, test_memory+1451
	sh x21, -673(x25)
	slliw x18, x13, 12
	xori x11, x15, -391
	srl x6, x4, x4
	addi x3, x0, -111
	sll x8, x8, 63
	addi x30, x0, -1
	xor x30, x30, x8
	addi x23, x0, -1
	div x28, x15, x15
	xor x23, x23, x21
	and x12, x5, x23
	sra x22, x2, x3
	or x1, x12, x21
	addi x27, x0, 0
	and x31, x21, x30
	remuw x16, x5, x13
	or x26, x31, x8
	addi x14, x0, 0
	sll x10, x14, x31
	bge x26, x31, crash_forward
	blt x12, x1, crash_backward
	addi x4, x0, 1
	addi x23, x0, 1
	sll x23, x23, 63
	addi x9, x0, 0
	sll x4, x4, 63
	addi x8, x0, 1
	addi x3, x0, -1
	xor x29, x21, x28
	remu x11, x4, x4
	addi x15, x0, 1275
	addi x18, x0, 0
	addi x31, x0, -244
	addi x26, x0, 1675
	remw x28, x26, x26
	addi x25, x0, -1
	xor x25, x25, x23
	srai x1, x21, 24
	sll x8, x8, 63
	xor x10, x31, x31
	xor x3, x3, x4
	slti x27, x8, 1243
	and x17, x17, x25
	remuw x12, x9, x9
	and x14, x2, x3
	or x13, x27, x4
	or x16, x17, x23
	divu x2, x15, x15
	bgeu x14, x13, crash_backward
	la x7, test_memory-187
	ld x19, 795(x7)
	addi x30, x0, -1
	xor x30, x30, x8
	addi x21, x0, -620
	addi x6, x21, -1375
	blt x21, x6, crash_backward
	and x22, x11, x30
	or x20, x31, x8
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x09a29683111a21b7
reg_x1_init:	.dword 0xabbd5c1ff1c3f8b7
reg_x2_init:	.dword 0xffffffffffff8002
reg_x3_init:	.dword 0x3e6534fce66e781a
reg_x4_init:	.dword 0xffffffff80000004
reg_x5_init:	.dword 0x871c20fa77edc741
reg_x6_init:	.dword 0x76d2a8bcb292b5cb
reg_x7_init:	.dword 0xffffffffffffff80
reg_x8_init:	.dword 0xffffffffffffff89
reg_x9_init:	.dword 0x0000000000000000
reg_x10_init:	.dword 0xaf039ec5615e73a9
reg_x11_init:	.dword 0x131fb9670377e037
reg_x12_init:	.dword 0xffffffff80000008
reg_x13_init:	.dword 0x0000000000000000
reg_x14_init:	.dword 0xffffffffffffffff
reg_x15_init:	.dword 0xffffffff80000009
reg_x16_init:	.dword 0xffffffffffff8008
reg_x17_init:	.dword 0x0000000000000000
reg_x18_init:	.dword 0x63614563244731b2
reg_x19_init:	.dword 0xffffffffffffffff
reg_x20_init:	.dword 0xce4c024d7a70dd0e
reg_x21_init:	.dword 0x0000000000000000
reg_x22_init:	.dword 0x73329cb954b1c276
reg_x23_init:	.dword 0xffffffffffff8009
reg_x24_init:	.dword 0x637091ace1138c7b
reg_x25_init:	.dword 0xffffffffffffffff
reg_x26_init:	.dword 0xffffffffffff8004
reg_x27_init:	.dword 0x06975804ce6e89ab
reg_x28_init:	.dword 0x0000000000000002
reg_x29_init:	.dword 0xc6b784d90f2c1558
reg_x30_init:	.dword 0xe0f1ff2e7527766f
reg_x31_init:	.dword 0x83dbac07c1250194

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0xbdb1c9b38611af17
reg_x1_output:	.dword 0x22926d01669b2d31
reg_x2_output:	.dword 0xa6a270f42682b419
reg_x3_output:	.dword 0x301843d24f2e99c9
reg_x4_output:	.dword 0xedd52b108e968a97
reg_x5_output:	.dword 0xed5a41c194a5c1ce
reg_x6_output:	.dword 0x5470be15e6463154
reg_x7_output:	.dword 0xa081ad6bd4ec37a2
reg_x8_output:	.dword 0xdce6a88d984c089d
reg_x9_output:	.dword 0x656a3e0d83061514
reg_x10_output:	.dword 0xe2d706dd6e7455e5
reg_x11_output:	.dword 0x3691198f10b9bb1c
reg_x12_output:	.dword 0x2c82eaecbd39ec90
reg_x13_output:	.dword 0xb9e72ec24fe958c4
reg_x14_output:	.dword 0xce1a0a0bfc44100f
reg_x15_output:	.dword 0x09f86febc0896d63
reg_x16_output:	.dword 0xf49ae512c517e32c
reg_x17_output:	.dword 0x0aedb182c540ba11
reg_x18_output:	.dword 0x2fcacecac3a0f8a6
reg_x19_output:	.dword 0x27073137e8915656
reg_x20_output:	.dword 0xfb3d748d0259d900
reg_x21_output:	.dword 0x5b8a0936ee31dc24
reg_x22_output:	.dword 0x5bb9cd278f169195
reg_x23_output:	.dword 0x9dfb13ad0b38df07
reg_x24_output:	.dword 0xd2c492067b00a0f0
reg_x25_output:	.dword 0xe626028a6b2c229a
reg_x26_output:	.dword 0x7bf6a6910174d45a
reg_x27_output:	.dword 0xac17af86f328443c
reg_x28_output:	.dword 0x514811d25368eab3
reg_x29_output:	.dword 0xc61ee869c66ccc04
reg_x30_output:	.dword 0xaade6e5b59081085
reg_x31_output:	.dword 0x2a573b8963e3d8f1

// Memory Blocks
	.align 8
test_memory:
	.dword 0x8e77f4673e928956, 0xcd75888bb9fbdc66
	.dword 0x287a823ef57e1a3d, 0x55c65975689d18d4
	.dword 0x574046ddec9a09b7, 0x89ca47e4af6bd7b8
	.dword 0xeeb1f2d72ad2c8ba, 0xb5dcf29684238ac8
	.dword 0xd0d893760d5e990a, 0xf0174730c0e64c68
	.dword 0x160f7c261cddc4cc, 0x5d66243ab81f7362
	.dword 0xd720e211828e3b58, 0xe2da976f2a4f2dd6
	.dword 0x331e0e0d785ba753, 0x02c93c323500576f
	.dword 0x7c6e48b5c99251fb, 0xcaa27e626888fed7
	.dword 0x129de4d6df8c67c4, 0x74c5c55187494e6c
	.dword 0xf3290c0d7b167224, 0xc52dcb123c23cc33
	.dword 0x011431adc9c11aab, 0xc0f4a3f34225250d
	.dword 0x13de4fe5fb238b55, 0x83923a496400f727
	.dword 0x1877532366730023, 0xf9a042727a6c4fb7
	.dword 0xa4a757b21a095de7, 0xcc1aeb172bb5cfe4
	.dword 0xe4f99da9cdbde25f, 0xe8c5cdb0e086ad05
	.dword 0x8108570873904186, 0xb8d0e34ed8b7000e
	.dword 0x1034b41b6957c425, 0x26518194ead31846
	.dword 0xc3a8d221cf2d3baf, 0x37dfa4069896c53d
	.dword 0xa83770330a5fdf4e, 0xf7e805874d7ecbfd
	.dword 0x1d878e5ca1326639, 0x0747ce1bd1dffb7f
	.dword 0x06385b10919ef348, 0x18ced8f3eff69460
	.dword 0x988c12bd1235a5c9, 0x6191d6aaa057f7d4
	.dword 0x4eeeb5b96912e394, 0x08c5cfccab5bd1da
	.dword 0x1d97b8659f27b05c, 0xd572cb98d4b132b1
	.dword 0x04d411944edfa648, 0xc8e39f0860a74b8a
	.dword 0x38784b2479d563c1, 0x4e95280d06f8c27e
	.dword 0x2ad078ee1aff828d, 0xfdc7791d6063d1c2
	.dword 0xbe5e39e44ecd6c1c, 0x29f7b8f12a48a618
	.dword 0x041327773a4c9f22, 0x46b1ba88b12ab088
	.dword 0x2db85738fae43a65, 0x4c9491739788df4f
	.dword 0x9419d2c292bde0d7, 0x3955a64e7d4bf218
	.dword 0xd89729d807d04ae7, 0x97420f89b4495d69
	.dword 0xa02882ca65f11913, 0xda763270d34c715f
	.dword 0x2cf9cd1c7c98bbc1, 0xbefff06a31feb79e
	.dword 0x19b3fa67905c844f, 0x9b9fe47af023bc82
	.dword 0xb8a66182abd03368, 0x8522750f612bb79a
	.dword 0x8780afde34c19899, 0xde91bdf97d63c755
	.dword 0xd8700d2e2ed61723, 0x870d96b93b41b3fd
	.dword 0x3978554f7cbb2412, 0xbf2738fb88b46de5
	.dword 0x5d0c8c652a98118e, 0x61724b689541bade
	.dword 0xd177f1439880bb70, 0x6cd5549a7d4cc6ef
	.dword 0xd1db52114f8de918, 0xaf3fda6864688c44
	.dword 0xf19887289139787d, 0xad0cb16b13544666
	.dword 0x7c403840c3e9a685, 0x80bb40c01d6f64ac
	.dword 0xaeb44fccd2780896, 0x3812be0bfc55aff1
	.dword 0x9c73c0a64c360b6c, 0x436ea5c0fe2b9786
	.dword 0xbc2a81e588ba0b2c, 0x8223f3a00f2dd96a
	.dword 0xf2eae51593dd58b9, 0xb7e2df7d8096f9b8
	.dword 0x2423aa8b1404c046, 0x2af12249d9203d60
	.dword 0x0fb8780c6c52652d, 0x7e55074d4d8b1c19
	.dword 0xc5d895b7d6f906fe, 0xbdc9cdb3c4fb5d96
	.dword 0x7b8a152636d603d9, 0xf7da1e4ac4b955f7
	.dword 0xc19dc6cc9bf8ac00, 0xa505998b7c76f582
	.dword 0x5c22a1a67212baa7, 0xb5a2c1d596a99f92
	.dword 0x70b5810ea337080e, 0x337ec5ffc335fccf
	.dword 0xd0745cf19208c8d1, 0x7450f010fcca3c9e
	.dword 0x852a60262dceee7e, 0x6f2fbc47ce1679db
	.dword 0xe2bc8114de047d68, 0xad91dc62d2da36c5
	.dword 0x7434809e0337ebba, 0xd845ab1d04b92439
	.dword 0x9942733b0d98ddce, 0x1e6dd3f83438a823
	.dword 0x5beb3865ffb4d3bf, 0xc03a333c2e6ad731
	.dword 0x609c8437c2d89c3c, 0x3d00323f46e2d5c8
	.dword 0x2b455f533395a09f, 0xe4c623e546d9d43b

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
