// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	addi x30, x0, -1881
	addi x20, x0, 844
	addi x22, x0, -1990
	subw x26, x8, x8
	addi x13, x0, 621
	la x16, test_memory-530
	addi x8, x0, -665
	addi x29, x0, -927
	addi x15, x0, -473
	addi x28, x0, 483
	addi x11, x0, -212
	sraw x17, x20, x28
	addi x31, x0, 1949
	addi x3, x0, -949
	addi x7, x0, 133
	add x24, x4, x24
	la x12, test_memory+2083
	div x25, x22, x23
	addi x10, x22, -709
	mulhsu x9, x29, x7
	mulhu x5, x3, x3
	lhu x2, -1761(x12)
	bgeu x10, x22, crash_backward
	addi x19, x0, -1207
	divuw x1, x15, x15
	la x25, test_memory+533
	addi x18, x0, 685
	addi x15, x0, 989
	addi x17, x0, 1
	addi x21, x0, 90
	mulhu x20, x16, x16
	and x4, x11, x18
	divw x1, x18, x15
	sd x4, 666(x16)
	mulhsu x24, x19, x19
	addi x22, x0, -219
	addi x2, x0, -1771
	sll x17, x17, 63
	addi x7, x22, -1799
	addi x6, x30, -638
	la x12, test_memory+1192
	beq x22, x7, crash_backward
	addi x20, x0, -39
	divuw x14, x13, x21
	la x18, test_memory+1913
	addi x28, x0, -1
	div x5, x15, x2
	addiw x1, x19, -345
	la x11, test_memory-116
	mulw x29, x20, x25
	addi x16, x0, -1195
	addi x14, x0, 1
	sd x4, 852(x11)
	lh x4, -1173(x18)
	divuw x9, x3, x3
	xor x28, x28, x17
	sh x23, 199(x25)
	sd x15, -272(x12)
	addw x23, x8, x31
	and x27, x9, x28
	addi x29, x0, 1890
	addi x3, x0, 422
	addi x2, x0, 1278
	addi x19, x20, -140
	sll x14, x14, 63
	rem x1, x29, x29
	addi x10, x3, 557
	divw x22, x25, x25
	addi x13, x0, 587
	beq x20, x19, crash_forward
	or x26, x21, x17
	beq x27, x26, crash_backward
	addi x15, x0, -1
	mulw x7, x2, x13
	addw x24, x16, x16
	xor x15, x15, x14
	and x21, x22, x15
	or x5, x21, x14
	blt x21, x5, crash_backward
	remuw x15, x13, x13
	addi x26, x0, 1976
	mulw x7, x1, x31
	blt x0, x0, crash_backward
	addi x28, x0, -172
	xori x22, x4, -1031
	divuw x16, x10, x2
	la x19, test_memory+1769
	la x13, test_memory-594
	lbu x18, -889(x19)
	sltu x27, x26, x26
	remuw x23, x23, x23
	addi x16, x0, 1
	mulhsu x10, x8, x8
	blt x23, x23, crash_backward
	addi x3, x0, -234
	addi x4, x0, -67
	blt x12, x12, crash_forward
	sltu x20, x26, x28
	addi x12, x0, -448
	mulw x24, x12, x12
	addi x14, x0, 1735
	sll x16, x16, 63
	la x9, test_memory-1454
	addi x30, x0, 1899
	remuw x5, x4, x4
	lhu x11, 762(x13)
	addi x1, x0, -1
	sub x2, x8, x8
	sllw x8, x3, x3
	divu x21, x30, x30
	addi x31, x0, 1090
	lbu x6, 2012(x9)
	divw x17, x29, x6
	srlw x25, x26, x26
	xor x1, x1, x16
	mulhsu x29, x14, x31
	and x15, x26, x1
	or x7, x15, x16
	la x30, test_memory-1674
	addi x19, x0, -1541
	addi x5, x0, 302
	addi x7, x0, -764
	add x16, x7, x7
	addi x9, x0, -65
	addi x21, x0, 752
	lb x26, 1805(x30)
	addi x25, x0, 1860
	addi x3, x0, 1
	sll x3, x3, 63
	sub x24, x5, x5
	addi x22, x0, 1332
	addi x23, x0, 634
	la x10, test_memory-1083
	div x8, x23, x23
	la x13, test_memory+1838
	addi x15, x0, -68
	sb x1, 1644(x10)
	and x17, x25, x10
	addi x4, x0, -394
	sltu x29, x19, x15
	addi x5, x0, 331
	sll x12, x22, x22
	addi x30, x0, -209
	sra x11, x7, x7
	and x18, x5, x5
	addi x20, x0, 1885
	srl x31, x25, x20
	addi x27, x0, -1026
	divuw x14, x21, x27
	ld x16, -1446(x13)
	la x19, test_memory+577
	addi x22, x0, -1265
	blt x5, x5, crash_forward
	addi x26, x0, 46
	addi x31, x0, 1060
	remu x6, x9, x4
	mulhu x23, x26, x26
	addi x4, x0, 1
	addi x29, x0, 743
	addi x25, x0, -1165
	lb x16, -402(x19)
	sll x4, x4, 63
	addi x27, x0, 141
	addi x20, x0, 163
	add x6, x2, x2
	and x8, x24, x24
	div x12, x25, x27
	div x14, x29, x29
	or x21, x22, x20
	addi x9, x0, -1
	srlw x24, x5, x30
	addi x18, x0, 1958
	addi x2, x0, -1
	addi x13, x0, 1063
	xor x9, x9, x4
	la x19, test_memory+350
	slt x6, x26, x20
	mulw x30, x14, x14
	la x21, test_memory+2946
	lwu x14, -194(x19)
	xor x12, x19, x19
	srai x22, x16, 59
	addi x29, x0, 0
	addi x16, x0, 0
	xor x2, x2, x3
	and x28, x1, x2
	remu x7, x30, x23
	and x23, x9, x9
	or x11, x14, x14
	addi x5, x0, 1
	or x26, x20, x4
	or x1, x28, x3
	slt x15, x31, x18
	sll x5, x5, 63
	addi x17, x0, -1439
	bne x29, x16, crash_forward
	addi x27, x0, -1
	la x8, test_memory+1127
	bgeu x28, x1, crash_forward
	xor x27, x27, x5
	mulh x10, x13, x17
	sb x24, -142(x8)
	lwu x25, -1962(x21)
	and x20, x16, x27
	or x24, x6, x5
	addi x28, x0, -1893
	divuw x11, x29, x28
	xor x23, x7, x12
	addi x26, x0, -94
	add x22, x0, x0
	and x19, x12, x12
	addi x20, x0, 1135
	la x3, test_memory+3
	sltu x7, x23, x23
	addi x29, x0, -1663
	sll x19, x2, x2
	addi x12, x0, -954
	add x4, x26, x20
	addi x6, x0, 1252
	add x31, x2, x2
	addi x7, x0, 1742
	addi x17, x0, 0
	addi x19, x0, -1791
	divu x2, x11, x3
	slli x10, x5, 0
	addi x4, x19, -1568
	mulw x27, x29, x12
	addi x25, x0, -204
	addi x9, x0, -837
	slt x21, x9, x9
	addi x20, x0, 1771
	addi x30, x0, 1
	sll x30, x30, 63
	and x22, x7, x7
	addi x11, x0, -1065
	la x9, test_memory+2142
	ld x13, 917(x3)
	addi x19, x0, -132
	addi x7, x0, -725
	addi x5, x0, -380
	addiw x18, x1, 1634
	or x16, x6, x5
	sllw x27, x28, x28
	addi x1, x0, -1
	mulh x26, x20, x20
	addi x15, x0, 0
	addi x21, x19, -952
	or x4, x22, x22
	remw x10, x29, x29
	sub x23, x11, x11
	lbu x31, -1398(x9)
	sll x8, x28, x25
	addi x29, x7, -1700
	blt x7, x29, crash_forward
	xor x1, x1, x30
	and x14, x20, x1
	addi x22, x0, -1913
	or x24, x14, x30
	divw x11, x2, x28
	addi x25, x0, -1783
	srl x2, x22, x22
	addi x27, x0, 1
	divuw x8, x9, x9
	la x29, test_memory+134
	addi x6, x0, -62
	bge x21, x19, crash_backward
	lb x17, 360(x29)
	mul x4, x6, x6
	addi x10, x0, 937
	divw x20, x25, x10
	addi x12, x0, 1912
	sll x27, x27, 63
	addi x3, x0, -1
	addi x15, x0, -1791
	addi x13, x0, 268
	xor x3, x3, x27
	sltu x28, x19, x17
	remu x31, x27, x24
	addi x10, x0, 1545
	mulw x5, x12, x13
	addi x7, x0, 1740
	addi x29, x0, -1888
	and x26, x26, x3
	la x9, test_memory+544
	subw x11, x10, x10
	lwu x1, -420(x9)
	or x23, x26, x27
	addi x22, x0, 1
	divuw x9, x22, x13
	slti x10, x2, 632
	mulhsu x16, x15, x7
	bge x23, x26, crash_forward
	addi x17, x0, -1779
	sltu x1, x30, x30
	slti x11, x28, 1300
	sll x22, x22, 63
	addi x25, x0, -750
	addi x6, x0, -1
	and x20, x9, x9
	xor x6, x6, x22
	la x28, test_memory-721
	slt x8, x29, x29
	sh x2, 737(x28)
	and x21, x4, x6
	addi x19, x0, -2041
	or x4, x21, x22
	xor x18, x0, x11
	sra x2, x25, x19
	la x30, test_memory+2676
	addi x14, x0, 1464
	sh x27, -1928(x30)
	addi x1, x0, 1
	mulw x10, x23, x23
	slt x28, x4, x11
	addi x12, x0, 1
	addi x7, x0, 1488
	sll x3, x1, x7
	addi x19, x0, 1643
	addw x23, x5, x5
	addi x28, x0, 135
	addi x30, x14, -1557
	remu x26, x19, x19
	sraw x24, x17, x14
	addi x22, x0, -1236
	or x11, x7, x7
	mulh x27, x3, x3
	addi x23, x0, -2011
	div x21, x11, x10
	sll x12, x12, 63
	addi x10, x0, -4
	sltu x19, x8, x21
	mulhsu x4, x28, x22
	addi x2, x0, 1
	ori x14, x15, -282
	addi x25, x0, 1977
	addw x30, x24, x24
	addi x31, x0, -1
	rem x26, x10, x10
	addw x24, x5, x5
	addi x18, x0, 704
	xor x16, x19, x20
	divuw x17, x23, x23
	sll x1, x1, 63
	addi x29, x0, -1
	sltu x9, x25, x18
	xor x29, x29, x1
	sll x2, x2, 63
	and x20, x13, x29
	xor x31, x31, x12
	addi x6, x0, -1
	addi x4, x0, 606
	addi x23, x0, 467
	or x15, x12, x1
	addiw x24, x23, -1308
	and x5, x15, x31
	divu x9, x27, x30
	sraiw x28, x26, 18
	la x25, test_memory+1890
	addi x26, x8, 0
	divw x19, x16, x16
	divuw x27, x11, x11
	lw x22, -1170(x25)
	addi x21, x0, 516
	addi x14, x23, 357
	addi x9, x0, 507
	addi x16, x26, 0
	xor x6, x6, x2
	addi x7, x0, -489
	addi x18, x0, 1477
	and x8, x0, x6
	addi x10, x0, 426
	addi x27, x0, 1462
	remuw x17, x4, x10
	addi x19, x18, 631
	or x13, x5, x12
	blt x13, x13, crash_backward
	bltu x26, x16, crash_backward
	bge x15, x20, crash_forward
	or x3, x21, x2
	srl x11, x21, x7
	mul x12, x4, x4
	addi x17, x0, 1
	add x25, x8, x26
	bltu x3, x8, crash_backward
	addi x30, x0, 811
	addi x20, x0, 1942
	blt x19, x18, crash_backward
	addi x23, x0, 218
	addi x31, x23, 701
	addi x28, x0, -2016
	xor x11, x3, x3
	addi x25, x0, 1
	divuw x22, x9, x27
	remuw x24, x30, x28
	sll x17, x17, 63
	addi x4, x0, -95
	addi x7, x20, 1283
	addi x5, x0, -1
	addi x16, x0, -41
	addi x29, x0, 975
	mulhsu x12, x16, x29
	addi x1, x0, -1524
	divu x14, x4, x4
	sll x25, x25, 63
	addi x21, x0, -479
	lui x16, 521144
	xor x5, x5, x17
	addi x27, x0, -743
	and x10, x20, x5
	addi x2, x0, -1
	addi x18, x0, 1471
	or x13, x18, x17
	xor x2, x2, x25
	sllw x26, x1, x1
	and x3, x18, x2
	sub x15, x21, x21
	or x6, x3, x25
	bltu x13, x10, crash_forward
	addi x19, x0, 1183
	xor x24, x27, x27
	divw x4, x18, x19
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0xc98e0501a736564f
reg_x1_init:	.dword 0x80ac5cf229a1d943
reg_x2_init:	.dword 0xffffffffffffffff
reg_x3_init:	.dword 0x01b1939fcce1101f
reg_x4_init:	.dword 0xffffffffffff8005
reg_x5_init:	.dword 0xffffffffffffffff
reg_x6_init:	.dword 0x0000000000000000
reg_x7_init:	.dword 0xa546f859b06f583e
reg_x8_init:	.dword 0x0000000000000000
reg_x9_init:	.dword 0x1f1c9152c060b868
reg_x10_init:	.dword 0x0000000000000000
reg_x11_init:	.dword 0x0a702d04c91a4245
reg_x12_init:	.dword 0x0800000000000007
reg_x13_init:	.dword 0xfffffffffffffffe
reg_x14_init:	.dword 0x11b1f8bd90eefa16
reg_x15_init:	.dword 0xe66eeeec089eade5
reg_x16_init:	.dword 0x0800000000000003
reg_x17_init:	.dword 0xdc2adf9b96ca9a9e
reg_x18_init:	.dword 0xa4569d8188bdf7c7
reg_x19_init:	.dword 0xffffffffffffffff
reg_x20_init:	.dword 0xd6981688f06fc9bf
reg_x21_init:	.dword 0x579b4b59b6321815
reg_x22_init:	.dword 0xa19bbd74c080bae8
reg_x23_init:	.dword 0xa746e9f33897f850
reg_x24_init:	.dword 0x784390d752d8140a
reg_x25_init:	.dword 0x0000000000000000
reg_x26_init:	.dword 0xffffffffffffffef
reg_x27_init:	.dword 0xace9eb18a5549544
reg_x28_init:	.dword 0xffffffffffff8005
reg_x29_init:	.dword 0x9311af44b83c8dc8
reg_x30_init:	.dword 0xe20c7efceb2425c4
reg_x31_init:	.dword 0x0000000000000000

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x3c64cf9f22654074
reg_x1_output:	.dword 0x2fd55fb6449d2d32
reg_x2_output:	.dword 0x721a85e91c4c486a
reg_x3_output:	.dword 0xa41f2aaed93d53d1
reg_x4_output:	.dword 0x438437bb2a7b001a
reg_x5_output:	.dword 0x02af055b5a1281e3
reg_x6_output:	.dword 0x7d15b4740b9fc08f
reg_x7_output:	.dword 0xbf9033d99f6d3ca6
reg_x8_output:	.dword 0x27a4b3dd8e351a6f
reg_x9_output:	.dword 0x2ba289352844bee2
reg_x10_output:	.dword 0xa82288b5f2a57027
reg_x11_output:	.dword 0x7a3dc77c2257403a
reg_x12_output:	.dword 0xcedff76b52d17f67
reg_x13_output:	.dword 0x03e85e2f3d36ddc4
reg_x14_output:	.dword 0x0d713525faf18dd1
reg_x15_output:	.dword 0xba512adf3de3f7dc
reg_x16_output:	.dword 0x5724530a3b102cec
reg_x17_output:	.dword 0xe2922012c14f1935
reg_x18_output:	.dword 0x065c99bbf8d8c95e
reg_x19_output:	.dword 0xdabbf66f5f29bb30
reg_x20_output:	.dword 0x15499924ce63795a
reg_x21_output:	.dword 0x3d094c123d0e7b70
reg_x22_output:	.dword 0xa298f0761f4abe57
reg_x23_output:	.dword 0x1019d63fc17e96ae
reg_x24_output:	.dword 0xf72e126b88ef2e02
reg_x25_output:	.dword 0xb67c89412fbbbcc9
reg_x26_output:	.dword 0x70db89d4e8983674
reg_x27_output:	.dword 0xf2d9da8796629220
reg_x28_output:	.dword 0xfbcd8251d16071a7
reg_x29_output:	.dword 0xf77d8116441b7224
reg_x30_output:	.dword 0x490d995d57cf3c26
reg_x31_output:	.dword 0x1a1158205cfc4728

// Memory Blocks
	.align 8
test_memory:
	.dword 0x20843b8d28e88303, 0x4d5147eeb98f8b7a
	.dword 0xf85c1217c196fd0e, 0xfc9a5906cb21c7b7
	.dword 0x16f0449988e44343, 0xbeb5558b4938225b
	.dword 0xa7b693147eb57c84, 0xa05f9cdf2f27d497
	.dword 0x53228c3608fa9087, 0x7a1b0d8e67ef9867
	.dword 0x958f63e045a91611, 0xf9f8296e1ef163e3
	.dword 0x86122de5b7bb7064, 0x3f9bd802473c05d4
	.dword 0x43ee81136bffcff5, 0x40f46b1e9df9778a
	.dword 0x6483c670070a0a61, 0xaf27c9d1608ff7eb
	.dword 0x8c29b8c4fb567da2, 0xe77ee57da15143cf
	.dword 0xaed6d8604cdb727d, 0x31b0dd4ba7747f8b
	.dword 0x21d3d7145929b23e, 0x563273bffdcca5cb
	.dword 0xca6b4083a01443a7, 0x8a54baa6b8768fa5
	.dword 0xeeb4e2a13be28325, 0x0748193859d6e9ea
	.dword 0xe190ba6fc88f0a45, 0xfac7107a7bf1abbe
	.dword 0x59dd690fcac91a65, 0x1e7e61e2b1a9e26a
	.dword 0x6b3274fb10957eae, 0x4c7e7c40bd11e670
	.dword 0xfc26db8c11c71941, 0x255c52dd59e14ddf
	.dword 0x2fb0b6bf85568fb0, 0xfe6602dd26a72fe9
	.dword 0x7cb2fb406523caaf, 0x25b1eaea31a48db2
	.dword 0x5c9a929d9b233d0a, 0x4d151911f0a3f46a
	.dword 0x503c55deeca425da, 0xf67832ede2e0ac9d
	.dword 0xfd39ac39397c41f3, 0xc9d03c074a610ac9
	.dword 0xde49d21d50b8a0a0, 0x3172de74a44cb530
	.dword 0x3a220c75ea3a8f92, 0xbad419c93700f2ef
	.dword 0x1f974c336fa2d214, 0xf2357c2bee325850
	.dword 0x16380603465c9783, 0x8dad49c7228c645b
	.dword 0x2145425f13bce4fd, 0x316e3665f834e3b2
	.dword 0xfbde29ccc2426658, 0x3a9e9556efa22c9e
	.dword 0xf8a19160df4cda56, 0x49982397a3908864
	.dword 0x513d4b86aa628e16, 0x9657d02f9ed45ddd
	.dword 0x9b9b4100058d9bcc, 0xf47726dcaa8bf145
	.dword 0x76d8962a78c1e0b4, 0x357f40edfa0ccd52
	.dword 0xc2336082f3d7de43, 0xdaff60718b162988
	.dword 0x07dfb06eaab7fa9f, 0xb3cf9991df92e1cb
	.dword 0x6d7cf338c114d451, 0xa38a2e3aa7cad335
	.dword 0xeff0f156e5ca9d39, 0xe6cc7ffee18cb22a
	.dword 0xf0fdecf114e4b0c2, 0x447abc3c87d6ada8
	.dword 0xee3da4a389a9d955, 0xc24fa67df01573e3
	.dword 0x63833e823b22f912, 0x43b42521f3766c10
	.dword 0x6a425f5cc49709bd, 0x7b70743aad433981
	.dword 0x2cb9f24543b2a7f6, 0x758322b7e809dbf1
	.dword 0x1285644ddec09dad, 0xc4883dc4dbb60121
	.dword 0xfd1f589661bc1fd3, 0xbfdd4e7203f55ba3
	.dword 0x9a0d1884b85cb355, 0xd3550d92118a12f5
	.dword 0xde1a445638c6ed45, 0x6117f1e517cba0d0
	.dword 0x0d8087d6658c825a, 0x407cfc797ac7afc2
	.dword 0x304f576c6959599a, 0x3b78674bff79cefa
	.dword 0xa523f9586a529655, 0xb5f41a35ffaa0f62
	.dword 0x5e825f3f7a07cd55, 0xb1400a04c36fddf3
	.dword 0xad2393e65825d952, 0xd006e5e89457af43
	.dword 0xc396c13e2d1e02ab, 0xaf15b71246ff5062
	.dword 0x19de12a075eb6e53, 0x8b0b5696d0e5f0e7
	.dword 0xc280f7586e4c0809, 0x9ceedd99766a3a45
	.dword 0xa2218966aa615bcb, 0x15fa73a831c20862
	.dword 0x573b1c844701128c, 0x0fda1f63fc5c976a
	.dword 0xc58c396418440624, 0xe8747d6689d93adf
	.dword 0x780e893ab35e2087, 0x414d816203c9f1f4
	.dword 0xf9837580bab87a39, 0x88f1a586411a6d1b
	.dword 0x76c47ff8c4ea6c01, 0x82da2c24706958dc
	.dword 0x537296edd7c587dc, 0x86215796f32b01e8
	.dword 0x318fe9bf3b73ad34, 0x1f67bc614549a66e
	.dword 0x6b44019e4de5ac51, 0xc4ba1192e36908ac
	.dword 0x4bc222939fc42d0f, 0x5d592371a63816c8

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
