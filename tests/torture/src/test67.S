// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	addi x5, x0, -1261
	addi x8, x0, -257
	addw x18, x6, x6
	mulh x16, x5, x8
	addi x25, x0, 1325
	and x14, x28, x28
	divw x29, x1, x1
	addi x9, x25, 1676
	addi x3, x0, 803
	addi x22, x0, 0
	div x28, x1, x1
	addi x24, x0, 1
	addi x10, x0, -1172
	sll x24, x24, 63
	addi x2, x0, 888
	bgeu x25, x9, crash_backward
	srai x14, x12, 7
	subw x11, x23, x11
	mul x6, x3, x10
	addi x13, x0, 0
	addi x8, x0, -1297
	addi x20, x0, -1
	addi x19, x0, -1343
	bne x22, x13, crash_backward
	addi x15, x0, -426
	addi x25, x0, -1296
	addi x21, x0, -668
	xor x20, x20, x24
	divu x12, x19, x15
	divu x5, x4, x12
	addi x10, x0, 637
	srl x6, x10, x10
	addi x22, x0, 1316
	srli x5, x12, 31
	la x3, test_memory+1761
	andi x12, x5, 418
	and x14, x5, x0
	addi x6, x0, -1357
	addi x31, x21, -1262
	mulhu x11, x12, x12
	sltu x9, x25, x25
	addi x18, x0, -659
	and x4, x4, x20
	addi x1, x0, 143
	remu x7, x2, x1
	addi x29, x8, -1391
	mulw x2, x13, x1
	addi x12, x0, -1899
	addi x28, x0, 374
	addi x25, x0, 1
	addi x15, x0, 1110
	blt x21, x31, crash_backward
	bge x29, x8, crash_backward
	sw x18, -1533(x3)
	la x9, test_memory+867
	sll x25, x25, 63
	sb x23, -594(x9)
	addi x19, x0, -1251
	addi x9, x0, -1171
	slt x13, x22, x6
	addi x26, x0, 1
	or x30, x4, x24
	sltu x1, x15, x15
	bltu x0, x0, crash_forward
	addi x31, x0, -1603
	and x5, x12, x12
	slt x16, x18, x28
	addi x11, x0, -1
	mulhsu x10, x15, x19
	sll x26, x26, 63
	xor x11, x11, x25
	subw x19, x22, x22
	sra x28, x21, x21
	addi x29, x0, 1599
	and x14, x18, x11
	addi x18, x0, 949
	addi x23, x0, -1
	remu x21, x31, x31
	or x7, x14, x25
	addi x20, x0, -631
	addi x13, x0, 1485
	xor x23, x23, x26
	divw x12, x9, x19
	sraw x24, x30, x30
	mulh x3, x9, x29
	addi x6, x0, -1426
	xor x30, x6, x6
	addi x15, x29, -731
	addi x16, x0, -1392
	addi x24, x0, 1
	and x17, x11, x23
	sll x24, x24, 63
	addi x30, x0, -264
	xor x9, x0, x31
	or x27, x17, x26
	addw x22, x18, x16
	ori x3, x16, 1896
	addi x4, x0, -1
	xor x4, x4, x24
	addi x21, x0, 2023
	beq x17, x27, crash_backward
	sra x5, x20, x20
	addi x1, x0, -1255
	sub x10, x13, x1
	addi x8, x0, 0
	addi x28, x0, -401
	and x12, x8, x4
	addi x15, x0, 1382
	addi x2, x0, 0
	addi x19, x28, -1990
	or x29, x16, x24
	addi x13, x0, 624
	or x10, x20, x20
	bge x19, x28, crash_forward
	addi x7, x0, 1
	divu x11, x22, x22
	addi x27, x0, 1493
	sll x7, x7, 63
	addi x25, x0, -291
	slt x6, x21, x15
	remuw x14, x13, x13
	la x3, test_memory-920
	addi x1, x25, -278
	bne x8, x2, crash_forward
	divu x2, x25, x25
	mul x23, x1, x6
	lhu x9, 1206(x3)
	mulhu x31, x30, x30
	remu x6, x13, x13
	addi x20, x0, -1764
	la x14, test_memory-228
	addi x18, x0, -1426
	mulhu x17, x27, x20
	la x19, test_memory-1308
	ld x8, 1572(x19)
	addi x26, x0, -1
	lbu x11, 860(x14)
	addi x13, x0, -508
	addi x8, x0, 1
	addi x30, x0, 1
	xor x10, x24, x24
	srl x28, x5, x5
	rem x2, x5, x5
	addi x19, x0, 1
	addi x5, x18, -920
	sll x30, x30, 63
	sll x8, x8, 63
	sll x19, x19, 63
	addi x10, x0, 1790
	sra x21, x13, x13
	mulhu x14, x10, x10
	addi x17, x0, -1
	addi x14, x0, 1615
	addi x28, x0, 639
	addi x31, x0, -1
	addi x4, x0, 966
	bge x5, x18, crash_backward
	addi x11, x0, 1954
	addi x6, x0, 2005
	blt x3, x3, crash_forward
	or x24, x7, x8
	xor x31, x31, x30
	addi x9, x0, -1339
	mulhsu x29, x6, x9
	addi x3, x0, -1
	xor x3, x3, x8
	sltu x13, x14, x28
	addi x27, x4, 383
	xor x26, x26, x7
	xor x17, x17, x19
	and x12, x7, x17
	srlw x2, x11, x11
	bgeu x4, x27, crash_forward
	and x23, x23, x31
	or x20, x12, x19
	addi x10, x0, 64
	sub x21, x10, x10
	bgeu x12, x20, crash_backward
	or x15, x23, x30
	and x16, x31, x26
	and x1, x8, x3
	or x22, x16, x7
	or x25, x3, x8
	rem x2, x5, x5
	subw x28, x27, x29
	addi x19, x0, -910
	blt x1, x25, crash_backward
	addiw x27, x11, -180
	addi x9, x0, 1434
	add x10, x27, x27
	addw x24, x25, x1
	remu x17, x5, x9
	remuw x21, x9, x9
	mulw x6, x18, x5
	addi x13, x0, 1237
	addi x11, x0, -1964
	sll x18, x11, x11
	addi x3, x0, 0
	addi x14, x0, 1505
	addiw x11, x30, 879
	addi x7, x0, 0
	la x16, test_memory-1084
	addi x10, x0, -1423
	addi x15, x0, 1
	sll x15, x15, 63
	divu x4, x3, x3
	addi x8, x0, 448
	addi x26, x0, -1372
	add x21, x8, x26
	addi x29, x0, -1357
	addi x24, x0, -779
	and x17, x29, x11
	sll x9, x10, x10
	mulh x12, x19, x29
	addi x1, x0, -1
	xor x1, x1, x15
	rem x23, x24, x24
	and x30, x21, x1
	addi x6, x0, 0
	addi x22, x0, 0
	addi x25, x0, -1279
	divu x2, x4, x26
	sw x31, 1328(x16)
	addi x27, x0, 1370
	add x20, x25, x25
	divu x5, x13, x14
	or x28, x18, x15
	la x2, test_memory-1899
	addi x16, x0, 914
	addi x9, x0, 92
	xor x14, x4, x4
	mulhu x31, x24, x27
	addi x18, x0, 1832
	sll x1, x28, x28
	addi x11, x0, 32
	la x24, test_memory+2730
	srlw x13, x16, x18
	la x26, test_memory+943
	addi x28, x0, -1995
	addi x27, x0, 1369
	la x31, test_memory-5
	sd x15, -495(x26)
	addi x4, x0, -1022
	bltu x3, x7, crash_forward
	addw x1, x27, x27
	sra x21, x9, x4
	lhu x14, -1766(x24)
	lw x17, 2007(x2)
	addi x30, x0, -1752
	sh x21, 971(x31)
	addi x9, x0, 1637
	addi x17, x0, 0
	addi x14, x0, 623
	addi x5, x11, 65
	addi x20, x0, -1240
	sltu x1, x3, x3
	remw x18, x23, x9
	beq x11, x5, crash_forward
	add x15, x28, x30
	slt x7, x30, x30
	bltu x0, x0, crash_forward
	remu x3, x9, x9
	sub x10, x20, x20
	addi x23, x0, 1278
	addi x25, x0, 1
	sra x16, x25, x6
	la x4, test_memory+2089
	sll x25, x25, 63
	sllw x9, x14, x14
	addi x3, x0, -1740
	lui x18, 280711
	remw x6, x15, x10
	addi x21, x0, 1552
	slti x10, x17, -589
	addi x19, x0, -1
	lwu x2, -1369(x4)
	addi x29, x23, 195
	div x24, x14, x14
	addi x16, x0, 1134
	or x9, x8, x8
	xor x19, x19, x25
	addi x31, x21, 1285
	addi x30, x0, 769
	lui x15, 758516
	addi x27, x0, 901
	addi x7, x0, -1539
	remuw x11, x2, x17
	addi x26, x0, 0
	la x4, test_memory-1796
	blt x7, x7, crash_forward
	addi x11, x0, 455
	sub x28, x7, x7
	rem x20, x16, x16
	sllw x13, x27, x27
	bltu x17, x26, crash_backward
	addi x10, x0, -1993
	lwu x18, 1900(x4)
	and x12, x27, x19
	sllw x6, x11, x11
	addi x2, x0, 1
	addi x22, x0, -1985
	mulhu x24, x11, x10
	bltu x31, x21, crash_forward
	sll x2, x2, 63
	or x8, x12, x25
	mulhu x5, x3, x22
	mulhu x1, x16, x30
	addi x15, x0, -1
	xor x15, x15, x2
	and x9, x6, x15
	or x14, x9, x2
	beq x9, x14, crash_forward
	addi x2, x0, 1655
	add x11, x30, x26
	addi x23, x0, 1897
	la x6, test_memory-51
	divuw x1, x29, x31
	and x19, x24, x24
	xor x15, x29, x29
	addi x4, x3, 0
	addi x31, x0, 1
	addi x12, x0, 876
	sll x31, x31, 63
	addi x20, x0, 1540
	addi x21, x0, -1443
	addi x3, x0, 210
	addi x24, x0, -1
	div x22, x2, x3
	addi x26, x0, 671
	addi x30, x4, 0
	xor x24, x24, x31
	and x5, x15, x24
	sltu x19, x10, x10
	or x27, x9, x31
	xor x2, x26, x11
	la x16, test_memory-1312
	addi x15, x0, -496
	sraw x4, x19, x31
	addi x11, x0, 1571
	or x1, x15, x11
	sra x4, x30, x18
	div x14, x21, x21
	sd x23, 2008(x16)
	divuw x8, x12, x20
	addi x15, x0, 0
	addi x29, x0, -568
	add x9, x29, x2
	srl x1, x1, x15
	addi x19, x0, 0
	la x17, test_memory+940
	addi x3, x0, -1021
	sltu x28, x23, x26
	addi x18, x0, -1461
	sra x13, x27, x27
	addi x30, x0, -1390
	lwu x7, -540(x17)
	lh x25, 839(x6)
	mulhu x22, x3, x30
	blt x15, x19, crash_backward
	addi x8, x0, -639
	subw x10, x29, x18
	addi x2, x0, -914
	beq x5, x27, crash_backward
	addi x30, x0, 1
	addi x1, x0, -937
	addi x25, x0, 1
	remuw x11, x2, x2
	addi x17, x0, -1865
	sraw x20, x13, x5
	addi x29, x0, 1
	sll x29, x29, 63
	addi x10, x0, 1
	addi x12, x0, -36
	srli x5, x22, 35
	sll x30, x30, 63
	addi x21, x0, -1750
	sll x10, x10, 63
	addi x11, x0, -1
	la x20, test_memory+283
	xor x11, x11, x10
	sh x27, 521(x20)
	div x28, x8, x12
	sll x25, x25, 63
	addi x26, x0, -1
	addi x9, x0, 387
	divu x22, x1, x17
	mul x15, x5, x5
	addi x31, x0, -1
	addi x7, x9, 1732
	xor x31, x31, x29
	sraiw x18, x5, 14
	la x28, test_memory+2985
	and x8, x10, x10
	bge x9, x7, crash_backward
	la x17, test_memory-999
	and x2, x26, x11
	and x27, x29, x31
	la x19, test_memory+9
	lwu x22, -1997(x28)
	addi x15, x20, 0
	or x3, x27, x29
	addi x20, x0, 1826
	subw x7, x20, x20
	mulhu x9, x17, x17
	addi x1, x0, 1412
	remu x31, x11, x11
	srliw x8, x22, 30
	blt x0, x0, crash_backward
	xor x26, x26, x25
	mulhu x16, x21, x21
	mulhu x20, x8, x27
	addi x7, x0, 0
	sh x5, 975(x19)
	lbu x12, 1362(x17)
	and x6, x8, x26
	addi x29, x0, 0
	la x3, test_memory+1387
	mul x5, x1, x1
	or x14, x6, x25
	or x24, x29, x10
	addi x23, x0, -1
	addi x18, x15, 0
	bltu x7, x29, crash_forward
	xor x23, x23, x30
	and x13, x14, x23
	bltu x15, x18, crash_backward
	lbu x9, -1351(x3)
	mulhsu x27, x13, x13
	or x4, x13, x30
	blt x13, x4, crash_forward
	addi x20, x0, 1
	sll x20, x20, 63
	addi x31, x0, 1055
	addi x8, x0, -1580
	subw x11, x31, x8
	addi x12, x0, -1
	xor x12, x12, x20
	and x2, x11, x12
	or x21, x2, x20
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x18, 144(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0xd37dd45896180b96
reg_x1_init:	.dword 0xe2b9c5f936526088
reg_x2_init:	.dword 0xffffffffffffffff
reg_x3_init:	.dword 0x0990556ac4a81c29
reg_x4_init:	.dword 0xffffffffffffffff
reg_x5_init:	.dword 0xffffffffffffff84
reg_x6_init:	.dword 0x0800000000000004
reg_x7_init:	.dword 0xffffffffffffff84
reg_x8_init:	.dword 0x0800000000000003
reg_x9_init:	.dword 0xffffffffffffffff
reg_x10_init:	.dword 0x0000000000000002
reg_x11_init:	.dword 0xe8489e94cdacb1c8
reg_x12_init:	.dword 0xffffffffffff8003
reg_x13_init:	.dword 0xc9091d23d404e7e2
reg_x14_init:	.dword 0xffffffffffffff80
reg_x15_init:	.dword 0xffffffffffff8003
reg_x16_init:	.dword 0x0000000000000000
reg_x17_init:	.dword 0x0000000000000020
reg_x18_init:	.dword 0x0800000000000009
reg_x19_init:	.dword 0x0000000000000002
reg_x20_init:	.dword 0x0800000000000004
reg_x21_init:	.dword 0x0000000000000020
reg_x22_init:	.dword 0x24f63020851c8d2b
reg_x23_init:	.dword 0x0000000000000000
reg_x24_init:	.dword 0xffffffffffffff83
reg_x25_init:	.dword 0x8acd0893af4b76cd
reg_x26_init:	.dword 0x6364360e2ccb60d8
reg_x27_init:	.dword 0xffffffffffffffff
reg_x28_init:	.dword 0xffffffff80000003
reg_x29_init:	.dword 0x0000000000000000
reg_x30_init:	.dword 0xffffffffffffffff
reg_x31_init:	.dword 0x0000000000000000

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x4809ca48579d30c4
reg_x1_output:	.dword 0xe40fc0f47e85e655
reg_x2_output:	.dword 0x7b5cf673fee39fb3
reg_x3_output:	.dword 0x254047141c684cb7
reg_x4_output:	.dword 0x673a0512770ff4ce
reg_x5_output:	.dword 0x0a50bd1045e98acb
reg_x6_output:	.dword 0x4b1e629296282295
reg_x7_output:	.dword 0xcaf082349396992c
reg_x8_output:	.dword 0x064eb36bc9c3c6d7
reg_x9_output:	.dword 0xee4d1a117024cc7a
reg_x10_output:	.dword 0x5c8ee818a7184868
reg_x11_output:	.dword 0xfcda8a125a130c29
reg_x12_output:	.dword 0x22790d63c1bc9c11
reg_x13_output:	.dword 0xfd916d6c0b272296
reg_x14_output:	.dword 0xce3a5ce5daafe4c7
reg_x15_output:	.dword 0x379fe33fa7e77a5b
reg_x16_output:	.dword 0x6ff251ce2a2d6320
reg_x17_output:	.dword 0x61b8baf9aa62dce3
reg_x18_output:	.dword 0x2667c5e0008b6802
reg_x19_output:	.dword 0x44fe82fa269d0640
reg_x20_output:	.dword 0xed845abf940a3e9d
reg_x21_output:	.dword 0x893e5d759510223b
reg_x22_output:	.dword 0xd446b3701653419a
reg_x23_output:	.dword 0xad08bf9d1e2086ac
reg_x24_output:	.dword 0xb3e042171bb78f94
reg_x25_output:	.dword 0x44747effa1613f0c
reg_x26_output:	.dword 0xe1bbae03ab4112c7
reg_x27_output:	.dword 0x4f3ad12d6a5d3d48
reg_x28_output:	.dword 0xc67515f0a09fd006
reg_x29_output:	.dword 0x80a1219ccb8243d7
reg_x30_output:	.dword 0x049db28b3b28b0f2
reg_x31_output:	.dword 0x8b8fe1cf1c07dd0e

// Memory Blocks
	.align 8
test_memory:
	.dword 0xefb89d3116ba3d68, 0x2983b7b3d87df3b2
	.dword 0x8676befc5faef83b, 0x85f8ae4cbc53e0cf
	.dword 0x3f142bfed14c5323, 0xbfc54c927e6202c7
	.dword 0x8a196ecf21986df4, 0x38d5b694a88d31ad
	.dword 0x92e7884485701512, 0xc1153ce69c3ca4d3
	.dword 0x0e9da7824759b323, 0x3d56fe39dfd01da1
	.dword 0xb553de334a292a06, 0x14f47f4705cd6ba8
	.dword 0xaf9655153953c704, 0x6ae35cf1ea599df6
	.dword 0xf6c0c4bb0b12c645, 0x4f717cab480375ab
	.dword 0x8a92368df7661985, 0xb0e95f163729edcc
	.dword 0xdd4d5214b9f06607, 0xc15678ec94a2ec56
	.dword 0xe239ba76a6c06dc9, 0xd8bbb62569f37096
	.dword 0x749f403d0aab57f8, 0xfb8c8b4eb4abd2b7
	.dword 0x0f9beb5b721e8ca6, 0x2f5b3940988fe89c
	.dword 0x05c2216fac8717b9, 0xa1b526f57a5c23f0
	.dword 0x127c6c4bd1d7c726, 0x715075b06475fd7a
	.dword 0x8308a4b2c296785f, 0x263c3365ace741b5
	.dword 0x99b4855fd46c490a, 0xb4f6cf5c31e9129f
	.dword 0xc021ea4bd4bb9ef2, 0x5064b50ed13cb2d1
	.dword 0xacf9402eab7a3b42, 0x79db31547bdd6dcf
	.dword 0xa2d4e84691bcccf0, 0x3b1205bf847831a1
	.dword 0x399894569444b676, 0x76104e4968caada2
	.dword 0xd513def18237fac7, 0xd14f9d2c55d50a97
	.dword 0xa3ffa3f82e368580, 0x349a711251e69002
	.dword 0x2559dd613b7f425e, 0xabd9696e2f3ecab8
	.dword 0x281c0839750ab7f0, 0x1a54dd27e38208b1
	.dword 0xae8455eab8a8198d, 0x9926b77f64d93e1f
	.dword 0x42ea2dc0df850487, 0xf0f2bf29da82a7c1
	.dword 0x149ac2aa3f575ca0, 0x07b9abc17519be78
	.dword 0x97c2c13d96e3fbbc, 0xa9fdad5b2832501a
	.dword 0xa03659fe9d1428d8, 0x00b54a775c4bd185
	.dword 0xc4392be256770a3a, 0xa5f3b81f72df3df7
	.dword 0xc67bd30c992b86ea, 0x5efc104a1f9b179d
	.dword 0x5d9d1fe046024b60, 0x6de70a817f065d69
	.dword 0xb7d93a392e6ee57e, 0x75591ac5dcfc8a28
	.dword 0xe37134f40cda2bc0, 0x78411ab00a01f0d3
	.dword 0xe3f9d5b07f5763b1, 0x6475e0da3e910a24
	.dword 0xca6894d86ee0dba0, 0x438b6a7e0476876c
	.dword 0xfda219e17e57eb93, 0xf79e7b5ba95b3ea3
	.dword 0xe3bdb7cfffcf917c, 0xcc5fd7dfe7f843c0
	.dword 0xed65adfef3681caa, 0xfd967d82e062c34b
	.dword 0x4cf4311edc759c82, 0x25e27d7018a2722f
	.dword 0x4e69807fdf12066e, 0xb9005d6b1e9ea6d4
	.dword 0xc4578b8fe4d74714, 0xc66722ede09b6f6d
	.dword 0x84a3eba03a8cb2ca, 0x32196c93db41398e
	.dword 0xb6c935eda556894a, 0xec243dba98bedf00
	.dword 0x384ce9debbad80a2, 0xe9cc6062853f2bd8
	.dword 0x9baf7f8af84f8b6d, 0x5815815bfee831c6
	.dword 0x06705a7e92ba4e47, 0xac5c6a9f842bfcaa
	.dword 0x3c17a4bd6cd2f87d, 0x7f6ffffc8f977c6c
	.dword 0x82d456070f667404, 0x082ae1f6b5c5b80c
	.dword 0x525ceb5baa6820ac, 0x3e49daeaf5ea9df7
	.dword 0x3ba592c2b9848e95, 0x3b597a7770ca059c
	.dword 0x87e6cf465d00ebe1, 0x085783194a24b63f
	.dword 0x4b9bd940b13719ab, 0x414b0e15ceee870d
	.dword 0x36d03edbaf899c36, 0x8ee0899be43dec6f
	.dword 0x2b8888d519a9da69, 0x0744f529a11686a2
	.dword 0x7d89e781febe607b, 0xd54e002efd358587
	.dword 0xe0812c15e89e19ea, 0xb5b2eef0fa1ff5b7
	.dword 0x22c992223930b6b0, 0xb7f469b037204ada
	.dword 0x58181d5eb453afb9, 0x69cf9a09ade1bb39
	.dword 0x80588faa54a69e8f, 0xfafb3aa1692d4090
	.dword 0xc0553b4f0098dc56, 0xb1b37cfa7b355228
	.dword 0x2b9335895c3d9bff, 0x1183e9a7ba1aac25

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
