// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	or x31, x0, x0
	addw x15, x24, x24
	addi x19, x0, 102
	remuw x13, x20, x20
	la x11, test_memory+516
	addi x26, x0, 1587
	addi x5, x0, 0
	sraiw x23, x3, 11
	addi x28, x0, 1398
	or x10, x8, x8
	addi x29, x0, 0
	addi x16, x0, 1
	srlw x8, x10, x12
	xor x3, x4, x4
	addi x18, x0, 1932
	la x7, test_memory+1270
	lh x22, -960(x7)
	lwu x25, 152(x11)
	addi x24, x0, -1243
	remuw x12, x28, x27
	addi x6, x0, 1681
	sub x9, x19, x18
	subw x30, x26, x24
	sll x16, x16, 63
	addi x14, x0, -1
	mulhu x13, x28, x28
	addi x2, x0, 1
	sll x2, x2, 63
	addi x27, x0, -1
	xor x27, x27, x2
	xor x14, x14, x16
	and x1, x26, x14
	slt x20, x6, x6
	and x4, x15, x27
	or x21, x4, x2
	or x17, x14, x16
	bltu x17, x1, crash_backward
	bltu x21, x4, crash_backward
	addi x17, x0, 1
	addi x24, x0, -1608
	and x31, x15, x14
	addi x7, x15, 0
	srli x15, x18, 28
	divu x14, x17, x7
	addi x3, x0, 598
	sltiu x18, x28, -54
	divu x19, x24, x2
	addi x22, x0, -119
	la x12, test_memory-156
	sll x17, x17, 63
	addi x10, x0, -1
	lhu x30, 594(x12)
	la x21, test_memory+2151
	div x8, x20, x24
	rem x6, x27, x15
	sb x17, -1395(x21)
	addi x31, x0, -1544
	la x27, test_memory+2375
	addi x16, x0, 1693
	addi x12, x0, 385
	addi x9, x0, -401
	addi x6, x0, -840
	divuw x30, x31, x12
	addi x15, x0, 1
	sll x15, x15, 63
	addi x1, x0, 652
	mulhu x8, x6, x6
	addi x14, x0, -1
	addi x29, x0, 486
	rem x25, x24, x9
	addi x28, x0, 1749
	remw x13, x3, x3
	sb x1, -1607(x27)
	xor x10, x10, x17
	add x6, x5, x5
	addi x5, x7, 0
	sra x20, x16, x16
	divw x2, x15, x21
	addi x27, x0, -992
	mul x26, x22, x1
	and x3, x3, x7
	addi x13, x27, -1516
	and x4, x30, x10
	srlw x23, x29, x28
	xor x14, x14, x15
	bltu x7, x5, crash_backward
	and x18, x7, x14
	or x19, x31, x15
	or x11, x11, x17
	addi x31, x0, 1
	addi x20, x0, 1
	sll x31, x31, 63
	addi x7, x0, -1888
	divuw x22, x31, x31
	addi x1, x0, -499
	sll x20, x20, 63
	addi x25, x0, -1843
	addi x21, x0, -1
	blt x27, x13, crash_backward
	divw x6, x26, x29
	div x2, x22, x19
	xor x21, x21, x31
	mulw x16, x1, x1
	addi x22, x0, -1185
	addi x4, x0, 735
	addi x11, x0, 208
	and x12, x16, x21
	divw x17, x4, x11
	addi x5, x0, -1
	addi x26, x0, 644
	addi x9, x0, 1586
	addi x6, x0, 725
	addi x15, x0, 1090
	remuw x28, x7, x26
	addi x13, x0, 1768
	or x30, x12, x31
	la x23, test_memory+730
	addi x14, x0, 481
	slt x17, x15, x15
	sltu x2, x19, x3
	addi x27, x0, -542
	xor x24, x4, x4
	addi x1, x6, 1032
	xor x5, x5, x20
	lb x18, -156(x23)
	and x3, x15, x5
	or x29, x20, x20
	mulh x10, x22, x22
	xor x19, x13, x13
	addi x16, x0, -1360
	addi x26, x0, 710
	sllw x11, x27, x27
	sub x4, x14, x16
	sra x28, x3, x22
	addi x7, x26, 899
	bgeu x12, x30, crash_forward
	divu x8, x25, x9
	blt x7, x26, crash_backward
	addi x19, x0, 1406
	addi x28, x0, 1
	remuw x13, x12, x12
	sll x28, x28, 63
	sraiw x12, x20, 1
	mulhsu x17, x27, x27
	mul x21, x31, x5
	addi x22, x0, -1
	addi x1, x0, -1452
	sraw x3, x1, x1
	addi x20, x0, 952
	addi x16, x0, 1877
	sra x18, x19, x16
	addi x6, x0, -104
	addi x9, x0, -1006
	addi x2, x9, -1661
	sra x11, x20, x6
	slliw x4, x27, 8
	addi x20, x0, 239
	xor x12, x1, x13
	sltu x30, x17, x17
	bne x0, x0, crash_backward
	addi x24, x0, -289
	addi x13, x0, 1
	addi x26, x0, 139
	addi x25, x0, -812
	la x29, test_memory+2849
	addi x15, x0, 1947
	addi x5, x0, -201
	sll x13, x13, 63
	divu x16, x24, x5
	addi x31, x0, 689
	addi x6, x0, -1
	mulhu x17, x21, x21
	remuw x4, x20, x20
	sltu x10, x15, x15
	addi x7, x0, 1357
	addi x3, x0, -523
	divu x23, x25, x31
	xor x22, x22, x28
	add x19, x15, x27
	remuw x8, x26, x7
	and x14, x5, x22
	lh x21, -1939(x29)
	or x27, x14, x28
	addi x11, x3, -46
	xor x6, x6, x13
	addi x10, x0, 567
	mulhu x26, x10, x10
	and x1, x6, x6
	blt x14, x27, crash_forward
	or x18, x26, x13
	blt x1, x18, crash_backward
	addi x13, x0, -735
	addi x4, x0, 1511
	addi x11, x4, 336
	addi x10, x0, 1
	srl x2, x10, x10
	addi x24, x2, 0
	sll x10, x10, 63
	remuw x18, x30, x15
	addi x28, x0, 1110
	blt x0, x0, crash_forward
	add x6, x24, x19
	srai x3, x26, 29
	div x29, x28, x28
	addw x17, x21, x30
	divw x14, x13, x13
	bge x4, x11, crash_forward
	addi x31, x0, -1
	xori x8, x9, 1338
	la x7, test_memory+1618
	la x5, test_memory+2186
	addi x21, x24, 0
	lbu x23, -1214(x7)
	sh x3, -1416(x5)
	divw x20, x25, x25
	xor x31, x31, x10
	and x22, x11, x31
	mulhsu x27, x23, x23
	or x26, x24, x10
	addi x15, x0, 1440
	slt x6, x3, x3
	sll x31, x11, x11
	addi x17, x0, 1
	addi x26, x0, 1
	la x5, test_memory+2124
	sll x17, x17, 63
	addi x7, x0, 865
	addi x24, x0, 187
	sll x26, x26, 63
	divuw x25, x24, x24
	addi x3, x0, -1
	addi x31, x0, 1
	sra x27, x24, x24
	lwu x9, -1344(x5)
	divu x1, x23, x13
	addi x22, x0, -1212
	addi x23, x0, -199
	div x8, x22, x22
	addi x4, x0, -1
	xor x3, x3, x17
	addi x19, x15, 1143
	xor x4, x4, x26
	sll x31, x31, 63
	slli x18, x28, 45
	and x10, x4, x4
	or x13, x10, x26
	addi x20, x0, 1031
	addi x6, x0, -1
	and x2, x7, x20
	addi x25, x0, 960
	addi x18, x0, -375
	div x9, x11, x11
	addi x8, x0, 484
	bge x13, x10, crash_backward
	addi x19, x0, -1997
	divw x20, x8, x8
	mulh x5, x29, x11
	mul x22, x25, x19
	addi x27, x0, -200
	addi x1, x18, -1930
	bge x1, x18, crash_backward
	addi x15, x27, -833
	addi x11, x0, 1860
	and x30, x18, x3
	addi x13, x0, 429
	sraiw x10, x29, 25
	or x12, x30, x17
	addi x19, x0, -523
	addi x8, x0, -1800
	addw x21, x11, x11
	bltu x12, x30, crash_forward
	addi x25, x0, -1550
	addi x5, x0, 1185
	or x18, x13, x19
	addi x16, x0, -645
	div x9, x8, x5
	xor x6, x6, x31
	addi x2, x0, 20
	addi x22, x0, 52
	addi x19, x0, 1915
	remw x1, x22, x22
	addi x13, x0, -967
	addi x26, x0, -1444
	addi x18, x26, 0
	addi x12, x18, 0
	la x10, test_memory+2070
	addi x8, x0, -182
	slt x11, x25, x12
	mulhsu x30, x30, x5
	mulhsu x14, x23, x16
	mulhu x3, x20, x20
	xor x20, x29, x27
	bltu x18, x12, crash_forward
	and x29, x17, x6
	or x28, x29, x31
	add x5, x19, x13
	divw x4, x25, x26
	sltiu x21, x5, -1698
	addi x9, x8, -835
	la x6, test_memory+1601
	addi x30, x0, 1008
	sllw x26, x3, x3
	srli x28, x5, 19
	remuw x21, x28, x28
	addi x24, x0, -37
	addi x5, x0, -1234
	addi x20, x0, 851
	addi x25, x0, 579
	addi x4, x0, -910
	ld x17, -1774(x10)
	addi x26, x0, 1992
	la x14, test_memory-1731
	lbu x18, 2007(x14)
	sub x11, x30, x25
	addi x1, x0, 718
	div x28, x20, x26
	mulhu x7, x2, x24
	lw x31, -1597(x6)
	remw x22, x5, x4
	xori x19, x16, 231
	addi x23, x0, 282
	addi x15, x0, -2028
	xor x3, x1, x15
	sraw x27, x15, x15
	addi x29, x0, -1080
	addi x13, x0, 1001
	mul x16, x23, x23
	sub x12, x29, x13
	srl x15, x20, x10
	divw x31, x3, x6
	addi x16, x0, -624
	xori x23, x29, -81
	addi x4, x0, -1066
	addi x5, x0, -988
	la x3, test_memory+88
	addi x25, x0, -1463
	addi x27, x0, 1925
	addi x14, x0, 1251
	mulhsu x17, x27, x27
	xor x2, x4, x25
	addi x18, x0, 1416
	addi x20, x0, -1897
	div x19, x16, x5
	addi x5, x0, -973
	addi x1, x0, -37
	addi x16, x0, 85
	la x17, test_memory-479
	mulw x11, x18, x20
	la x13, test_memory+910
	sltiu x15, x19, -1304
	lh x28, 24(x3)
	addi x6, x0, 293
	lhu x25, 1183(x17)
	addi x23, x0, 1
	sll x23, x23, 63
	la x10, test_memory+13
	rem x19, x5, x16
	addi x2, x0, -1
	addi x24, x0, -230
	addi x30, x0, 1986
	divw x31, x19, x5
	sll x29, x14, x24
	remw x4, x7, x8
	sll x26, x6, x30
	xor x2, x2, x23
	sw x20, 11(x10)
	addi x22, x0, 241
	subw x12, x22, x22
	lbu x21, -883(x13)
	addi x7, x0, -779
	and x27, x12, x2
	or x9, x27, x23
	bltu x9, x27, crash_forward
	subw x8, x1, x7
	addi x29, x0, 1778
	sltiu x9, x6, -1918
	mul x16, x27, x28
	divuw x20, x10, x10
	addi x28, x0, -599
	mulhsu x25, x30, x15
	and x6, x14, x14
	addi x20, x0, -1806
	addi x24, x0, 509
	addi x7, x29, 1142
	addi x12, x0, 0
	div x5, x29, x8
	la x11, test_memory+1330
	divu x2, x2, x2
	addi x13, x0, 1112
	addi x14, x0, 0
	addi x31, x0, -184
	addi x18, x26, 0
	bne x12, x14, crash_backward
	lb x4, -1288(x11)
	sll x9, x20, x20
	remuw x17, x28, x31
	sra x1, x30, x3
	addi x16, x0, -1573
	ori x5, x19, -207
	addi x14, x0, 1
	addi x21, x0, 1
	addi x8, x18, 0
	sll x14, x14, 63
	sll x21, x21, 63
	or x27, x2, x29
	srai x19, x0, 56
	addi x20, x0, 368
	bne x18, x8, crash_backward
	xor x4, x20, x20
	mul x10, x13, x13
	addi x2, x0, -1
	la x7, test_memory-1125
	addi x3, x0, -1
	addi x30, x0, -1482
	xor x3, x3, x21
	xor x23, x24, x30
	and x22, x8, x3
	addi x15, x0, 396
	or x26, x3, x21
	xor x2, x2, x14
	bgeu x22, x26, crash_forward
	and x6, x4, x2
	or x12, x6, x14
	bne x0, x0, crash_backward
	add x25, x16, x15
	la x29, test_memory+2376
	lb x5, 1874(x7)
	sb x25, -1625(x29)
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0xffffffff80000002
reg_x1_init:	.dword 0xffffffffffffffff
reg_x2_init:	.dword 0x1be9777865c8f9e8
reg_x3_init:	.dword 0x94edb6e614c91c37
reg_x4_init:	.dword 0xe20e20f45a554e62
reg_x5_init:	.dword 0x0000000000000000
reg_x6_init:	.dword 0x0000000000000000
reg_x7_init:	.dword 0xcc1f581580f817a0
reg_x8_init:	.dword 0x1609c62da1797553
reg_x9_init:	.dword 0x2d8fa962be0054f2
reg_x10_init:	.dword 0x1f6977da8b9bd6de
reg_x11_init:	.dword 0x19f57d4bd33868c3
reg_x12_init:	.dword 0x0000000000000000
reg_x13_init:	.dword 0xffffffffffffffff
reg_x14_init:	.dword 0x0554480ed60c6b60
reg_x15_init:	.dword 0xafb758e2227442f8
reg_x16_init:	.dword 0x353409e6f35b60d2
reg_x17_init:	.dword 0x40d6c21a3eca4259
reg_x18_init:	.dword 0x0000000000000003
reg_x19_init:	.dword 0x0000000000000004
reg_x20_init:	.dword 0x0000000000000000
reg_x21_init:	.dword 0x0800000000000008
reg_x22_init:	.dword 0x8b20f9aa801d800c
reg_x23_init:	.dword 0x0000000000000004
reg_x24_init:	.dword 0x0000000000000002
reg_x25_init:	.dword 0xffffffffffffffff
reg_x26_init:	.dword 0x34feeeeb62b5da23
reg_x27_init:	.dword 0xa8d015234fe7fd37
reg_x28_init:	.dword 0x0000000000000000
reg_x29_init:	.dword 0x0d9dd97681a8f047
reg_x30_init:	.dword 0xffffffffffffffff
reg_x31_init:	.dword 0xffffffffffff8001

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x899db79530b2ab28
reg_x1_output:	.dword 0x46beff06b9abf1e5
reg_x2_output:	.dword 0xbf8ffcabc4089115
reg_x3_output:	.dword 0xaa1db22df6d5195e
reg_x4_output:	.dword 0x5701a87b8dcaca1f
reg_x5_output:	.dword 0x446d0080384f4fe0
reg_x6_output:	.dword 0xb5059f2657061d19
reg_x7_output:	.dword 0xcae13aa0cb81ded1
reg_x8_output:	.dword 0x9e6ed254b79730a0
reg_x9_output:	.dword 0xb633afd010acc00f
reg_x10_output:	.dword 0x4786c6b361b7957e
reg_x11_output:	.dword 0x7135f27f2fa9c8ed
reg_x12_output:	.dword 0xf6a27c9dc2669353
reg_x13_output:	.dword 0xac7c52240867017b
reg_x14_output:	.dword 0xbd50b01af47f9b72
reg_x15_output:	.dword 0xac559e512d18ac0a
reg_x16_output:	.dword 0x5817a409f50a8608
reg_x17_output:	.dword 0x3b138701b705c0ee
reg_x18_output:	.dword 0x9167ec9b216ffd83
reg_x19_output:	.dword 0x36082e34abb9e285
reg_x20_output:	.dword 0xa4ccecfffdfebc30
reg_x21_output:	.dword 0xd4d2bec00b940d78
reg_x22_output:	.dword 0x1abafc62aad48026
reg_x23_output:	.dword 0x49de1c5da4598940
reg_x24_output:	.dword 0xa6e6661a0107d962
reg_x25_output:	.dword 0xfd92010a46e8dcec
reg_x26_output:	.dword 0x6a0db919301e3633
reg_x27_output:	.dword 0xcce81b8feea0cc20
reg_x28_output:	.dword 0xf7d51aa79eabd1d8
reg_x29_output:	.dword 0x951c035fefcba060
reg_x30_output:	.dword 0x00f790556eb16967
reg_x31_output:	.dword 0x3a4615a5109f428e

// Memory Blocks
	.align 8
test_memory:
	.dword 0x0cee752b2125daef, 0xdb1e8f94fa66e8b1
	.dword 0x437e8e229a5812e0, 0x3a277a0a2e735bf7
	.dword 0x999d71da0cb7ebab, 0x91513a5158bb1afc
	.dword 0x6d193783c75ae3a5, 0x2216dc41b8e3dc4c
	.dword 0x9297a1206b7bcd30, 0x4e4c69906e033526
	.dword 0x612134ebde82dd1c, 0xdeaae261c1fc6883
	.dword 0x60bffa1b4f15bb4a, 0x28caab226b3da256
	.dword 0xe600ccc499857992, 0xeff68392eeff2314
	.dword 0x3da17d1f2cea94e6, 0x604e5b296f4b1f75
	.dword 0xb9a52dea949d64b7, 0x33529693d73d587c
	.dword 0x46aba630ebbb9c97, 0x8d659a9d6155afb5
	.dword 0x74ff8a2e9851c41f, 0x2e5ab0363fa93bbd
	.dword 0x8f9aaf8cb3c9c912, 0x310695cae071a107
	.dword 0x639f00d4dcae0fc2, 0x703751de0b32b2dc
	.dword 0x5fb5a420d4e2a5b2, 0x2fbe1ad24faaa0a3
	.dword 0x4bad59152d6c7a7c, 0x678f6805e8413362
	.dword 0xd0cc420f5ff8c2f5, 0xe2aa8024f9eedf84
	.dword 0xa1d88c9c84d4ea8e, 0xbcbb18babbdcaedc
	.dword 0x3a1ead2f6429b6fc, 0xed7cdb0b858a46e9
	.dword 0xcbf3220ce952821b, 0xd911e21f8b578f5b
	.dword 0x2c98f18a1953ae0f, 0xf5fa86227323bcd6
	.dword 0xe45557791801b7ac, 0xc56e08eb2d8bc3f5
	.dword 0x490c55dfa49c8b17, 0xaeb8f7d8306e7891
	.dword 0xe7491ceaccb8fead, 0xf33f56e35cfcdd42
	.dword 0xe4507e228d8c9823, 0x640de8f15b016725
	.dword 0x530adedf464dffed, 0xd4c72967dc7139df
	.dword 0x40765dfa6c9ec6e3, 0x5f6dcb042c069fe2
	.dword 0x0a2920c5fc196222, 0x6257cfeb3fd442ef
	.dword 0x1d76fb3ed6688130, 0x02b28efda9b4e8db
	.dword 0xb74ce78357fb2263, 0xcbb13a709373b895
	.dword 0x8708008108bb0982, 0x7204bb9d27c54b66
	.dword 0x08b4f3f0ae617cac, 0x9dd4f8138bea0e7b
	.dword 0x10801f8369606b78, 0x0060d3f4d456b8a0
	.dword 0xd8edcd599c14645d, 0x96eb85822147d84e
	.dword 0x22f543bb7855fc54, 0x57f30dee8af1bde7
	.dword 0xc1909c0167c78cbb, 0x3b14eb7c784e463f
	.dword 0x9cfe94d471a66b7c, 0x84c358c4eb9e495e
	.dword 0xa412d39a03b5016e, 0xfe3ead57c4ccb183
	.dword 0xc6c4492c7d4562fb, 0x9d6bb387c03d7e6c
	.dword 0x6bf0adccd1c24f02, 0x80590780607338d4
	.dword 0x88474856f58eb7fd, 0xc2d2d39a0e999a3d
	.dword 0xacbc74b65af23b66, 0xea857df0a9ac6cef
	.dword 0xe30a9d99ff4b2b56, 0x95251b33d1dde83f
	.dword 0xc5dc9d67c1250e6f, 0xf518babd5e500d14
	.dword 0xeb88ba71685cb9fc, 0x0985dfe13a68c6a7
	.dword 0xe502b264d0696a56, 0x7f89bc890e40d389
	.dword 0xe21e890884747d89, 0xc13301017f29baea
	.dword 0x97a50e273b5fb436, 0xeca8550ff2475217
	.dword 0x96564ec589741cba, 0xa014ce47bffd9644
	.dword 0x9b05659abc720c8f, 0xa6b4f79debbbde8b
	.dword 0xf2bc5ebebf5ccbf2, 0x65f43e3c34baaa34
	.dword 0x418e22a08be2d7c6, 0x4833d794b1d18f36
	.dword 0x6aa79c3cb1edddb8, 0x7ad174b9e8df0cfe
	.dword 0x13908e8cd8f3d6a2, 0xe79556eb3994476e
	.dword 0x069fcd407454e334, 0xf41499709012ee28
	.dword 0x48adcca8baa7ced1, 0xed0dc4aa35ebd40b
	.dword 0xf74bbcf9f1915cb6, 0x1592fe6493f0fafd
	.dword 0x5674a4b15ae0c361, 0xab366b70253617eb
	.dword 0xea112e51366dfa2f, 0x36a2966e57c6d30d
	.dword 0x17fe1d54f4dcbd47, 0xac51efecc24a486e
	.dword 0xd5d09e609c316bb7, 0x00b5bbb5d33f8cab
	.dword 0x0192e6b99e5323db, 0x474dff66d6f739fa
	.dword 0x9966d6f7bd68c205, 0x7239463f112a496e
	.dword 0x6aa394f9b8b4a55a, 0x98dc4e385e4ebc78

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
