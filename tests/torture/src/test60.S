// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	sll x13, x7, x7
	addi x6, x14, 1894
	addi x24, x0, 1830
	sub x10, x24, x24
	div x29, x4, x18
	ori x17, x13, 1627
	remw x7, x17, x5
	div x16, x17, x17
	addi x11, x0, 840
	addi x25, x0, 1
	addi x12, x0, -1292
	sll x25, x25, 63
	la x28, test_memory+1482
	sub x31, x4, x4
	sb x24, -1011(x28)
	la x27, test_memory-241
	lw x5, 325(x27)
	addi x18, x12, -1303
	addi x14, x0, -1606
	addi x24, x0, -1242
	srlw x6, x14, x14
	addi x8, x0, 324
	addi x1, x0, -456
	addi x7, x0, 2011
	addi x13, x24, -474
	la x30, test_memory+83
	addi x3, x0, 1
	lwu x4, 641(x30)
	xori x17, x0, -988
	sll x21, x11, x8
	slliw x2, x5, 24
	bltu x12, x18, crash_forward
	addi x19, x0, -1
	divuw x14, x10, x15
	addw x12, x16, x3
	slliw x29, x6, 15
	srlw x30, x29, x29
	sub x8, x13, x13
	sll x3, x3, 63
	sltu x26, x1, x1
	addi x27, x19, 0
	xor x19, x19, x25
	blt x0, x0, crash_backward
	addi x2, x0, -1528
	and x23, x12, x19
	addi x28, x2, -804
	mulw x6, x24, x24
	slti x13, x17, -1565
	addi x20, x0, -1
	la x31, test_memory-37
	remuw x24, x6, x6
	or x15, x23, x25
	addi x17, x27, 0
	lbu x4, 634(x31)
	addi x16, x0, -855
	la x11, test_memory-140
	sraw x10, x7, x16
	xor x20, x20, x3
	sllw x5, x16, x8
	addi x26, x0, 769
	addi x10, x0, 836
	divuw x1, x22, x22
	la x4, test_memory-257
	remu x28, x29, x7
	addi x18, x0, 1753
	blt x27, x17, crash_backward
	la x31, test_memory+2539
	addi x6, x0, 1
	addi x13, x0, -1813
	and x22, x22, x20
	addi x23, x0, -2010
	sll x6, x6, 63
	addi x8, x0, -1027
	lwu x12, 1113(x4)
	addi x24, x0, -1
	or x29, x13, x8
	addi x7, x0, -310
	addi x17, x0, -1937
	or x9, x22, x3
	div x16, x10, x7
	beq x22, x9, crash_forward
	mul x14, x26, x18
	sd x14, 332(x11)
	addi x1, x0, -1124
	mulhsu x5, x23, x23
	addw x28, x17, x1
	xor x24, x24, x6
	sw x8, -1679(x31)
	addi x15, x0, 176
	and x30, x23, x24
	addi x19, x0, 1398
	la x21, test_memory+1645
	sll x27, x19, x19
	sll x25, x15, x19
	sh x24, -1129(x21)
	or x2, x30, x6
	bgeu x30, x2, crash_forward
	xor x22, x25, x25
	addi x13, x0, 536
	andi x31, x4, -370
	or x10, x4, x21
	addi x9, x0, -789
	srlw x2, x24, x23
	la x12, test_memory-468
	addi x17, x0, 1
	sll x4, x29, x29
	addi x11, x13, 1343
	lhu x25, 1064(x12)
	addi x19, x0, -1505
	sll x17, x17, 63
	bgeu x13, x11, crash_backward
	andi x25, x30, 1713
	addi x3, x0, -129
	addi x21, x19, -720
	addi x29, x0, -523
	addi x26, x0, -1
	mulhsu x23, x21, x20
	bge x21, x19, crash_backward
	la x16, test_memory-1416
	addi x15, x0, -232
	remuw x7, x9, x15
	la x8, test_memory-665
	mulhsu x30, x23, x23
	xor x26, x26, x17
	la x10, test_memory+1732
	mulh x13, x1, x1
	la x31, test_memory+565
	addi x21, x0, -1071
	lw x20, 1912(x16)
	addi x18, x0, -678
	slliw x23, x28, 13
	ld x4, -1436(x10)
	la x9, test_memory-861
	sb x22, -267(x31)
	mulhu x28, x21, x21
	addi x12, x0, 1252
	la x19, test_memory-1573
	addi x22, x0, -75
	bltu x0, x0, crash_forward
	lh x1, 1887(x19)
	sd x14, 1161(x8)
	and x14, x27, x26
	addi x6, x18, -594
	mulw x2, x12, x22
	mulh x5, x3, x29
	beq x18, x6, crash_backward
	remu x27, x30, x30
	mul x25, x28, x28
	la x11, test_memory+2407
	addi x23, x0, 1
	lh x13, -1409(x11)
	sw x25, 1825(x9)
	or x24, x22, x17
	sll x23, x23, 63
	addi x21, x0, 841
	mulh x11, x25, x25
	mulhu x16, x8, x23
	addi x29, x0, 497
	addi x1, x0, 1803
	addi x25, x0, -1760
	addi x27, x0, 1849
	mulhu x31, x6, x9
	and x8, x29, x29
	addi x2, x1, 54
	la x26, test_memory+2023
	addi x3, x0, 0
	xor x18, x19, x19
	divw x22, x13, x17
	addi x13, x0, -1917
	addiw x28, x28, 534
	ld x29, -1191(x26)
	addi x11, x0, -796
	addi x19, x0, 0
	subw x6, x10, x11
	addi x31, x0, -1426
	sltu x4, x13, x13
	blt x3, x19, crash_forward
	addi x17, x0, -1061
	addi x2, x0, 1338
	mulhu x29, x12, x11
	addi x20, x0, -129
	addi x29, x0, -38
	sll x3, x27, x27
	addi x26, x0, 1683
	and x19, x29, x26
	divuw x9, x18, x18
	addi x16, x0, 1392
	la x22, test_memory+27
	addw x10, x11, x31
	blt x0, x0, crash_backward
	addi x13, x0, -1707
	slt x24, x17, x16
	srl x12, x27, x20
	la x8, test_memory+701
	srl x19, x7, x7
	la x12, test_memory-901
	mulhsu x4, x2, x13
	addi x31, x0, -1145
	addi x28, x0, 1698
	sd x1, 357(x22)
	addi x1, x0, 517
	addi x24, x0, -905
	slti x3, x19, 524
	mulhu x27, x18, x0
	or x20, x4, x18
	addi x16, x0, 1
	divu x6, x1, x1
	addi x15, x0, -1
	addi x6, x0, -187
	xor x15, x15, x23
	addi x20, x0, 1235
	sll x16, x16, 63
	la x1, test_memory-974
	mul x5, x21, x25
	and x30, x19, x15
	bne x12, x12, crash_backward
	addw x29, x31, x24
	lwu x22, 1578(x1)
	addi x27, x0, 668
	addi x13, x0, 1812
	addi x11, x0, -1
	mul x21, x21, x21
	xor x11, x11, x16
	lb x14, -420(x8)
	slt x18, x28, x28
	srlw x5, x27, x3
	xor x10, x20, x27
	addi x4, x0, -1267
	and x26, x11, x11
	sltu x22, x24, x30
	addi x18, x0, -558
	or x17, x26, x16
	subw x2, x13, x13
	addi x14, x0, 1837
	or x7, x30, x23
	bge x17, x26, crash_forward
	addi x27, x0, -552
	addi x3, x4, -1821
	addi x22, x0, -27
	addi x29, x0, -1086
	addi x21, x0, -1152
	addw x13, x8, x8
	sub x19, x6, x6
	rem x10, x27, x27
	addi x1, x0, 1533
	addw x25, x23, x23
	addi x16, x0, -1346
	beq x30, x7, crash_backward
	addi x26, x0, 5
	mul x24, x1, x1
	mulhu x17, x16, x26
	sltiu x31, x12, -1129
	sltu x28, x14, x29
	bge x3, x4, crash_backward
	addi x5, x0, 430
	divu x20, x22, x5
	div x8, x18, x21
	lb x9, 1003(x12)
	la x23, test_memory+853
	la x16, test_memory+1558
	addi x18, x0, 1
	addi x28, x0, -1208
	addi x2, x0, 1450
	mulhu x1, x28, x28
	la x4, test_memory+427
	sll x18, x18, 63
	addi x20, x0, 294
	remw x21, x21, x21
	sb x17, 363(x4)
	addi x11, x0, 1790
	addi x9, x0, -1
	lw x19, -853(x23)
	xor x9, x9, x18
	la x31, test_memory+2904
	addi x24, x0, -113
	mulhu x17, x20, x11
	addi x15, x0, 1962
	lh x25, -958(x16)
	addi x26, x15, 1216
	addi x7, x0, -620
	ld x5, -1896(x31)
	addi x14, x0, 306
	xor x13, x2, x14
	mulhsu x6, x24, x7
	addi x3, x0, 0
	and x27, x22, x9
	addi x29, x0, 1
	or x10, x27, x18
	bgeu x27, x10, crash_backward
	addi x22, x0, 0
	sll x29, x29, 63
	addi x12, x0, -1
	xor x12, x12, x29
	and x30, x12, x12
	or x8, x30, x29
	bgeu x30, x8, crash_forward
	addi x11, x0, -1114
	addi x17, x0, -1047
	addi x6, x0, 1973
	addi x13, x0, 1753
	addi x29, x0, -1181
	addi x31, x6, 1705
	la x28, test_memory+2054
	addi x20, x0, 1925
	mul x15, x15, x6
	sub x10, x15, x15
	addi x5, x0, -1407
	add x2, x7, x7
	addi x4, x0, 1687
	sra x27, x11, x23
	sraw x18, x23, x17
	remu x7, x25, x7
	bne x0, x0, crash_backward
	mulh x25, x0, x8
	addi x3, x20, 318
	addi x24, x4, 1208
	addi x30, x0, 0
	div x21, x29, x29
	or x19, x11, x11
	div x23, x16, x16
	addi x9, x0, -523
	beq x6, x31, crash_forward
	lui x15, 758437
	lbu x8, -1489(x28)
	addi x12, x0, 0
	add x14, x13, x9
	la x22, test_memory+1233
	sw x5, -769(x22)
	remu x1, x17, x5
	addi x26, x0, 851
	srlw x16, x26, x26
	sll x22, x12, x8
	addi x21, x0, 2042
	addi x28, x0, 1
	sra x23, x13, x13
	addi x31, x0, 1440
	addi x5, x0, 1
	addi x4, x0, 1362
	sub x7, x17, x17
	addi x20, x0, 1430
	addi x6, x20, 1916
	addi x26, x4, 1535
	remuw x27, x25, x25
	addi x29, x0, -1821
	sll x5, x5, 63
	sllw x3, x9, x3
	mulw x4, x26, x26
	sltiu x26, x16, -1367
	sra x30, x28, x28
	addi x15, x31, 1816
	bge x31, x15, crash_forward
	la x23, test_memory+1415
	sub x19, x7, x7
	addi x8, x0, 0
	sraw x10, x24, x24
	sraw x16, x21, x21
	sll x28, x28, 63
	sll x25, x29, x29
	addi x24, x0, -1
	blt x6, x20, crash_backward
	addi x27, x0, -2023
	xor x24, x24, x28
	addi x2, x8, 0
	lh x1, -689(x23)
	srlw x3, x27, x27
	addi x17, x0, -1
	addi x13, x0, 571
	mulh x9, x13, x13
	xor x17, x17, x5
	and x14, x0, x17
	and x12, x27, x24
	or x11, x3, x28
	or x18, x17, x5
	addi x3, x0, -406
	addi x6, x0, 417
	rem x31, x28, x18
	addi x24, x0, -740
	addi x21, x0, 428
	la x28, test_memory+380
	remuw x10, x17, x17
	addi x23, x0, -1004
	divu x22, x3, x3
	addi x27, x0, 378
	sb x30, -193(x28)
	addi x9, x0, 0
	addi x16, x0, 1159
	addi x30, x0, 1032
	remu x25, x0, x26
	addi x12, x0, 227
	sltu x2, x23, x12
	addi x1, x0, -680
	addi x4, x0, -921
	div x20, x6, x30
	mulh x7, x14, x27
	and x26, x25, x25
	sllw x31, x31, x31
	slt x15, x24, x16
	addi x19, x0, -1914
	addi x11, x4, -1275
	addi x8, x0, 0
	mul x29, x27, x1
	blt x9, x8, crash_forward
	divu x13, x21, x19
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0xffffffff80000001
reg_x1_init:	.dword 0x066988c66b2012b5
reg_x2_init:	.dword 0x0000000000000005
reg_x3_init:	.dword 0xffffffff80000006
reg_x4_init:	.dword 0xffffffffffffffff
reg_x5_init:	.dword 0xffffffffffff8003
reg_x6_init:	.dword 0xffffffffffffff84
reg_x7_init:	.dword 0xbe10b59b43344715
reg_x8_init:	.dword 0x0800000000000000
reg_x9_init:	.dword 0xea25e13006e04fc8
reg_x10_init:	.dword 0xffffffffffff8008
reg_x11_init:	.dword 0x56983a2cb80c2d1d
reg_x12_init:	.dword 0x4826857f4a4d050c
reg_x13_init:	.dword 0xffffffffffffffff
reg_x14_init:	.dword 0xffffffffffffffff
reg_x15_init:	.dword 0x0000000000000000
reg_x16_init:	.dword 0xffffffffffffffff
reg_x17_init:	.dword 0xe27a8ef48b7a7d1b
reg_x18_init:	.dword 0x75c414570c5ebaea
reg_x19_init:	.dword 0xebe62233fce1d0b1
reg_x20_init:	.dword 0xffffffffffffffff
reg_x21_init:	.dword 0xffffffffffff8007
reg_x22_init:	.dword 0xffffffffffff8007
reg_x23_init:	.dword 0x90b14d0127eb4514
reg_x24_init:	.dword 0x0000000000000000
reg_x25_init:	.dword 0x89cb66a61122687f
reg_x26_init:	.dword 0x62861350e7971b99
reg_x27_init:	.dword 0x0000000000000005
reg_x28_init:	.dword 0x0800000000000007
reg_x29_init:	.dword 0xffffffffffffffff
reg_x30_init:	.dword 0x0000000000000009
reg_x31_init:	.dword 0x0800000000000000

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0xc68f9410dc25add5
reg_x1_output:	.dword 0x21fbf5085af9a265
reg_x2_output:	.dword 0x217a16a0ae01bba1
reg_x3_output:	.dword 0xa74921e9d4060a81
reg_x4_output:	.dword 0x2d81198a179b2b06
reg_x5_output:	.dword 0xf45adc90f0628d07
reg_x6_output:	.dword 0xf821309b339c6d9c
reg_x7_output:	.dword 0x8c9f731fcb813948
reg_x8_output:	.dword 0x73814ae97cdc6f46
reg_x9_output:	.dword 0x7e6d2e0057f118b5
reg_x10_output:	.dword 0xbcec9d9aacb20a70
reg_x11_output:	.dword 0x2dafe8cd3ba386c9
reg_x12_output:	.dword 0xf17fe8010e53fc97
reg_x13_output:	.dword 0xeb22c6904354a326
reg_x14_output:	.dword 0x995e64eb06a51f0e
reg_x15_output:	.dword 0x8df47533290641fe
reg_x16_output:	.dword 0xf233fd37bf84e7fe
reg_x17_output:	.dword 0x20a7b4312e8efeb4
reg_x18_output:	.dword 0xb00f8fad70b877ad
reg_x19_output:	.dword 0x80e9128be93554c2
reg_x20_output:	.dword 0xb0f962069700b603
reg_x21_output:	.dword 0x602e18039868e2dc
reg_x22_output:	.dword 0x79570f524036444a
reg_x23_output:	.dword 0x9f814d84ee2a3c56
reg_x24_output:	.dword 0x8e6f877b218c4735
reg_x25_output:	.dword 0x7f21d8e05dd3ecc2
reg_x26_output:	.dword 0x2e76f4246fa74d23
reg_x27_output:	.dword 0x71d49fbdcbfd91dd
reg_x28_output:	.dword 0xd3b396b6e745d4a4
reg_x29_output:	.dword 0xaf3025cff25c2faa
reg_x30_output:	.dword 0x0fc9f3bd650c373b
reg_x31_output:	.dword 0x6f0b9a4b731122df

// Memory Blocks
	.align 8
test_memory:
	.dword 0xde4fdf701bddfc65, 0x4dccc892920b5580
	.dword 0xa7ab3f8e774ad8da, 0xecd7e035df3499ca
	.dword 0xf83a966f1335de12, 0xdf1f481af35f4f51
	.dword 0xe912ab58bf419e0a, 0x3700f0fa4a86b66c
	.dword 0x707de4131bf44747, 0x2b81db0e723695d0
	.dword 0x2e1f23b81d32fd1b, 0xcecfc3094915167a
	.dword 0xc26342cc41e3f026, 0x71fc2a4826d3f9d2
	.dword 0xa8097493ff7afb1f, 0x41632e48107c8e0d
	.dword 0xba3c2da1222cc7d4, 0xc563e356de5c04d2
	.dword 0xc7395fae63c0c06f, 0x1b37268d950c1020
	.dword 0x90221eab6bba50fa, 0xf50d1afe746de96e
	.dword 0x7f770318c0163d24, 0x3e68c628142c2713
	.dword 0xe247dd97de610e44, 0xd5347fb19fba03e8
	.dword 0x11728fbcfdb7dd9e, 0x488128581a0cfd2b
	.dword 0x51b61e289b94fee5, 0x568d5c1fddb7eaa6
	.dword 0x301c4fd6735e4f01, 0xc3d113d10edcf50f
	.dword 0x458d6eb463c32b12, 0x9f9d69a4cbde0eb2
	.dword 0xed86fd73d95453b3, 0x97a7753cde09d24d
	.dword 0x022776a1eba04082, 0x45d072d3e6fcec3a
	.dword 0xd84e68f885c2a7e0, 0x89eca9b7584e71d3
	.dword 0xd2b184f1ccfe3ef5, 0xd76dc5f45b9fcb11
	.dword 0x17bc6f9ddbe3f5f6, 0xabec9950878f1276
	.dword 0x7d1a6eb4b6fb34aa, 0x22d977804c950f2c
	.dword 0x222641ecbd12db29, 0x3b59a19049c62d6e
	.dword 0x996dbd90699b0ae7, 0x0acb74a4b7001927
	.dword 0xde3bfa47f6e3fbf0, 0xd7d24feb2e83ded8
	.dword 0xaef62e3cb91e6274, 0x426665c6e596b6be
	.dword 0x9d4483611dbe2886, 0xec73ec4ec0c1de33
	.dword 0x2ac17f0a4da88020, 0xff5860fc36ec2354
	.dword 0x617fcebfffa2916a, 0xd443d39e1d0e06e3
	.dword 0x5c5f8e581406493b, 0x8b6f6c8ed4eb986f
	.dword 0x51295b40df170bdf, 0x8f79a22af24d70b2
	.dword 0xa6f6c91d5ca8501a, 0xa24bd17edde46e39
	.dword 0x0bd50b92f264666d, 0xd6f42e3ed19a184a
	.dword 0xfe07e9637621f097, 0xb31a3dfd69c9cc01
	.dword 0xd5204cba379acd5e, 0xfa635297fffd17bc
	.dword 0x967b04c628bf7c8f, 0x717fb7f1c887e8b8
	.dword 0x2cf18c8c8a0e3f42, 0x3cf088e4d3076efc
	.dword 0x6dcfeaf9d9057862, 0x9c215f765090db75
	.dword 0x7ac000380a3d116b, 0x5370544aff8b5c62
	.dword 0xea8bd4433f2ae775, 0x8272015a1702fbf1
	.dword 0xe69dbabc55528472, 0x3e667be327f8452a
	.dword 0x623e5ffb91e0a8b3, 0x9eaf799ef50ad30c
	.dword 0x57fe1369bdb768b0, 0xf9671539661b2df5
	.dword 0xc2b7e310baf7e308, 0x8c39e5fd50629b46
	.dword 0xd7725c6bb262d2c6, 0x609e5ece8245c346
	.dword 0xf54b0683acb981e5, 0xbdaea85d37115146
	.dword 0x3dd6e93bc6dce016, 0x3c896a98081df206
	.dword 0xd433b5eb3700c1bf, 0x9971395e80cb5457
	.dword 0x30aa652b5a258b47, 0x9b29987d6f981001
	.dword 0xb37d5defcb6acc90, 0x0e8bcad4d29696e6
	.dword 0xe88979dbaef190c4, 0x7d3ce0db1edd9467
	.dword 0x90027ad0782d6655, 0x4711ba4593945f06
	.dword 0x2408c5c663ef633e, 0x6544ef032022604b
	.dword 0xf05f76dd0166a98e, 0xd86dd36c1c1296ec
	.dword 0xf66722b49f063026, 0x85670bb904aa9727
	.dword 0x64f2d8fc68f7d3c0, 0xb54662b5aa46ad72
	.dword 0xd6d23c48eac0f434, 0x206ed7b594830757
	.dword 0x5d44c328653d21f6, 0x2fe117c6f2540698
	.dword 0x72377674b9579fe3, 0x317dd62598ae2299
	.dword 0xba6fc0ed3f34bd3c, 0x8f30b7f5717ffbff
	.dword 0x46db2400bd084bf2, 0x9531c72b43c78693
	.dword 0x1f64e5ed50e6b723, 0x13f6a0cb06b56d6c
	.dword 0xfe300d08c9b27de4, 0xbe4bd2587b60154d

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
