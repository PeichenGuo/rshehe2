// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	addi x12, x0, 1
	srli x21, x16, 1
	remuw x11, x13, x13
	or x22, x6, x6
	addw x9, x27, x13
	la x14, test_memory-1470
	sll x10, x0, x0
	addi x27, x0, -1026
	addi x7, x0, -1940
	div x13, x31, x15
	lhu x8, 1498(x14)
	xor x29, x25, x13
	addi x1, x0, 1270
	addi x26, x0, -903
	addi x4, x0, 1
	subw x25, x17, x10
	slliw x10, x18, 18
	add x2, x26, x26
	sll x4, x4, 63
	addi x23, x0, -1
	addi x5, x0, -1297
	sll x12, x12, 63
	addi x29, x0, -1366
	addi x26, x0, 164
	addi x25, x0, -1105
	mulhsu x8, x9, x11
	divw x15, x7, x7
	div x2, x25, x25
	la x24, test_memory+1125
	rem x7, x31, x31
	srl x17, x5, x5
	addi x14, x0, -1110
	divu x13, x14, x14
	addi x21, x0, -1356
	sub x6, x27, x1
	addi x16, x0, -1
	addi x6, x0, 1
	lwu x18, -237(x24)
	xor x16, x16, x12
	slt x9, x29, x26
	addi x11, x0, -598
	la x2, test_memory+1070
	and x20, x11, x16
	sw x23, -114(x2)
	or x31, x20, x12
	slt x22, x21, x11
	addi x28, x0, -1237
	xor x23, x23, x4
	and x30, x30, x23
	sllw x10, x28, x28
	sll x6, x6, 63
	remw x1, x22, x22
	addi x25, x0, 618
	slt x15, x25, x25
	addi x14, x0, -1
	beq x20, x31, crash_backward
	xor x14, x14, x6
	srlw x19, x28, x28
	or x3, x25, x4
	addi x8, x0, -1698
	bge x3, x30, crash_forward
	sra x5, x8, x8
	and x7, x16, x14
	or x13, x3, x6
	bltu x13, x7, crash_forward
	addi x3, x0, -509
	la x1, test_memory-125
	la x21, test_memory+1408
	addi x26, x0, -437
	addi x14, x0, 922
	lw x16, 181(x1)
	mulh x15, x3, x3
	addi x2, x0, 1175
	divw x6, x14, x14
	addi x7, x0, -1516
	divu x23, x2, x2
	addi x10, x0, -1848
	addi x13, x0, 1463
	addi x9, x0, -479
	subw x8, x10, x13
	sll x31, x23, x11
	addi x30, x0, 1877
	lw x28, -1324(x21)
	addi x20, x0, -97
	addi x11, x26, -1349
	sllw x5, x25, x11
	addi x25, x0, 982
	addi x29, x25, 253
	sub x31, x19, x19
	srl x19, x9, x20
	addi x10, x0, 2038
	srlw x28, x10, x10
	addi x24, x31, 0
	srliw x14, x29, 7
	bltu x0, x0, crash_forward
	la x12, test_memory+857
	divuw x22, x8, x8
	mulw x4, x3, x3
	addi x17, x24, 0
	sll x8, x23, x11
	lwu x18, -473(x12)
	add x27, x7, x30
	addi x23, x0, -1435
	addi x16, x23, -1246
	xor x7, x29, x29
	addi x7, x0, -264
	bge x16, x23, crash_backward
	addi x26, x0, -1754
	div x15, x15, x7
	addi x17, x0, -1534
	la x3, test_memory+467
	remu x8, x8, x8
	sll x5, x4, x28
	divuw x6, x24, x17
	addi x4, x0, 1
	sub x9, x25, x25
	mulw x8, x7, x15
	la x2, test_memory+694
	addi x20, x0, 1478
	sllw x24, x7, x17
	addi x21, x0, 1
	addi x6, x0, -1790
	sll x21, x21, 63
	sll x4, x4, 63
	addi x8, x0, -1543
	addi x25, x0, 436
	addi x10, x0, -1
	sllw x9, x8, x25
	sra x29, x6, x6
	xor x10, x10, x21
	and x28, x19, x10
	rem x12, x26, x26
	sraw x22, x2, x4
	or x18, x28, x21
	la x14, test_memory+2359
	lhu x31, -1469(x14)
	or x30, x20, x20
	addi x9, x0, 1
	la x7, test_memory+283
	addi x13, x0, -1
	sll x9, x9, 63
	addi x5, x0, 1374
	addi x30, x0, -1883
	addi x15, x5, 1180
	addi x31, x0, 1105
	addi x26, x0, 1538
	blt x28, x18, crash_backward
	sub x12, x30, x30
	xor x13, x13, x4
	addi x23, x0, 754
	la x29, test_memory+1911
	addi x14, x0, -1799
	addi x16, x23, 1673
	addi x25, x0, -1
	bltu x16, x23, crash_backward
	and x27, x11, x13
	sub x24, x17, x17
	or x19, x27, x4
	ld x11, -51(x3)
	bltu x19, x27, crash_forward
	addi x4, x0, 1
	xor x25, x25, x9
	and x8, x9, x25
	addi x11, x0, 1364
	or x20, x31, x14
	addi x13, x0, 515
	xori x5, x18, 789
	la x24, test_memory+1498
	or x6, x31, x9
	addi x28, x0, -1887
	addi x10, x0, 1570
	sll x4, x4, 63
	lw x1, -302(x2)
	addi x15, x0, 1578
	lw x12, -1074(x24)
	addi x27, x0, -1
	slt x21, x10, x15
	divw x24, x0, x9
	addi x31, x0, 1
	sub x23, x29, x29
	srli x20, x7, 61
	sll x31, x31, 63
	bge x6, x8, crash_forward
	addi x20, x0, -1758
	addi x5, x0, -1
	addi x24, x0, 1905
	sw x19, -1439(x29)
	xor x5, x5, x31
	mulw x23, x20, x20
	sra x22, x26, x26
	and x18, x28, x5
	addi x21, x0, 0
	addi x9, x0, -820
	mulw x3, x13, x28
	addi x16, x11, 1914
	lb x17, 195(x7)
	addi x6, x0, 1697
	or x14, x18, x31
	addi x12, x0, 1070
	addi x8, x0, -658
	sub x20, x6, x6
	addi x26, x8, -1130
	blt x18, x14, crash_backward
	addi x10, x0, 0
	addi x13, x0, -1542
	addi x2, x0, 1623
	addi x22, x0, -8
	bne x21, x10, crash_backward
	xor x27, x27, x4
	addi x7, x0, 844
	bne x11, x11, crash_forward
	addi x11, x0, -1926
	mulhu x15, x24, x24
	and x30, x3, x27
	la x29, test_memory+513
	lbu x25, 343(x29)
	sltu x1, x12, x2
	or x19, x6, x4
	addi x16, x0, 1127
	mulh x23, x9, x22
	and x3, x13, x13
	addi x28, x0, 501
	subw x20, x11, x16
	divu x17, x7, x28
	la x5, test_memory+1547
	addi x22, x0, -1182
	addi x7, x0, 1969
	addi x30, x0, -389
	addi x24, x7, 286
	xor x16, x30, x28
	addi x4, x0, 161
	slt x14, x30, x30
	bgeu x7, x24, crash_forward
	ld x25, -1083(x5)
	div x2, x4, x4
	addi x26, x0, -893
	addi x23, x0, 405
	addi x20, x0, -772
	addi x13, x0, -1735
	slli x11, x1, 63
	la x29, test_memory+1281
	addi x17, x0, 683
	addi x3, x0, -782
	addi x14, x0, 200
	la x12, test_memory+1481
	sllw x18, x26, x3
	addi x1, x0, 4
	addi x10, x1, 1028
	mulhu x31, x22, x17
	sltu x24, x9, x29
	addi x16, x0, 740
	rem x24, x16, x16
	sb x0, -1059(x29)
	addi x28, x0, -1466
	lb x9, -1356(x12)
	sub x19, x13, x28
	addi x8, x16, 1669
	bge x16, x8, crash_backward
	addi x22, x0, -1817
	la x25, test_memory+627
	addi x18, x0, 1
	addi x31, x0, -986
	addi x5, x0, -1388
	lhu x3, 123(x25)
	and x17, x22, x31
	sll x18, x18, 63
	xor x4, x14, x5
	mulhu x6, x23, x20
	addi x2, x0, 1
	addi x21, x0, -1903
	addi x10, x0, -1
	xor x10, x10, x18
	addi x15, x0, -974
	sll x2, x2, 63
	and x26, x23, x10
	xor x27, x21, x15
	or x1, x6, x18
	divw x6, x10, x2
	addi x29, x0, 0
	addi x19, x0, -1990
	addi x23, x0, 0
	bne x0, x0, crash_backward
	addi x22, x0, 0
	bne x29, x22, crash_backward
	mul x27, x20, x20
	addi x12, x0, 0
	remuw x3, x13, x17
	rem x29, x3, x18
	sltu x16, x17, x17
	and x24, x16, x16
	addi x15, x19, -268
	remw x13, x1, x21
	addi x4, x0, -1091
	addi x14, x0, -806
	div x31, x14, x14
	addi x9, x4, -388
	sll x12, x25, x25
	addi x28, x0, 703
	addi x1, x0, 160
	blt x19, x15, crash_forward
	remuw x20, x28, x28
	addi x3, x0, -765
	la x29, test_memory+462
	ld x16, 330(x29)
	addi x23, x0, 1649
	bgeu x9, x4, crash_backward
	addi x14, x0, -1205
	addi x18, x0, 687
	addi x17, x0, 82
	addi x30, x0, -1
	mulhu x26, x21, x21
	divu x25, x22, x5
	add x5, x27, x22
	addi x8, x0, -1577
	addi x27, x0, 1036
	or x10, x23, x18
	xor x30, x30, x2
	sll x13, x1, x3
	addi x24, x0, 1573
	addi x18, x0, 1
	slliw x3, x27, 20
	addi x13, x0, 851
	sll x18, x18, 63
	add x12, x24, x20
	remu x25, x13, x13
	and x11, x21, x30
	divu x6, x14, x24
	divuw x23, x29, x29
	addi x5, x0, -1
	or x7, x11, x2
	addi x28, x0, -1406
	sraw x9, x28, x28
	bge x7, x11, crash_backward
	srlw x22, x27, x27
	xor x5, x5, x18
	addi x10, x0, 433
	addi x16, x21, -1357
	and x20, x9, x5
	or x26, x9, x18
	remuw x19, x19, x19
	addi x31, x0, -1522
	addi x4, x10, 1308
	and x21, x17, x8
	addi x6, x0, 1
	sra x14, x25, x25
	addi x8, x15, 0
	addi x25, x0, 1
	add x30, x17, x24
	xori x19, x31, 1834
	addi x9, x0, 2037
	and x15, x31, x31
	sll x6, x6, 63
	addi x3, x0, 1
	addi x2, x25, 0
	addi x19, x0, 963
	sll x25, x25, 63
	addi x11, x2, 0
	addi x7, x0, -986
	sub x30, x19, x19
	sll x3, x3, 63
	remuw x14, x12, x12
	bgeu x20, x26, crash_forward
	addi x13, x0, -1
	srl x24, x1, x1
	srliw x31, x11, 8
	xor x13, x13, x6
	addi x22, x0, -1
	rem x23, x9, x7
	addi x20, x0, 535
	addi x10, x0, 38
	la x2, test_memory+593
	xor x22, x22, x3
	lb x18, -344(x2)
	addi x14, x0, 554
	and x12, x26, x13
	add x11, x20, x10
	addi x26, x14, 408
	or x21, x30, x6
	bgeu x12, x21, crash_backward
	addi x20, x0, -342
	bne x4, x4, crash_backward
	and x17, x25, x22
	addi x1, x0, -1
	addi x9, x0, 436
	subw x23, x17, x9
	xor x2, x13, x27
	bgeu x14, x26, crash_forward
	addi x10, x0, 307
	la x4, test_memory+1804
	or x31, x21, x29
	or x29, x17, x3
	addi x7, x10, 1032
	addi x16, x8, 0
	lwu x30, -1768(x4)
	xor x1, x1, x25
	sub x12, x9, x9
	addi x11, x0, 873
	divuw x13, x11, x11
	and x28, x24, x1
	xor x21, x20, x9
	addi x19, x0, 1
	or x27, x28, x25
	sll x19, x19, 63
	addi x24, x0, -1
	xor x24, x24, x19
	addi x9, x0, 1
	addi x6, x0, -141
	addi x27, x0, -436
	sll x9, x9, 63
	la x1, test_memory+1777
	mul x26, x27, x27
	divw x4, x21, x21
	addi x11, x0, 1
	la x28, test_memory+289
	sra x2, x6, x6
	addi x23, x0, 939
	srai x22, x16, 24
	divu x29, x23, x23
	addi x7, x0, -744
	addi x12, x0, 908
	addi x31, x0, -1247
	and x5, x18, x24
	sh x18, 335(x28)
	addi x20, x0, 1370
	addi x17, x0, -1
	or x15, x5, x19
	srliw x13, x11, 1
	la x8, test_memory+1328
	sll x11, x11, 63
	addi x4, x0, 1
	ori x24, x0, 1802
	remw x16, x12, x20
	sltu x18, x7, x31
	lb x3, -1146(x1)
	xor x17, x17, x9
	sll x4, x4, 63
	sb x2, -939(x8)
	and x30, x0, x17
	addi x14, x0, -1
	xor x14, x14, x11
	addi x2, x0, -1
	or x10, x17, x9
	xor x2, x2, x4
	blt x30, x10, crash_forward
	and x21, x6, x14
	or x25, x23, x11
	and x6, x17, x2
	or x13, x24, x4
	blt x6, x13, crash_forward
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0xede3dc7f79115895
reg_x1_init:	.dword 0x1ea4bbc47d14f8fa
reg_x2_init:	.dword 0x816a0dd7b5084e88
reg_x3_init:	.dword 0x0800000000000005
reg_x4_init:	.dword 0x7cc00cf6f542583b
reg_x5_init:	.dword 0x0000000000000000
reg_x6_init:	.dword 0x0000000000000000
reg_x7_init:	.dword 0xffffffff80000008
reg_x8_init:	.dword 0x8c429810d660fef1
reg_x9_init:	.dword 0xffffffffffffff80
reg_x10_init:	.dword 0xffffffffffffffff
reg_x11_init:	.dword 0x0000000000000000
reg_x12_init:	.dword 0x2ca66a0f8ed70793
reg_x13_init:	.dword 0xffffffffffffffff
reg_x14_init:	.dword 0x0000000000000000
reg_x15_init:	.dword 0xc7fe2287ccbb92e7
reg_x16_init:	.dword 0xc50287e25d3da347
reg_x17_init:	.dword 0xffffffffffff8007
reg_x18_init:	.dword 0x0000000000000006
reg_x19_init:	.dword 0x0000000000000004
reg_x20_init:	.dword 0xffffffff80000004
reg_x21_init:	.dword 0x40c5a1694099e950
reg_x22_init:	.dword 0x6795917587f1c3ed
reg_x23_init:	.dword 0xb5a91413e8d415ac
reg_x24_init:	.dword 0xf6ae273fb13329e5
reg_x25_init:	.dword 0x092db4016b7b4854
reg_x26_init:	.dword 0xffffffffffff8003
reg_x27_init:	.dword 0xffffffff80000006
reg_x28_init:	.dword 0x0800000000000009
reg_x29_init:	.dword 0xffffffffffffffff
reg_x30_init:	.dword 0x2775678fdea76d4c
reg_x31_init:	.dword 0xffffffffffff8001

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0xf956cd6b60c3abad
reg_x1_output:	.dword 0xb06a2ae0ba646af1
reg_x2_output:	.dword 0xe4c1257d54650df1
reg_x3_output:	.dword 0xa1c072e092373ff5
reg_x4_output:	.dword 0x2aefadc7e236096d
reg_x5_output:	.dword 0xbb40be8ddbe8b85d
reg_x6_output:	.dword 0x7e7b35e8b2a453eb
reg_x7_output:	.dword 0x3fbbbe16f7c3bdc5
reg_x8_output:	.dword 0xd5f1540d06d7483f
reg_x9_output:	.dword 0x4a216962ac42664d
reg_x10_output:	.dword 0xc339310ff864c2cf
reg_x11_output:	.dword 0x2d517c40d9598ec2
reg_x12_output:	.dword 0x087081c614d8c255
reg_x13_output:	.dword 0xb3fb01e2a8e172fb
reg_x14_output:	.dword 0x618e4196c40fd0e3
reg_x15_output:	.dword 0x3724a38c4344e885
reg_x16_output:	.dword 0x28de024f89e07927
reg_x17_output:	.dword 0xe55eae8826171f82
reg_x18_output:	.dword 0x4a3fe53808904bf0
reg_x19_output:	.dword 0x7f3b055c99ca0dcd
reg_x20_output:	.dword 0x43469161e65539f0
reg_x21_output:	.dword 0xfeb6703f5abde862
reg_x22_output:	.dword 0xa60dbb4094ec45c3
reg_x23_output:	.dword 0x8a0200c7ea844efd
reg_x24_output:	.dword 0x7f391180f35ad22f
reg_x25_output:	.dword 0x1dd27ce79eb80e00
reg_x26_output:	.dword 0xf634a313d78010ad
reg_x27_output:	.dword 0x23470518fd749a99
reg_x28_output:	.dword 0xaecd128983705428
reg_x29_output:	.dword 0xb8d769d74a86ad23
reg_x30_output:	.dword 0x9dc72aa4a9ec4c04
reg_x31_output:	.dword 0x97cde44ef6219dcd

// Memory Blocks
	.align 8
test_memory:
	.dword 0xbc83a82bf9e26b61, 0xe7d726566c7b6779
	.dword 0xfb354cfec30900a0, 0xeb6ef59c3f6b74e6
	.dword 0xfafc906b7983c125, 0x999ec620d6469c10
	.dword 0x0a9d80bf046fcd5e, 0x06e707e76ef4ebd6
	.dword 0xfeb9aa1f775d7104, 0xf7831be7dbe42fdd
	.dword 0x42c11697396f23a1, 0x53c32449c7444eb4
	.dword 0xb76abb7292498d51, 0x2b3623d07b28e638
	.dword 0xffb5e7cd057893cc, 0xe012209301fdca3a
	.dword 0xf37b8865fca9b3a3, 0x50ef3df18972495e
	.dword 0x57af54b8b05c29c9, 0xeec601c715d95c45
	.dword 0x55de394d79abb154, 0x9f7038daf33b22ee
	.dword 0xa778934a36e2d985, 0xccef2e9abe365459
	.dword 0x0b4c114eebce3805, 0xb6b12c0b0f96846d
	.dword 0x7d7a4d818699fb71, 0xdf3b71f9a46e641b
	.dword 0x397674e6b697a218, 0x953d227587d35fc2
	.dword 0xcb658ff513e1d903, 0x1e62cd822d4a3fd4
	.dword 0x37e24065c1b0c735, 0xeb89950659caafba
	.dword 0x6fde084e09914933, 0xa46c1c061739cef5
	.dword 0x1f676e6ebfd5e0c6, 0x63d2b516099a3085
	.dword 0x3abd93cb29c05cfe, 0x7ff3840d4831ec8d
	.dword 0x228f0e79784f7e7a, 0xfc4686f82dcda837
	.dword 0x87cb1dbc178c1be7, 0xbddcba516451b7d5
	.dword 0x6e498b5135e58ac5, 0xc088cc711f38bf48
	.dword 0x6cfece0729e55071, 0x7d1b144208b174a5
	.dword 0x07b741952a7e5f5f, 0x06d9bf37bc036915
	.dword 0x42ad87a717bc64a6, 0xeb796a80cffcfbfc
	.dword 0x38fd66398adbe9c1, 0xd4699b79dbaadc5c
	.dword 0xfd35b728c61c4e93, 0x3d8bcb6498bbbc7b
	.dword 0xa4613d066228dfab, 0x33a2fa5947f91bc4
	.dword 0x6907712d41068cc9, 0x0f34fd78df684aea
	.dword 0x02239f15a14803a1, 0x1675fc67cd350e53
	.dword 0xdb21e0eb702232de, 0x1d69d1fc60b982b3
	.dword 0xe2d6d159ba177969, 0xd5ee44313a0d27f6
	.dword 0x516006ab689005ea, 0xf51c475ea2bf3662
	.dword 0x8d28ab142b1a2a8e, 0x7f9dc0aef5fea1fc
	.dword 0x4f2ec64c5575a90b, 0x06787bcb75b4702b
	.dword 0x335b0c5cbc393ae0, 0xe8a647d42b3b439b
	.dword 0xfc8645bdd111d9e1, 0x86dd6f98f7a94264
	.dword 0x49e4a49fd18f8cf2, 0xed6c01045f4fba6a
	.dword 0x2e409b88306bbd12, 0xaf3b97d728662806
	.dword 0xbdf4091d2571569b, 0x5c3a9f97bc0c82e5
	.dword 0x0827cd42b3ef3ac7, 0x2fc340c9a52af530
	.dword 0x27cf1b676f21c576, 0xc8676d5d387360ed
	.dword 0xda551e1bc7886b2d, 0x250cc065b62b57a4
	.dword 0xda48bfe6f7e8b361, 0xeaba251247ab6845
	.dword 0xb4bbad567d1012f6, 0x762478d871eae748
	.dword 0xddc6e455e47a6b02, 0x43269cecb23d9516
	.dword 0xecf864c6341b2fd5, 0x4624aafd5cdac6a7
	.dword 0x7a92d64704e37c3d, 0x67214116c41bf46b
	.dword 0x7bc13754f27f9505, 0x0f4718e795dad36e
	.dword 0xf36de99b516aa0bf, 0xc7185e2b08355cb6
	.dword 0xa88daf82491f97c3, 0x10987860528066ef
	.dword 0x76a46f09d71ab077, 0xbcdc3bbb6097b64a
	.dword 0xf352cddcc0cecbcf, 0xf2b7b55f2844a6a1
	.dword 0x1918faa0bae6a617, 0x640006cb6862d3de
	.dword 0x8d6c378cb361cff0, 0xeb4b049461fc649d
	.dword 0xe401fa3e2699b397, 0x147d8c53b30ddb10
	.dword 0xfc0cb4cb253b2a6d, 0x3214c5e26b3b9023
	.dword 0x9b539c16670566b3, 0x5725c3c2aac13ce0
	.dword 0xafcfff64abe73594, 0x4dd236df2d863613
	.dword 0xe81005303f1fdd68, 0xd2a8297685c73e31
	.dword 0x7647e13bae991c36, 0x9a4df55615711175
	.dword 0xfef7d7e878040a7b, 0xff3ae9460955104b
	.dword 0xab9ea2c6559ae629, 0x6c5051c55813abf2

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
