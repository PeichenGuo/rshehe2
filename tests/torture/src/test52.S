// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	mul x15, x23, x23
	sll x13, x13, x13
	remu x19, x23, x25
	addi x9, x0, 1
	sll x9, x9, 63
	addi x11, x0, -1522
	addi x13, x0, 133
	la x4, test_memory-1259
	sllw x26, x23, x9
	addi x5, x0, 1
	addi x6, x0, 1683
	sllw x10, x1, x1
	addi x23, x0, 503
	addi x17, x0, -1414
	addi x30, x17, -131
	addi x12, x0, -234
	mulhu x22, x20, x20
	addi x27, x0, -1
	sw x29, 1531(x4)
	sltu x20, x11, x6
	xor x27, x27, x9
	remw x15, x13, x13
	sub x2, x6, x6
	ori x18, x6, -1856
	addi x14, x0, -1945
	sll x5, x5, 63
	mul x25, x0, x0
	bltu x17, x30, crash_backward
	and x31, x24, x27
	addi x1, x0, -1
	or x16, x29, x9
	add x7, x23, x12
	remuw x8, x1, x13
	xor x1, x1, x5
	la x3, test_memory-411
	lb x28, 619(x3)
	and x29, x25, x1
	sltu x21, x14, x14
	or x24, x5, x5
	remw x22, x24, x8
	addi x10, x0, -1638
	addi x28, x0, 1
	mulh x13, x23, x29
	sll x28, x28, 63
	addi x7, x0, -128
	slt x6, x20, x20
	mulhu x30, x7, x17
	addi x11, x0, -1
	remw x25, x2, x2
	la x15, test_memory+2388
	xor x17, x26, x26
	addi x18, x0, -1016
	addi x14, x0, 788
	addi x21, x0, 1667
	sltu x12, x10, x10
	addi x9, x0, 397
	or x8, x7, x14
	addi x16, x0, -693
	remuw x2, x9, x9
	la x31, test_memory+1856
	xor x11, x11, x28
	lw x20, -1592(x15)
	addi x3, x0, -181
	sraw x23, x18, x21
	lbu x27, -1244(x31)
	and x19, x28, x11
	and x4, x16, x3
	or x26, x19, x28
	bltu x26, x19, crash_forward
	addi x12, x0, 706
	addi x8, x0, 1
	remu x14, x12, x12
	sll x8, x8, 63
	divu x7, x21, x19
	addi x13, x0, 1
	remu x9, x12, x12
	addi x16, x0, -1053
	mulh x28, x11, x11
	sll x13, x13, 63
	la x31, test_memory+676
	addi x19, x0, -1341
	sll x2, x13, x13
	addi x3, x0, -1384
	addi x23, x0, -1
	addi x10, x0, 1413
	addi x17, x0, 1704
	remuw x27, x16, x10
	divuw x26, x14, x14
	divw x5, x4, x4
	add x12, x13, x15
	slt x6, x19, x3
	addi x10, x0, 1946
	la x4, test_memory+1923
	srl x5, x30, x11
	addi x20, x0, 2012
	addi x16, x0, 0
	remuw x14, x11, x7
	xor x23, x23, x8
	rem x21, x26, x26
	addi x2, x0, 0
	and x29, x5, x23
	addi x11, x0, 2017
	addi x22, x0, -1
	or x30, x17, x8
	subw x1, x17, x11
	xor x22, x22, x13
	addi x28, x0, -973
	lwu x15, -184(x31)
	and x27, x10, x28
	addi x2, x0, -39
	bge x30, x29, crash_backward
	sh x16, -1431(x4)
	div x4, x0, x23
	addi x19, x0, 1
	addi x12, x0, 300
	sll x19, x19, 63
	divu x9, x16, x16
	remw x15, x24, x24
	sra x10, x4, x4
	and x25, x1, x22
	addi x16, x0, -1641
	addi x31, x0, 216
	addi x5, x0, -381
	addi x8, x0, -1907
	srl x26, x12, x12
	sllw x18, x20, x20
	addw x27, x2, x16
	addi x3, x0, -1
	addi x15, x0, 1
	and x20, x9, x25
	subw x7, x17, x17
	addi x1, x0, -111
	xor x3, x3, x19
	sll x6, x5, x5
	add x11, x18, x18
	sll x17, x1, x1
	addi x6, x0, 1725
	and x30, x8, x8
	addi x26, x0, -677
	mulhsu x23, x31, x31
	addi x20, x6, 1543
	or x24, x3, x13
	addi x17, x0, 1
	sll x15, x15, 63
	addi x27, x0, -2036
	addi x29, x15, 0
	addi x28, x29, 0
	remu x10, x26, x26
	and x21, x0, x3
	or x14, x21, x19
	sllw x20, x3, x13
	beq x21, x14, crash_backward
	addi x19, x0, -86
	la x6, test_memory+408
	addi x31, x0, 1
	div x26, x14, x14
	addi x28, x19, -1442
	addi x18, x0, -275
	remw x14, x26, x26
	lwu x10, 104(x6)
	la x5, test_memory+936
	sll x31, x31, 63
	xor x29, x3, x3
	addi x12, x0, -1
	addi x3, x0, -323
	xor x12, x12, x15
	add x26, x3, x3
	addi x20, x0, 1215
	div x4, x27, x18
	addi x3, x0, 627
	addi x21, x20, 513
	sll x26, x23, x28
	ld x7, -144(x5)
	sub x13, x3, x3
	addi x6, x0, 343
	sll x29, x0, x26
	addi x30, x0, -1
	xor x30, x30, x31
	sll x17, x17, 63
	and x23, x7, x30
	sllw x19, x5, x20
	and x2, x21, x12
	bltu x21, x20, crash_backward
	or x8, x23, x31
	addi x1, x0, -1
	addi x25, x0, 1
	addi x27, x0, -1210
	addi x14, x0, 1004
	addi x19, x0, 2028
	addi x21, x0, -1991
	sll x25, x25, 63
	bge x8, x23, crash_forward
	sraw x28, x6, x6
	sub x29, x30, x12
	mul x3, x9, x9
	xor x1, x1, x17
	and x5, x5, x5
	mulhu x10, x27, x14
	mulhu x4, x30, x30
	addi x30, x0, 880
	addi x24, x0, 0
	remuw x7, x19, x21
	addi x18, x0, 0
	and x9, x29, x1
	addi x6, x0, 185
	mulhsu x23, x30, x30
	addi x13, x0, -1
	addi x28, x0, -1245
	or x16, x2, x15
	xor x13, x13, x25
	or x11, x27, x17
	bge x16, x2, crash_backward
	remu x31, x6, x28
	la x20, test_memory+661
	addw x3, x9, x18
	lb x8, 192(x20)
	and x26, x5, x13
	beq x9, x11, crash_backward
	or x22, x26, x25
	bltu x22, x26, crash_forward
	divu x6, x15, x15
	addi x22, x0, 1
	sub x7, x22, x22
	addi x27, x0, 1
	addi x16, x24, 0
	slt x28, x6, x6
	addiw x8, x1, 996
	la x26, test_memory+676
	la x12, test_memory-121
	addw x21, x10, x10
	addi x28, x0, 1913
	addi x5, x16, 0
	or x20, x10, x10
	sll x22, x22, 63
	lw x25, -304(x26)
	sll x27, x27, 63
	slt x17, x10, x10
	srai x15, x31, 62
	sllw x7, x20, x20
	addiw x23, x25, -2015
	sll x31, x12, x12
	sb x16, 778(x12)
	mul x10, x24, x24
	addi x20, x0, 190
	addi x30, x0, 1050
	la x18, test_memory-749
	addi x15, x0, -2008
	sraw x24, x15, x15
	sraw x16, x20, x15
	addi x25, x0, -1632
	addi x8, x0, -669
	sd x8, 1117(x18)
	addi x12, x0, 1083
	xor x7, x25, x25
	addi x2, x0, -1
	addw x5, x20, x20
	addi x10, x0, 524
	sraw x31, x12, x12
	sltu x13, x28, x28
	addi x3, x30, 2034
	xor x2, x2, x27
	slt x18, x5, x8
	slt x20, x18, x18
	remuw x20, x8, x8
	mul x15, x10, x10
	addi x14, x0, -67
	and x29, x29, x2
	beq x30, x3, crash_backward
	addi x21, x0, 1
	addi x13, x0, 1
	addi x24, x0, -1989
	sll x21, x21, 63
	srlw x6, x28, x8
	addi x17, x0, -1
	or x19, x19, x27
	slt x1, x14, x14
	blt x29, x19, crash_backward
	addi x16, x0, -1413
	sll x13, x13, 63
	addi x12, x0, -1
	rem x7, x24, x16
	addi x9, x0, -1
	xor x12, x12, x13
	addi x15, x0, -618
	remw x14, x28, x16
	mul x14, x28, x18
	addi x30, x0, -1786
	xor x17, x17, x21
	and x26, x4, x17
	addi x27, x0, 210
	and x31, x8, x12
	la x29, test_memory-902
	addi x24, x0, -490
	srliw x6, x8, 6
	xor x16, x15, x9
	sraw x7, x15, x15
	xor x9, x9, x22
	addi x8, x0, 1430
	sra x25, x21, x5
	mul x19, x15, x15
	or x23, x16, x21
	lwu x2, 1022(x29)
	divuw x18, x4, x4
	mulw x3, x30, x27
	addi x1, x0, -1474
	beq x26, x23, crash_forward
	srl x10, x8, x8
	addi x14, x0, -381
	addi x6, x14, -1360
	addi x15, x0, -122
	or x5, x27, x13
	and x11, x8, x9
	or x4, x25, x22
	la x23, test_memory+2006
	la x29, test_memory-766
	mulhu x17, x1, x1
	sd x9, -1614(x23)
	andi x28, x3, 1531
	lb x26, 1482(x29)
	addi x8, x0, 695
	divuw x3, x6, x9
	addi x18, x0, 1765
	add x30, x15, x3
	blt x14, x6, crash_forward
	beq x31, x5, crash_forward
	addi x19, x0, -754
	addi x25, x0, 170
	mulw x7, x8, x8
	divw x20, x24, x1
	subw x27, x15, x25
	addi x27, x0, -853
	addi x14, x0, 1
	addi x21, x0, -213
	slt x3, x16, x3
	remu x17, x6, x6
	addi x15, x0, -1935
	addi x22, x0, -426
	addi x20, x22, -531
	la x4, test_memory+1878
	la x31, test_memory-712
	mulh x29, x8, x8
	addi x13, x0, 66
	addi x2, x0, 1919
	addi x9, x0, 1023
	bltu x22, x20, crash_backward
	sll x14, x14, 63
	sll x10, x19, x21
	addi x26, x0, 1543
	addi x7, x0, 1179
	addi x25, x0, -1
	sll x28, x27, x13
	addi x6, x0, 1280
	remu x23, x15, x7
	sltu x16, x18, x2
	remuw x8, x6, x6
	lh x1, -1248(x4)
	sd x11, 1336(x31)
	addi x29, x0, -58
	xor x25, x25, x14
	and x24, x16, x25
	addi x11, x0, -718
	la x31, test_memory+2354
	sh x9, -1706(x31)
	or x5, x24, x14
	subw x27, x25, x31
	addi x6, x0, 1
	sll x6, x6, 63
	addi x28, x0, -287
	addi x20, x0, 1116
	addi x1, x0, -1
	addi x21, x20, 1385
	sll x7, x2, x2
	xor x1, x1, x6
	and x23, x21, x1
	addi x18, x0, 1
	add x12, x9, x9
	sll x18, x18, 63
	addi x12, x0, -1797
	addi x3, x0, -1180
	addi x19, x0, -599
	addw x4, x31, x9
	addi x27, x0, 226
	or x8, x2, x6
	addi x16, x0, -1
	addi x22, x0, -1790
	xor x16, x16, x18
	srl x10, x19, x22
	mul x20, x12, x27
	mulh x30, x26, x11
	and x2, x19, x16
	remu x13, x28, x28
	or x15, x2, x18
	bge x15, x2, crash_forward
	or x17, x29, x3
	la x15, test_memory+2622
	addi x12, x0, 1
	bltu x8, x23, crash_backward
	mulw x18, x3, x3
	or x30, x5, x5
	addi x13, x0, 71
	addi x14, x0, 402
	mulw x11, x13, x13
	remu x5, x9, x25
	addi x27, x0, 1
	la x29, test_memory+967
	sll x27, x27, 63
	addi x7, x0, -846
	addi x21, x7, -253
	addw x17, x28, x24
	addi x24, x0, -964
	xor x4, x24, x24
	addi x23, x0, 1737
	sll x12, x12, 63
	addi x1, x0, 1899
	addi x22, x0, -1
	divw x26, x26, x26
	addi x19, x0, -1405
	blt x7, x21, crash_backward
	xor x22, x22, x27
	lbu x16, -1660(x15)
	addi x3, x0, 1503
	or x10, x14, x19
	addi x17, x0, 1094
	bltu x18, x18, crash_forward
	and x9, x1, x22
	addi x5, x1, 493
	sw x1, -3(x29)
	addi x31, x0, -1
	mulw x2, x3, x17
	or x25, x18, x27
	bgeu x9, x25, crash_backward
	and x24, x23, x23
	xor x31, x31, x12
	and x28, x16, x31
	or x20, x28, x12
	bge x20, x28, crash_backward
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x4dcfed71f1af7b33
reg_x1_init:	.dword 0xffffffffffff8008
reg_x2_init:	.dword 0x0000000000000000
reg_x3_init:	.dword 0x0000000000000000
reg_x4_init:	.dword 0xe99ef752435e8b47
reg_x5_init:	.dword 0x1364ae712a0a33af
reg_x6_init:	.dword 0xffffffffffff8000
reg_x7_init:	.dword 0xffffffffffffff81
reg_x8_init:	.dword 0x2afb15aeb48aafad
reg_x9_init:	.dword 0xa526b63fb9eada30
reg_x10_init:	.dword 0xffffffff80000007
reg_x11_init:	.dword 0xd2210f190a554832
reg_x12_init:	.dword 0x6fc7124a124b20a7
reg_x13_init:	.dword 0xffffffffffffffff
reg_x14_init:	.dword 0x5ae06e4fd1a63f78
reg_x15_init:	.dword 0xffffffff80000003
reg_x16_init:	.dword 0xffffffff80000008
reg_x17_init:	.dword 0xffffffffffff8003
reg_x18_init:	.dword 0x13b267afe54d8087
reg_x19_init:	.dword 0x38a82db02a1cd879
reg_x20_init:	.dword 0x0800000000000004
reg_x21_init:	.dword 0x0800000000000009
reg_x22_init:	.dword 0x9e6c714bf34d4581
reg_x23_init:	.dword 0xbe0a14e489387288
reg_x24_init:	.dword 0x34fdc635c4150acb
reg_x25_init:	.dword 0x05db64f67370a4c5
reg_x26_init:	.dword 0x0000000000000000
reg_x27_init:	.dword 0x0000000000000000
reg_x28_init:	.dword 0x2dbad7b4a4ffcfd6
reg_x29_init:	.dword 0x8785cafec1d1537a
reg_x30_init:	.dword 0x3e9ce8994620fd75
reg_x31_init:	.dword 0x6cb4ff508204bfa1

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0xe48e7ccc13188e29
reg_x1_output:	.dword 0x89ea342bc119a39f
reg_x2_output:	.dword 0x6ad41689f9885c05
reg_x3_output:	.dword 0x97c337d80fe55c3c
reg_x4_output:	.dword 0xf040e6f373720335
reg_x5_output:	.dword 0xdad54beaab621b67
reg_x6_output:	.dword 0x04cf24d6f8c83c4b
reg_x7_output:	.dword 0x82fc8c829454b98e
reg_x8_output:	.dword 0x93831b72a55999d9
reg_x9_output:	.dword 0xf5fbbb1155caa55c
reg_x10_output:	.dword 0x5c27fc063ef0bc7e
reg_x11_output:	.dword 0xc59dfc071bd76162
reg_x12_output:	.dword 0xec0fb4a35d754324
reg_x13_output:	.dword 0xd44a3bd05bf9b7f4
reg_x14_output:	.dword 0xcbf8e04935f4fb82
reg_x15_output:	.dword 0x3b336f007945c951
reg_x16_output:	.dword 0x6fdb243031f116e8
reg_x17_output:	.dword 0xb05021cc709f5806
reg_x18_output:	.dword 0x108b8e64cfc3673b
reg_x19_output:	.dword 0xbdf70abb8821f793
reg_x20_output:	.dword 0x2c2fc99973abe83d
reg_x21_output:	.dword 0x71a5949dde8b014e
reg_x22_output:	.dword 0x42903a3383571911
reg_x23_output:	.dword 0xc65093be56537387
reg_x24_output:	.dword 0x1ac658afd3b1e9fe
reg_x25_output:	.dword 0xf7ee9a52e2661eec
reg_x26_output:	.dword 0xa9c5dd2492e84272
reg_x27_output:	.dword 0xd4eea03a8240c62f
reg_x28_output:	.dword 0x9214901f2ab7634a
reg_x29_output:	.dword 0xae44f1eaf71513e5
reg_x30_output:	.dword 0x45edd4b75a0da950
reg_x31_output:	.dword 0x92e39aa045688ab1

// Memory Blocks
	.align 8
test_memory:
	.dword 0x834c3fe0fc857404, 0x5f12bdd9ad00d3a1
	.dword 0x2e24d100aae1349f, 0xd6709409c5dc0ed7
	.dword 0x4dc49fc3dd8ae954, 0x77a7fe88aacb0a6b
	.dword 0x0ffb132d517988d8, 0x2667e6cc733d8390
	.dword 0x6cc7f5edb5032225, 0xca14dcd6042ed5f5
	.dword 0x28e5fbf8ad4ab479, 0xe951a8ed6623bd6d
	.dword 0x29ff8d54f26503a4, 0x6312c4902a100dd1
	.dword 0x0de4ea34f03fec83, 0x28bbeea6f3058524
	.dword 0xcbf7fc45310bfdc7, 0x39064efc54fb1bf8
	.dword 0x76736946fba058fb, 0xb460dce8e40e7811
	.dword 0x6d77bade714d1fc4, 0x5063fd5371976547
	.dword 0x0922afaa0310f169, 0x7c0c8bd6177f78b0
	.dword 0xc7a20994026a3c95, 0x7101c34144ce41fe
	.dword 0xd9746d6a1645695c, 0x2a6cb943927caf24
	.dword 0xbe2027ad75151f7b, 0xaf1f6167b3a8863f
	.dword 0xdfd0eaa972322ce3, 0x66344b3e726b19b4
	.dword 0x69cad9c67274d078, 0xda2f8fdad9249a95
	.dword 0x35b2761e02d16d15, 0xa23ca282893fad48
	.dword 0xb38e404f1fdee8d3, 0x5aabf8a2da87246a
	.dword 0x49602390cecd3c8b, 0x108ebd03db6205f0
	.dword 0x4e81fe09cbb6f798, 0x277e023e38e83e8f
	.dword 0x8dd1da601ea0bbe1, 0x1f7e2869a804a75d
	.dword 0x056fae8ffc25f616, 0x42c66a19b4ff41b8
	.dword 0x6497b3fe11025638, 0xe33fc48d1f14cd66
	.dword 0xdd41accb9c9bcc5f, 0x9d0daf1eb86f1cfd
	.dword 0x20deaa6df6a90db7, 0xf1a655fe6a23cc85
	.dword 0x8314297df34ce5cb, 0x55274c219e153e5b
	.dword 0x0bec96cc3fbed805, 0x80eee87e37ec0258
	.dword 0xd9e291b93c1dd575, 0x0a51c273211d0b31
	.dword 0x44ad7fc3fd920ad1, 0x0dc701848c535620
	.dword 0x410b456542af0abc, 0x5d5d744fb0d9e8c4
	.dword 0x2d2c3818fb57d84b, 0x67f6a2bc310d4945
	.dword 0x5a239dbe197a95c4, 0xcce44f6f65a9d4bb
	.dword 0xda104d203911dba8, 0xc8581c82c53e97d0
	.dword 0xa9d643d31835fbf3, 0xcfdc4777d9628da3
	.dword 0xa17b454223e8b5a1, 0x7e07b06c14c468ef
	.dword 0x6cc5d7079fea1c74, 0x710ea089340b4b6c
	.dword 0x77df2e7e3f8db8f4, 0xd3f503be12010f74
	.dword 0x5eade393bf7324b7, 0xb53e09b053e507ea
	.dword 0x42a87ce41475a6e2, 0x0b4061f287505a57
	.dword 0xff3c2903b75a94ef, 0xc505877416035755
	.dword 0xa9d5391b1efe7bb0, 0xaa0dcf3a57857530
	.dword 0x155c30b5883d5492, 0x2aba2e4d6af7d0c9
	.dword 0x3ad37edc2bd24b26, 0xe9b7eaf4ef1458bd
	.dword 0xceef345f2b2fd6dd, 0x73d9ad27115206c7
	.dword 0xe0414b7406192d13, 0xc28ca23c59c8cb62
	.dword 0xe02a5485cfd24f4e, 0x2ccfa7e385f60fb2
	.dword 0xcb679c459c4c39c6, 0xee7db2594b2cf1a4
	.dword 0x73151f058006f628, 0x7d1be1d6f88b9e53
	.dword 0xed8add46c8bb9696, 0x3f6efb4a4a016ead
	.dword 0x8ce2658fd57c5cf2, 0xa1233848d887aa56
	.dword 0x086aa77fbb19925c, 0xd10ca243196914cc
	.dword 0xcc1d6426017dd2f8, 0x1e356cf6dd92a8cb
	.dword 0x2e8acf8f989cd1f4, 0xf15304296caa25f2
	.dword 0x07e537a143bbd9c9, 0xd491c092444d54a5
	.dword 0x451fc427488b8cc0, 0x16327816eca72435
	.dword 0x65b0a42d10fea9b7, 0x02745d3e56b6073e
	.dword 0xbab83c8b8b41d924, 0xd9f8e1dc98713250
	.dword 0xf0542bc796f4c65a, 0xe27691133db0a0d1
	.dword 0x2efe37186a05090b, 0xc36b147b94960421
	.dword 0x984474c5fe8fa30d, 0xcecbd89e877300ff
	.dword 0x392947b8c6361660, 0x91b804aa8f0b5f2a
	.dword 0xca4f004fcaa05770, 0xba25b962c4d80f4b
	.dword 0xd3fc36704eb51f96, 0xdfafcb54f7da2b12

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
