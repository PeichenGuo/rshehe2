// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	addi x18, x0, 725
	addi x24, x0, -936
	sll x28, x22, x2
	addi x15, x0, 1
	rem x4, x18, x18
	addi x17, x0, -2012
	sll x15, x15, 63
	addi x12, x0, -718
	addi x31, x0, -671
	addi x7, x0, -403
	and x4, x16, x16
	addi x23, x0, -1
	mulhu x3, x16, x4
	addi x14, x0, -1528
	addw x20, x14, x14
	add x5, x17, x31
	sltiu x20, x11, 878
	xor x23, x23, x15
	srl x11, x1, x12
	addi x22, x0, 222
	addi x10, x0, -2038
	addi x16, x0, 731
	and x29, x23, x23
	addi x30, x0, -309
	slt x8, x24, x22
	or x9, x6, x6
	mulw x27, x26, x26
	addi x13, x0, -1081
	slt x6, x10, x10
	srai x21, x20, 59
	or x26, x29, x15
	mul x1, x7, x16
	xor x11, x19, x19
	addi x9, x0, -495
	addi x17, x9, -1535
	addi x14, x0, -604
	addi x19, x0, -859
	addi x18, x0, 446
	addi x28, x18, 1111
	addi x24, x0, 1198
	and x25, x13, x19
	addi x7, x0, 0
	addi x11, x0, 1
	addw x31, x24, x24
	addi x3, x0, -1987
	addi x20, x0, 1
	sll x11, x11, 63
	sraw x2, x12, x30
	divuw x6, x26, x11
	mulw x4, x14, x3
	addi x16, x0, -1
	beq x9, x17, crash_forward
	sll x20, x20, 63
	addi x27, x0, -1249
	addi x21, x0, -1
	xor x16, x16, x11
	and x26, x10, x16
	or x15, x3, x11
	addi x1, x0, -1501
	beq x26, x15, crash_backward
	xor x21, x21, x20
	addi x23, x0, 1584
	sll x5, x27, x1
	and x22, x24, x21
	or x10, x11, x20
	remw x29, x23, x23
	addi x8, x0, 0
	add x28, x8, x8
	addi x4, x0, -857
	addi x27, x0, -734
	addi x18, x0, -1569
	subw x30, x18, x18
	addi x25, x0, -544
	xor x16, x19, x22
	la x23, test_memory-262
	subw x21, x2, x10
	la x3, test_memory+772
	lh x15, 974(x23)
	addi x20, x0, -558
	la x9, test_memory+849
	lb x26, 74(x3)
	divw x6, x24, x24
	divu x1, x25, x25
	sh x14, -637(x9)
	addi x15, x0, 1
	sll x15, x15, 63
	mulh x17, x4, x4
	bltu x30, x30, crash_forward
	la x19, test_memory-57
	addi x24, x0, -1912
	addi x22, x0, 1352
	addi x10, x0, -1299
	addi x28, x0, 1
	addi x21, x0, -1194
	addi x7, x0, -828
	addi x1, x0, 404
	slli x9, x2, 37
	lw x31, 753(x19)
	addi x17, x0, 530
	sraw x5, x27, x20
	slli x14, x26, 26
	sll x28, x28, 63
	addi x12, x0, -327
	div x6, x7, x1
	addi x30, x0, -1
	div x4, x17, x17
	addi x20, x0, 1732
	addi x31, x0, 173
	addi x3, x0, -1495
	divu x26, x22, x21
	addi x1, x0, 1933
	addi x4, x0, 1216
	addi x2, x0, -1
	addi x23, x3, -353
	addi x17, x0, -1283
	beq x3, x23, crash_backward
	sllw x14, x4, x4
	addi x9, x0, -1307
	divu x27, x20, x9
	divu x11, x24, x10
	addi x21, x0, 58
	addi x6, x31, 147
	srl x7, x1, x4
	addi x27, x0, 143
	xor x30, x30, x28
	addi x11, x0, 1359
	addi x29, x0, -784
	addi x10, x0, -483
	rem x13, x12, x29
	xor x2, x2, x15
	xor x22, x17, x17
	addi x20, x0, -2005
	and x16, x27, x30
	addi x23, x0, -2
	mulhu x3, x27, x27
	and x25, x24, x2
	or x8, x31, x15
	la x1, test_memory+635
	addi x19, x0, 197
	lwu x7, -375(x1)
	bltu x8, x25, crash_backward
	or x18, x16, x28
	xor x26, x21, x21
	remuw x5, x19, x19
	remw x24, x10, x23
	sra x14, x11, x20
	addi x21, x29, 0
	addi x29, x21, 0
	remuw x8, x11, x6
	addi x10, x0, -595
	addi x4, x0, -2008
	addi x3, x0, 485
	divu x12, x5, x5
	addi x2, x0, 1924
	divuw x6, x10, x4
	divu x30, x14, x6
	la x25, test_memory+636
	div x1, x14, x28
	bne x21, x29, crash_forward
	addi x13, x0, 1371
	addi x7, x0, 840
	addi x23, x7, 1274
	sra x11, x26, x26
	bltu x23, x7, crash_forward
	addi x5, x0, 1049
	la x20, test_memory-1264
	lw x27, 1936(x20)
	rem x28, x16, x9
	lw x26, -240(x25)
	addi x15, x0, -1820
	addi x9, x0, 589
	addi x31, x0, 298
	mulhu x22, x3, x9
	addi x18, x13, 1447
	addi x17, x0, -1085
	mulhsu x14, x5, x17
	addi x16, x31, 1364
	mulw x19, x2, x15
	or x1, x4, x4
	addi x25, x23, 0
	addi x9, x0, 1604
	addi x3, x0, -777
	divuw x31, x3, x10
	addi x28, x0, -1686
	mulhsu x27, x9, x9
	andi x17, x5, -238
	addi x7, x0, -1572
	addi x29, x0, 1034
	srl x6, x3, x28
	addi x5, x0, 1104
	addi x20, x0, 1
	addi x26, x0, 686
	addi x8, x25, 0
	sub x12, x26, x26
	addi x22, x0, 1789
	sltu x13, x5, x5
	addi x10, x0, 1175
	addi x6, x0, -945
	addi x24, x22, 183
	mulw x21, x7, x10
	addi x28, x0, -471
	and x30, x17, x27
	rem x15, x29, x29
	la x1, test_memory+1675
	la x5, test_memory-268
	sll x3, x28, x28
	mulhu x25, x6, x6
	addi x26, x1, 0
	div x17, x14, x14
	sll x20, x20, 63
	bgeu x22, x24, crash_backward
	addi x14, x0, -510
	addi x31, x26, 0
	lb x12, -1059(x1)
	addi x9, x0, 0
	addi x16, x0, -1
	sh x14, 888(x5)
	addi x13, x0, 0
	addi x11, x0, 1
	la x21, test_memory+2360
	addi x29, x0, -1221
	xor x16, x16, x20
	div x24, x28, x6
	lbu x25, -1967(x21)
	and x23, x22, x16
	addi x27, x0, 349
	or x2, x22, x20
	divw x8, x14, x27
	blt x23, x2, crash_forward
	addi x7, x0, -1379
	sll x11, x11, 63
	bltu x26, x31, crash_backward
	addi x1, x29, -1266
	addi x30, x0, -1192
	mul x17, x7, x30
	addi x4, x0, -1
	xor x4, x4, x11
	beq x29, x1, crash_forward
	and x18, x17, x4
	or x19, x18, x11
	bltu x19, x18, crash_backward
	la x4, test_memory-1750
	addi x11, x0, 1
	addi x15, x0, 933
	sraiw x9, x30, 31
	rem x16, x6, x6
	addi x23, x0, -2000
	srl x14, x29, x29
	bltu x29, x29, crash_backward
	addi x3, x0, 1
	sll x11, x11, 63
	addi x16, x0, -561
	subw x5, x23, x23
	addi x29, x0, 1
	addi x24, x0, 732
	sll x3, x3, 63
	addi x9, x0, 704
	addi x22, x0, -1
	sub x31, x16, x9
	sll x29, x29, 63
	xor x17, x15, x24
	la x19, test_memory-1759
	xor x22, x22, x11
	addi x10, x0, 1
	addi x7, x0, -1
	sll x10, x10, 63
	and x12, x9, x22
	addi x26, x0, -1
	addi x18, x0, -1
	xor x18, x18, x3
	and x2, x20, x18
	xor x7, x7, x29
	and x25, x6, x7
	xor x26, x26, x10
	lbu x13, 2010(x4)
	or x30, x12, x11
	and x6, x20, x26
	or x21, x15, x10
	sd x16, 2015(x19)
	or x8, x31, x29
	bgeu x25, x8, crash_forward
	or x27, x2, x3
	blt x2, x27, crash_forward
	sra x31, x16, x16
	subw x21, x21, x21
	addi x14, x0, 1545
	addi x6, x0, -2041
	la x18, test_memory+1177
	srai x27, x22, 15
	sub x3, x15, x21
	addi x15, x0, 1740
	addi x17, x0, -215
	divu x19, x21, x21
	addi x30, x7, 0
	addi x10, x0, -820
	addi x24, x30, 0
	la x31, test_memory+2141
	addi x3, x0, 1085
	bne x30, x24, crash_backward
	addi x4, x0, 0
	la x23, test_memory-805
	lh x26, -639(x18)
	addi x2, x0, 1010
	mulhsu x16, x10, x10
	addi x13, x0, 0
	addi x1, x0, 0
	addi x20, x0, 0
	addi x21, x3, 168
	addi x9, x14, 1190
	subw x7, x6, x6
	addi x25, x0, 356
	slli x10, x29, 33
	remuw x13, x24, x4
	addi x11, x0, -1896
	addi x5, x0, 390
	mulw x29, x2, x25
	sh x2, 1317(x23)
	bltu x9, x14, crash_backward
	lb x27, -1623(x31)
	add x12, x5, x5
	sllw x22, x16, x21
	addi x16, x0, -1870
	addi x6, x0, -979
	remw x26, x16, x16
	addi x4, x0, 1729
	addi x20, x0, 305
	sll x8, x15, x11
	remuw x19, x6, x6
	sraw x24, x18, x28
	addi x1, x20, 457
	addi x7, x4, 1770
	bltu x1, x20, crash_backward
	mulhsu x28, x17, x17
	lui x1, 626186
	addi x2, x0, 974
	addi x3, x0, -1683
	addi x27, x0, 1790
	xor x22, x3, x3
	addi x8, x0, 1433
	srlw x24, x2, x8
	addi x21, x0, 145
	sub x20, x4, x4
	and x7, x6, x6
	divuw x16, x17, x20
	remuw x17, x16, x16
	addi x15, x0, -880
	addi x30, x0, 1
	addi x4, x22, 0
	addi x28, x0, 742
	sltiu x1, x20, 1204
	sll x2, x23, x1
	rem x29, x2, x4
	addi x20, x0, 1
	addi x5, x0, 628
	addi x25, x0, -91
	remw x24, x19, x26
	mulw x14, x27, x5
	xor x8, x17, x17
	slliw x17, x3, 9
	addw x11, x28, x25
	sub x12, x22, x21
	sraw x23, x21, x15
	addi x25, x0, -1575
	remu x21, x11, x11
	addi x5, x0, 1360
	addi x23, x0, 332
	sll x20, x20, 63
	addi x27, x0, 1
	sub x14, x19, x19
	addw x8, x26, x26
	sltu x29, x16, x16
	la x13, test_memory-461
	addi x12, x0, 0
	addi x31, x4, 0
	andi x21, x26, -1775
	addi x11, x0, 409
	addi x10, x25, 1308
	addi x14, x0, 0
	addw x2, x23, x11
	divuw x18, x3, x3
	srl x17, x25, x5
	addi x22, x0, -1
	remw x28, x7, x24
	addi x29, x0, 123
	sll x30, x30, 63
	ld x9, 1429(x13)
	sll x27, x27, 63
	addi x6, x0, -1
	xor x6, x6, x30
	xor x22, x22, x20
	la x5, test_memory+2623
	and x7, x15, x22
	and x19, x20, x6
	or x26, x19, x30
	addi x2, x0, 1
	blt x12, x14, crash_forward
	remuw x25, x13, x20
	addi x23, x0, 339
	addi x31, x0, 1858
	sraw x4, x23, x23
	remuw x8, x29, x29
	beq x19, x26, crash_backward
	addi x15, x0, -1
	xor x21, x31, x31
	xori x13, x15, -133
	addi x10, x0, 546
	sll x2, x2, 63
	addi x11, x0, 1807
	divw x28, x10, x11
	sh x24, -1903(x5)
	addi x18, x0, -1
	or x16, x10, x20
	xor x15, x15, x27
	remu x11, x6, x10
	mulhsu x25, x30, x29
	divuw x10, x29, x29
	addi x8, x0, 795
	mulhu x29, x16, x4
	xor x18, x18, x2
	addi x5, x0, -446
	bgeu x7, x16, crash_forward
	addi x9, x8, 59
	addi x28, x0, 1193
	addi x7, x0, -2044
	addi x25, x0, -1809
	mul x10, x25, x25
	remw x23, x14, x14
	and x3, x28, x18
	mulh x10, x2, x2
	addi x30, x0, 1479
	mulhu x26, x23, x23
	divuw x19, x5, x30
	addi x21, x0, 1475
	and x24, x8, x15
	slt x6, x21, x21
	addi x4, x0, -1868
	addi x14, x28, 1296
	div x20, x7, x4
	addi x22, x0, 1
	bltu x14, x28, crash_backward
	addi x31, x0, -1624
	or x1, x24, x27
	sll x22, x22, 63
	or x17, x27, x2
	bgeu x24, x1, crash_backward
	addi x11, x0, -1
	xor x11, x11, x22
	and x29, x24, x11
	addi x12, x0, 214
	or x16, x24, x22
	bgeu x29, x16, crash_forward
	div x13, x31, x12
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x87c653f6eaae33a0
reg_x1_init:	.dword 0x0db182c5a52db002
reg_x2_init:	.dword 0xf686caedf82e4b25
reg_x3_init:	.dword 0x0000000000000003
reg_x4_init:	.dword 0xffffffffffffffef
reg_x5_init:	.dword 0x0000000000000005
reg_x6_init:	.dword 0x0000000000000000
reg_x7_init:	.dword 0x0800000000000003
reg_x8_init:	.dword 0x62cedc6882f03148
reg_x9_init:	.dword 0xffffffffffffffff
reg_x10_init:	.dword 0x024b254192817a51
reg_x11_init:	.dword 0x608aa639f128e5b5
reg_x12_init:	.dword 0x0e39b0935fa836d8
reg_x13_init:	.dword 0xffffffffffffff89
reg_x14_init:	.dword 0xffffffff80000004
reg_x15_init:	.dword 0xc8812cb84fc6305f
reg_x16_init:	.dword 0xffffffffffffff81
reg_x17_init:	.dword 0xf018c7dda413aa60
reg_x18_init:	.dword 0x0000000000000000
reg_x19_init:	.dword 0xb8bd24eb1ce5af4b
reg_x20_init:	.dword 0xb676288746eb43b8
reg_x21_init:	.dword 0xc1a205f8d0f1f253
reg_x22_init:	.dword 0x82c617fb683591c7
reg_x23_init:	.dword 0x0000000000000000
reg_x24_init:	.dword 0xfffffffffffffffd
reg_x25_init:	.dword 0x983ca557185847fc
reg_x26_init:	.dword 0xb685cc4698e3bc81
reg_x27_init:	.dword 0x61246110df4a4229
reg_x28_init:	.dword 0xd120c275ac1cd36d
reg_x29_init:	.dword 0xf497c129bdeb37e4
reg_x30_init:	.dword 0x3ec99bfeac538e06
reg_x31_init:	.dword 0xffffffffffffffff

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0xa27a680445caf65a
reg_x1_output:	.dword 0x3723cfe1e92c3d34
reg_x2_output:	.dword 0xf7874ab03d839d94
reg_x3_output:	.dword 0x885baa43521c9ace
reg_x4_output:	.dword 0x35f07acda452c511
reg_x5_output:	.dword 0x82dcf433bf8d0edb
reg_x6_output:	.dword 0xa35a0ab9e7663e67
reg_x7_output:	.dword 0x83e65228e5cde58a
reg_x8_output:	.dword 0x604971a48ab8949e
reg_x9_output:	.dword 0xd55103bbb23df165
reg_x10_output:	.dword 0x01b53d844a110913
reg_x11_output:	.dword 0x91f468bcf9aa2cd7
reg_x12_output:	.dword 0x1889704abc0bfa9f
reg_x13_output:	.dword 0xea14438ca8476fee
reg_x14_output:	.dword 0x80f7fc59ba201af7
reg_x15_output:	.dword 0x0bc04cabf56b3e60
reg_x16_output:	.dword 0xd4f01436e0f71655
reg_x17_output:	.dword 0x3260eb8eabf4f1d3
reg_x18_output:	.dword 0xab8e417e08b69158
reg_x19_output:	.dword 0x381628b5dfa8c458
reg_x20_output:	.dword 0xc6027714f740a128
reg_x21_output:	.dword 0x604b2cfdebd27f38
reg_x22_output:	.dword 0xb88892a2854121dd
reg_x23_output:	.dword 0x7631e232e09dd1f3
reg_x24_output:	.dword 0x86e301425c4f8f20
reg_x25_output:	.dword 0x18ff88e95eee9585
reg_x26_output:	.dword 0x868e7b719ec34313
reg_x27_output:	.dword 0x93fc578a9e637feb
reg_x28_output:	.dword 0x50e10c509b523f6e
reg_x29_output:	.dword 0xa70576b40ad20be4
reg_x30_output:	.dword 0xc3b5d807f570e4ea
reg_x31_output:	.dword 0x7e41eebca63298fc

// Memory Blocks
	.align 8
test_memory:
	.dword 0xd36a5587d9eb3ce1, 0xeac05a9585e007c5
	.dword 0x0c08ef764396b936, 0xf2bc73d9367e5667
	.dword 0x0cc8406378858e72, 0x94a8cc1c3510015b
	.dword 0x77c55e3fa3130c2f, 0x3d0a4785a5fa2c73
	.dword 0xe352e9103db297b8, 0xe9f82ca3f033d81d
	.dword 0x699dd0df5ae12cf1, 0x50ecdd7d53dca6e7
	.dword 0xca0406f22e338974, 0xf1c08de32c3bf746
	.dword 0x6c888e3e8e7965fd, 0xc5688b0a85f15592
	.dword 0x6e939f1f05906207, 0xedaae85f872b8a54
	.dword 0x97e4d240df0785b6, 0x4d9fa592d94bc8c4
	.dword 0x4a8886e21d5e7df7, 0x6ed5a1f595aec18c
	.dword 0x4000f83a4cb9f6e5, 0x4d82f109f2ad9dd2
	.dword 0xf3e6b6397398b86e, 0x2c8d64561e852675
	.dword 0xb04b75736cab6936, 0x11b15e79ebf19b95
	.dword 0x35656a576aab1bbb, 0xffda438184320059
	.dword 0x4bb8a3a7562909b9, 0x03211a7e940ddeeb
	.dword 0x49571822d01421ce, 0x0c1b3453f9a4c8c7
	.dword 0xb7275b8680574b61, 0xe86bebccf77f1735
	.dword 0x0dad2eb7b0bd84c0, 0x2a29d2f542cbb013
	.dword 0xa0ce5f3927773f88, 0xe7d8e1a7cf2ed2d8
	.dword 0xaac1a9e2846e9f49, 0x20c079662e4231d5
	.dword 0x4efc94d4b74e7e69, 0x867d526a6426dbbc
	.dword 0xf1d074a843fa5d48, 0x121ca5f9a98db966
	.dword 0x5fb610e726739fa5, 0x520f2a002ea3a3d0
	.dword 0xab4a9bbe100abc3f, 0xcc17b1da4d9a5666
	.dword 0x09f7f0f0248142bf, 0x3c42886cf757c184
	.dword 0x286d500e28abdbd5, 0x552fd77f85698139
	.dword 0xc0ad05e57b71a7a0, 0xefccb04589f27c4d
	.dword 0xaec6b93817f89e52, 0x263b893bfd24ef85
	.dword 0x4e9d4eae0aa4d713, 0x90664535183b6924
	.dword 0xbf92980d1c8ad926, 0xfdc117b1dc0778b5
	.dword 0x61e242a850535b4a, 0x6866da7745551707
	.dword 0xd018b91612911562, 0x1f2ca85a67ce0a79
	.dword 0x04a9ec238c6f8857, 0xffd3d15d70f8cb77
	.dword 0xc377370c54abe03d, 0x1d5e7bff14a2ad44
	.dword 0xb052d2e6263754b4, 0xf9fc87cf42bd4ef9
	.dword 0x59828d5e4ff4ab90, 0x054b8540b0b398cd
	.dword 0x7f2ab6a623f8c1bc, 0xdffdd6c3a5bac995
	.dword 0xd1a57aadd0d03e5b, 0xdaaa4f134ee8588e
	.dword 0x805a199232cad42f, 0xafc6e0cb5d1daf5a
	.dword 0x33eab354606eb53e, 0xdde6333cd0670048
	.dword 0x58c69ac9f23d1cb2, 0xa07930851a7abcd8
	.dword 0x0d9a63d9651b1300, 0xffd2e0db70db707d
	.dword 0x2af620e2f63fd04d, 0x0e3e272786f603a4
	.dword 0xf215837e19bc610c, 0x3cda32db85b2aaf5
	.dword 0x373cd46537c670eb, 0xe8ebbafe008f06d8
	.dword 0xbbd8f6b2db2a5fef, 0x569e5683b4bc373a
	.dword 0xc4bfea4d7ae705dd, 0x521285e3e523e790
	.dword 0x5cd2819fbc37c7dc, 0x884a41ea42e3971b
	.dword 0xab173e8b8777e457, 0x504f23cb24fda16e
	.dword 0x08718a9ecb941928, 0x5f0a7a7abff3cb2d
	.dword 0x4397be84ef6e07f2, 0x9ef8e13b7ef75716
	.dword 0xa51dacbef8e6fccd, 0xd5682b754096e745
	.dword 0xa090a392847dfb28, 0xaa87b9cb3892aeb3
	.dword 0xbdfd1a4310c734eb, 0x2d808c6c8c03b6ff
	.dword 0xa8057d808cc14fdc, 0xbb4ba6aa5c8b3e70
	.dword 0xa134cf20d96f1d43, 0xcb5297c91f0b723a
	.dword 0x16af0d103c62a7cf, 0x294f3d188abb0900
	.dword 0xf20c9383f450bbba, 0x7d9d1146aa79819a
	.dword 0x7f4cee74f8924d2c, 0x357f9cef2c620a17
	.dword 0xb9a0ce4acaeb60dc, 0x3906dc73bef75305
	.dword 0x119213d86e455afd, 0xcd73af147022d2ef
	.dword 0xec0c27877784d857, 0x468ba335ace63e26
	.dword 0x53360fd4958175b3, 0x106cb405c94636c4

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
