// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	andi x20, x31, 1566
	addi x28, x0, 1
	addi x26, x0, -71
	addi x3, x0, -247
	addi x30, x0, 426
	addi x7, x0, 1806
	addw x25, x26, x7
	addi x15, x0, 1686
	addi x31, x0, -541
	addi x17, x0, 1692
	addi x10, x0, -2042
	sltu x1, x3, x17
	addi x5, x0, 0
	addi x20, x10, -1064
	remw x3, x10, x27
	addi x21, x31, -928
	la x23, test_memory+2044
	la x8, test_memory-1519
	addw x3, x11, x16
	sll x28, x28, 63
	addi x6, x0, -371
	sw x1, 1683(x8)
	addi x4, x6, -1367
	addw x18, x30, x15
	addi x26, x0, 1563
	addi x19, x0, 0
	slliw x30, x2, 14
	addi x3, x0, -1495
	bge x20, x10, crash_backward
	addi x11, x0, 0
	xor x22, x13, x13
	srl x15, x3, x3
	subw x18, x20, x1
	lb x2, -1880(x23)
	addi x16, x0, 1862
	addi x25, x0, 1236
	subw x17, x26, x25
	srl x12, x16, x16
	addi x14, x0, -1
	addi x13, x0, 0
	and x31, x12, x12
	addi x24, x0, 777
	addi x22, x0, 1
	or x25, x29, x29
	addi x8, x0, 1
	sll x22, x22, 63
	div x18, x4, x4
	sll x8, x8, 63
	addi x4, x0, -1663
	addi x9, x24, 75
	addi x1, x0, 956
	addi x2, x0, -1
	xor x14, x14, x28
	blt x5, x19, crash_backward
	blt x11, x13, crash_backward
	addi x15, x0, -1
	addi x10, x0, 1
	addi x7, x1, 70
	sltu x16, x4, x4
	sll x10, x10, 63
	remw x21, x12, x12
	remuw x19, x3, x3
	ori x9, x9, 340
	mulhu x16, x19, x11
	bge x1, x7, crash_forward
	addi x11, x17, 0
	addi x23, x0, -1
	sllw x21, x22, x6
	sub x4, x11, x11
	addi x19, x0, -590
	xor x2, x2, x22
	addi x31, x0, -113
	and x13, x6, x6
	and x27, x12, x14
	xor x23, x23, x10
	xor x15, x15, x8
	addi x18, x0, -27
	addi x1, x0, 1
	and x20, x28, x23
	addi x25, x18, -1772
	or x29, x27, x28
	or x30, x20, x10
	addi x5, x11, 0
	blt x18, x25, crash_backward
	and x6, x24, x2
	addi x25, x0, -1841
	or x3, x6, x22
	bltu x11, x5, crash_forward
	addi x4, x0, -1650
	or x26, x31, x31
	and x12, x15, x15
	bgeu x6, x3, crash_forward
	addi x21, x0, 387
	srl x13, x4, x21
	or x17, x12, x8
	bge x17, x12, crash_forward
	remu x18, x25, x25
	addi x30, x0, 1
	remu x11, x7, x7
	addi x23, x0, 825
	sll x1, x1, 63
	addi x4, x0, -814
	addi x8, x0, -860
	addi x29, x0, 1
	addi x2, x0, 1188
	sll x30, x30, 63
	addi x5, x0, 948
	addi x7, x0, -1
	divu x21, x23, x23
	addi x25, x0, -1
	sub x16, x19, x19
	xor x7, x7, x1
	la x22, test_memory-1090
	mul x15, x2, x2
	addi x20, x0, 1458
	addi x26, x0, 857
	and x9, x24, x7
	sll x29, x29, 63
	xor x6, x4, x20
	xor x25, x25, x30
	srl x17, x26, x26
	addi x3, x0, -1
	sub x12, x8, x5
	remu x14, x22, x22
	addi x19, x0, 1872
	xor x3, x3, x29
	bltu x10, x10, crash_backward
	divuw x2, x7, x7
	and x27, x29, x25
	sub x21, x6, x7
	and x28, x8, x3
	sh x25, 1342(x22)
	or x24, x9, x1
	addi x4, x0, -1088
	or x31, x27, x30
	or x26, x21, x6
	bltu x31, x27, crash_forward
	addi x16, x0, 1
	sll x16, x16, 63
	addi x2, x0, -802
	addi x17, x0, -774
	addi x25, x0, 1781
	addi x22, x0, 851
	mulhu x15, x19, x19
	or x10, x11, x29
	addi x12, x0, 345
	addi x5, x0, 1126
	slt x21, x2, x12
	subw x13, x19, x19
	andi x19, x5, -2009
	andi x18, x28, -369
	addi x15, x0, 131
	addi x20, x0, -1
	addi x24, x0, 1376
	divw x6, x4, x17
	xor x14, x5, x5
	addi x26, x0, -1928
	add x8, x27, x27
	mulhsu x10, x15, x15
	addi x28, x0, -1133
	addi x7, x0, 1726
	addi x29, x0, 347
	mulw x3, x21, x21
	addi x30, x0, 1006
	xor x20, x20, x16
	sraw x27, x26, x30
	srlw x1, x28, x29
	addw x31, x25, x22
	and x23, x19, x20
	or x11, x23, x16
	addi x26, x0, 1480
	blt x0, x0, crash_forward
	la x15, test_memory+2107
	blt x23, x11, crash_backward
	mulhu x9, x24, x7
	addi x5, x0, 1
	mulhsu x18, x13, x3
	addi x27, x0, -150
	mul x7, x23, x23
	sll x5, x5, 63
	lwu x6, -1595(x15)
	srl x16, x30, x4
	addi x4, x0, 1342
	addi x24, x0, 376
	la x14, test_memory+259
	srl x3, x27, x4
	addi x31, x0, -1
	addi x30, x0, 196
	slt x10, x30, x30
	sd x25, 213(x14)
	addw x2, x26, x30
	la x9, test_memory+2366
	sllw x22, x5, x1
	divuw x1, x7, x26
	xor x31, x31, x5
	mulhsu x23, x24, x24
	lh x17, -1952(x9)
	and x19, x16, x31
	addi x2, x8, 0
	sub x22, x16, x16
	remw x17, x8, x8
	addi x29, x0, -1938
	addi x14, x2, 0
	addi x28, x29, -1342
	addi x30, x10, 0
	or x12, x8, x5
	remw x16, x1, x18
	mulhu x13, x12, x6
	addi x17, x0, -769
	addi x22, x0, -1627
	addi x18, x0, -1735
	remu x9, x19, x14
	divw x13, x23, x23
	addi x23, x0, 40
	mulw x16, x17, x17
	la x4, test_memory+1418
	addi x6, x0, 1674
	sd x19, -850(x4)
	la x20, test_memory+958
	addi x7, x30, 0
	addi x21, x0, 1789
	sra x1, x22, x22
	divu x3, x13, x13
	addi x26, x0, -333
	addi x29, x0, 738
	addi x4, x0, 1
	remu x27, x23, x26
	sllw x10, x18, x6
	addi x3, x0, -875
	srlw x17, x29, x29
	divuw x6, x19, x19
	mul x27, x12, x12
	la x31, test_memory+1965
	addi x8, x0, 474
	sltu x25, x21, x8
	slt x22, x7, x7
	sra x15, x6, x6
	mulhsu x28, x30, x30
	addi x2, x0, -880
	addi x23, x0, -1212
	addi x5, x0, -155
	addi x12, x3, -170
	addi x18, x0, -467
	ld x11, 34(x20)
	lbu x26, -1022(x31)
	srl x30, x5, x18
	addi x13, x0, -933
	addi x7, x0, -1226
	div x10, x23, x7
	sraw x16, x2, x13
	sll x4, x4, 63
	addi x1, x0, -1
	mulw x24, x27, x27
	xor x1, x1, x4
	and x9, x12, x1
	or x14, x26, x4
	addi x3, x0, 1429
	addi x21, x0, -1438
	addi x7, x0, 1953
	sra x6, x20, x9
	sub x26, x3, x3
	mulh x24, x23, x23
	mulhu x20, x12, x17
	slli x23, x19, 4
	addi x6, x0, 852
	mulw x3, x9, x9
	blt x25, x25, crash_backward
	divw x12, x21, x21
	la x11, test_memory-1440
	addi x16, x0, -423
	addi x29, x0, -1597
	la x2, test_memory+1748
	rem x12, x5, x25
	blt x9, x14, crash_forward
	mul x21, x26, x26
	addi x27, x0, -616
	sw x26, -796(x2)
	addi x19, x0, -158
	addi x22, x0, -1622
	addi x20, x0, 1
	addi x25, x0, 1
	mul x10, x16, x16
	addi x30, x0, -612
	and x15, x29, x30
	addi x13, x0, 1596
	remw x28, x22, x22
	sll x25, x25, 63
	divu x26, x6, x6
	sll x20, x20, 63
	addi x8, x0, -1
	sh x9, 1836(x11)
	slt x18, x19, x13
	addi x24, x0, -1
	xor x8, x8, x25
	remu x31, x7, x27
	and x17, x1, x8
	xor x24, x24, x20
	or x5, x17, x25
	beq x17, x5, crash_forward
	and x3, x5, x24
	or x23, x3, x20
	beq x3, x23, crash_backward
	add x20, x29, x29
	la x26, test_memory+1774
	addi x22, x0, -212
	addi x5, x0, -1159
	addi x16, x0, -1110
	sb x17, -1197(x26)
	sraiw x18, x17, 27
	divw x20, x16, x16
	sub x15, x5, x5
	remuw x26, x1, x17
	addi x31, x0, 1
	srlw x2, x28, x6
	addi x25, x20, 0
	and x8, x27, x8
	sll x31, x31, 63
	addi x7, x0, 1
	sll x15, x29, x29
	addi x28, x25, 0
	sraw x4, x8, x24
	divu x8, x19, x19
	addi x5, x0, 1
	blt x25, x28, crash_backward
	sll x7, x7, 63
	addi x23, x0, -1
	addi x30, x0, 1039
	slliw x2, x15, 17
	xor x23, x23, x31
	ori x15, x23, 695
	addi x29, x0, -757
	div x13, x12, x31
	sraiw x2, x27, 0
	blt x0, x0, crash_backward
	addi x19, x0, -1352
	addi x25, x0, 1
	sltu x28, x9, x9
	and x3, x20, x23
	or x6, x3, x31
	sll x25, x25, 63
	xori x26, x0, -774
	slt x28, x5, x5
	la x4, test_memory+2344
	sltu x11, x2, x2
	addi x9, x0, 1134
	addi x12, x0, -1
	srl x21, x22, x30
	addi x13, x0, -1
	lhu x8, -1470(x4)
	xor x12, x12, x7
	and x27, x5, x12
	mulh x23, x24, x24
	sub x30, x10, x10
	mulhu x3, x16, x16
	addi x31, x0, 1672
	addi x22, x0, -90
	sraw x4, x22, x22
	addi x26, x0, -1638
	or x17, x9, x9
	addi x21, x26, -1432
	and x11, x31, x31
	addi x8, x0, 1485
	sltiu x9, x11, 436
	addi x24, x0, -1448
	divuw x10, x19, x24
	srl x17, x21, x2
	bgeu x21, x26, crash_backward
	blt x0, x0, crash_forward
	mul x28, x31, x5
	addi x30, x0, -1601
	addi x19, x0, 0
	xor x13, x13, x25
	sll x5, x5, 63
	and x2, x6, x13
	and x26, x6, x14
	sub x17, x7, x21
	divw x1, x29, x29
	addi x11, x0, 171
	addi x3, x0, -218
	addi x18, x0, -1
	la x1, test_memory-615
	xor x18, x18, x5
	lbu x26, 1160(x1)
	la x24, test_memory+2356
	addi x22, x0, 722
	sh x3, -1450(x24)
	sra x6, x8, x8
	div x4, x3, x22
	or x14, x27, x7
	addi x23, x30, -99
	addi x21, x0, 2024
	or x15, x16, x25
	addi x9, x0, 0
	bge x14, x27, crash_forward
	and x20, x0, x18
	srl x14, x5, x5
	mulhu x28, x21, x21
	addi x12, x0, 1111
	addi x13, x0, 82
	addi x25, x0, -1584
	sllw x8, x12, x12
	sraw x26, x13, x13
	addi x27, x25, -1940
	addi x31, x0, -1970
	addi x17, x7, 0
	addi x29, x17, 0
	divuw x15, x10, x10
	addi x4, x0, 270
	mulw x3, x13, x28
	addi x28, x0, 1
	sll x28, x28, 63
	addi x24, x0, -1
	sltu x22, x4, x4
	mulw x10, x11, x31
	or x16, x20, x5
	bge x16, x20, crash_forward
	addi x6, x0, -67
	remu x2, x12, x6
	xor x24, x24, x28
	and x1, x12, x24
	or x14, x26, x28
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x2c1d41e1517bbbe0
reg_x1_init:	.dword 0x0000000000000000
reg_x2_init:	.dword 0xffffffff80000003
reg_x3_init:	.dword 0x952f9c7af283efd0
reg_x4_init:	.dword 0xffffffffffffff88
reg_x5_init:	.dword 0xd2611d0083dbc311
reg_x6_init:	.dword 0x0000000000000002
reg_x7_init:	.dword 0xffffffff80000005
reg_x8_init:	.dword 0x3f7a9df83c570a4e
reg_x9_init:	.dword 0x0000000000000000
reg_x10_init:	.dword 0x74952acef8204895
reg_x11_init:	.dword 0x0000000000000000
reg_x12_init:	.dword 0x74cd389959845ff0
reg_x13_init:	.dword 0xb6bdca5d31451af4
reg_x14_init:	.dword 0x0800000000000009
reg_x15_init:	.dword 0x1145ae7e12ae7067
reg_x16_init:	.dword 0xba21ec2b3e9ce4ca
reg_x17_init:	.dword 0x6655a009cee98c24
reg_x18_init:	.dword 0x458a26dd97e68ffe
reg_x19_init:	.dword 0x460b968dbcd7a152
reg_x20_init:	.dword 0xffffffff80000009
reg_x21_init:	.dword 0xffffffffffffffff
reg_x22_init:	.dword 0x8678b5fb67726569
reg_x23_init:	.dword 0x0000000000000020
reg_x24_init:	.dword 0xa241ba0d93f94838
reg_x25_init:	.dword 0xffffffffffffff81
reg_x26_init:	.dword 0xffffffffffffff89
reg_x27_init:	.dword 0x0800000000000003
reg_x28_init:	.dword 0xbdb68d9ba963c74b
reg_x29_init:	.dword 0xffffffffffffffff
reg_x30_init:	.dword 0x0800000000000003
reg_x31_init:	.dword 0x0000000000000000

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0xc782f2323690f175
reg_x1_output:	.dword 0x90fa2adfe3b81fca
reg_x2_output:	.dword 0xcc47da215d8741bd
reg_x3_output:	.dword 0x034b85a84a4dbe91
reg_x4_output:	.dword 0x0220313e67fe02ed
reg_x5_output:	.dword 0xd147fb0564eb0b52
reg_x6_output:	.dword 0x6895bd6c536afaaf
reg_x7_output:	.dword 0xfc201a6412444ddc
reg_x8_output:	.dword 0x300d1295f7b72b46
reg_x9_output:	.dword 0x76873caaa807861c
reg_x10_output:	.dword 0x81e623e373815ead
reg_x11_output:	.dword 0x833b1a8e7116e5e5
reg_x12_output:	.dword 0x01783427b45bc000
reg_x13_output:	.dword 0x2f3df421cc4aa2f3
reg_x14_output:	.dword 0x1af7d99e37ff271b
reg_x15_output:	.dword 0x9dd31daf18ef652c
reg_x16_output:	.dword 0xeb0d08d425f4fa80
reg_x17_output:	.dword 0x8cf705c8e5c6d529
reg_x18_output:	.dword 0x9bca5ae6dde2cb7d
reg_x19_output:	.dword 0x030908a11fa40ef5
reg_x20_output:	.dword 0x911602ef0bb1108e
reg_x21_output:	.dword 0x3aeea4980e15fd14
reg_x22_output:	.dword 0x6aa826bbe278a1ff
reg_x23_output:	.dword 0x385ce414d32ddfc6
reg_x24_output:	.dword 0x73c98ec0cfb8dcd5
reg_x25_output:	.dword 0x9b6e10976f90848c
reg_x26_output:	.dword 0x7c38e15074128fef
reg_x27_output:	.dword 0x4e77030d51e4f1eb
reg_x28_output:	.dword 0xa94bdd0703e21767
reg_x29_output:	.dword 0x1470a564909b8b6f
reg_x30_output:	.dword 0xa5c5468a12d54a3d
reg_x31_output:	.dword 0x367f7961b334f1f2

// Memory Blocks
	.align 8
test_memory:
	.dword 0xb92f7d70d0401e36, 0x0d6c38b184e0241e
	.dword 0xf816ec8398bd2601, 0xb57de23eb1bba32f
	.dword 0x9c7ec9249ad54d9c, 0x4156c8c4d27d9ffd
	.dword 0x0c9dd60ce23c78f5, 0x707b76a434037439
	.dword 0x7c981d3b15e6e8d4, 0x91437af5c988ebf6
	.dword 0xf9c5d5285b1589f7, 0x696173e3c54c236b
	.dword 0x0a66e53e50b5927e, 0xf530ea34c46afcf7
	.dword 0x96a5bd8ac5521189, 0x89cdd2270c137364
	.dword 0x2ec375b15c9c551f, 0x81e2c58247f04c6f
	.dword 0xd1726720aa7a4a51, 0x86584ae8904fef88
	.dword 0x6403b68796d83b9f, 0xbbe0be72421b64d5
	.dword 0x1f5f8088096d9199, 0x7a01af78af8fc07c
	.dword 0x40069daaad7a79c9, 0x98f4c7b0b70c7e21
	.dword 0x77d83193fd7e97d0, 0x16c78f7b716d90ad
	.dword 0x95447977044724ce, 0xa2c2a37a03902a51
	.dword 0xe0398dca4db52107, 0x2d962f660b0d80ca
	.dword 0x18ae0b3c34827bc2, 0xa652c2217d2711e6
	.dword 0x4878d6e60d575574, 0x9d12cf0744942c46
	.dword 0xa96471c000eec01e, 0x3daa70889f98c064
	.dword 0x5c5f8f54b91ca1f2, 0x6bf83ffc9fc9bdd7
	.dword 0x2e93e3ba3d7c9e3c, 0x49cb56ae286380d6
	.dword 0xf8475cbb86ac2880, 0xf0ffcc3a135b13fa
	.dword 0x7efb3a57d87025de, 0x24b4461d789b4a47
	.dword 0x237fba6eee48c0be, 0x6f906c886a6af56c
	.dword 0xecea4bb968fc52a8, 0xec3d58775609bc49
	.dword 0xcdc77bf9d0cc8873, 0x7dae4f01dc6555b2
	.dword 0xe0c11574659724a1, 0xc7e95df1aca12b72
	.dword 0x10841f9bfe560409, 0xdce4ad963d46a992
	.dword 0x6339b7106a8848b6, 0x75069bd74194bddb
	.dword 0x5fa0f0c74c48cf0f, 0x2d23f48a3ac94b98
	.dword 0x98073c89c7745137, 0xb5b8db0561a797a0
	.dword 0xe93ffaa1db83dcb6, 0x05ce38f4772af092
	.dword 0xf09338d1e0e67e58, 0x78c6c66d74851762
	.dword 0x5ea6ca86a9ef4855, 0x8e6bff40f67c2c14
	.dword 0x4de4304cd11b16b2, 0xb1449994073422c8
	.dword 0x841102850cc3b5e6, 0xa5c351af3fac04f5
	.dword 0x5ff6d354198c4fbf, 0xde761f144ff782f9
	.dword 0x3052bbde3b2d4286, 0x034b26d1c6c199d0
	.dword 0x501408b42503c661, 0x3581ff1b662d5123
	.dword 0xd874b989a32c04f8, 0x84351812b1f5d585
	.dword 0x2aedc82cd032875b, 0x37d05dea68ff72f8
	.dword 0x5eb46ab35cd41e23, 0x0287682bcf9f33b5
	.dword 0x8e8cc4f32d11a7d7, 0x422eca5697f7272c
	.dword 0x9f91bd36b24f5990, 0xaa0159ac9f219549
	.dword 0xd758e8303b8d6dde, 0x4a137c4af0c5a1f8
	.dword 0x22d4c02a5d425ded, 0xbbc3d57aa35424eb
	.dword 0x66c69b80603d08e3, 0x8f99e3453dd3b99a
	.dword 0x69b51650cc776d8c, 0x16f8614ad10f4b8b
	.dword 0xa572e372f828da39, 0x841284d5a16aa2d3
	.dword 0x8e8d38a77ef0b6e4, 0xa9f0662ad0d4b4db
	.dword 0x11b84a0d86e14d98, 0x86402b229187bd67
	.dword 0x4dc388dc43c4350f, 0x2476c6f9f6c363d4
	.dword 0x03069949a268419c, 0x5e9c6365e8ad70a0
	.dword 0x1ad333d0f863204b, 0xe14dc6eb4849d72f
	.dword 0xc9876593eeaf0046, 0x973d4c6d284317cc
	.dword 0x979ee41d312eee7a, 0x02134005a3483ded
	.dword 0x78d9684c30aac779, 0xe436b51a4955febb
	.dword 0x9f77448b127de3a1, 0x260529a71e94bbd0
	.dword 0xfbecaa45bf41e17e, 0xd2908ae080cd6e41
	.dword 0x1a7f52998271326c, 0xf9606efd0813bddf
	.dword 0x07497e4b5e934d80, 0xdd2c984d2c63c8ba
	.dword 0xf95880fac63eaca9, 0x1854158c78d65ee6
	.dword 0x1e4c4b98e05af811, 0xd835937ab5f6b681
	.dword 0x0c40aa168fd003c8, 0x65c2b3ac53f0dbf3

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
