// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	srlw x19, x24, x24
	sub x24, x17, x13
	addiw x15, x12, -1908
	addi x13, x0, 1291
	addi x16, x0, 1
	addi x10, x0, -1875
	remw x26, x0, x28
	addi x1, x0, -1076
	addi x19, x0, 96
	addi x31, x0, -720
	addi x2, x0, 1053
	addw x21, x28, x11
	addi x12, x0, -1398
	or x24, x31, x31
	mulw x23, x13, x13
	addi x7, x1, -274
	addi x20, x0, 1411
	la x5, test_memory+913
	srlw x26, x5, x5
	ld x8, -897(x5)
	addi x9, x12, -480
	addi x8, x0, 1
	divuw x22, x2, x2
	addi x27, x0, 103
	remu x17, x15, x15
	mulh x23, x2, x2
	addi x25, x0, 74
	add x15, x26, x7
	divu x18, x10, x10
	srl x29, x27, x25
	addi x11, x31, -1672
	sll x16, x16, 63
	xor x13, x10, x6
	bge x11, x31, crash_backward
	addi x6, x0, -1
	xor x6, x6, x16
	rem x28, x19, x20
	addi x20, x0, 48
	addi x15, x0, -469
	sll x9, x28, x28
	mulhu x29, x20, x15
	addi x11, x0, 150
	addiw x21, x10, -2008
	la x4, test_memory-423
	addi x13, x9, 795
	bge x7, x1, crash_forward
	addi x13, x0, 1
	srli x15, x13, 44
	or x28, x8, x23
	addw x18, x26, x26
	sll x13, x13, 63
	srl x2, x6, x4
	sll x8, x8, 63
	addi x26, x0, -1
	remuw x31, x30, x30
	addi x21, x0, -1
	xor x26, x26, x8
	la x12, test_memory-704
	addi x23, x0, -1036
	addi x28, x0, -1251
	mulh x22, x6, x15
	addi x1, x0, 1639
	and x14, x9, x6
	xor x21, x21, x13
	lwu x27, 1352(x12)
	lhu x30, 987(x4)
	mul x25, x11, x11
	and x7, x0, x21
	slt x19, x19, x27
	addi x17, x0, 192
	addi x22, x0, 1
	or x3, x14, x16
	sll x22, x22, 63
	addi x29, x0, -1060
	and x5, x23, x26
	addi x19, x0, 1661
	remw x10, x23, x17
	addi x31, x0, -1
	xor x31, x31, x22
	addi x11, x0, -715
	or x20, x7, x13
	la x27, test_memory-1273
	or x24, x29, x8
	sub x15, x28, x1
	sd x26, 2033(x27)
	addi x4, x0, -1990
	addi x12, x4, -1959
	beq x4, x12, crash_backward
	addi x9, x29, -37
	remw x30, x19, x11
	bgeu x9, x29, crash_backward
	and x18, x7, x31
	or x2, x18, x22
	la x13, test_memory+2783
	rem x3, x1, x31
	la x21, test_memory-833
	xor x23, x7, x7
	addi x27, x0, 1122
	addi x6, x27, 43
	addi x26, x0, 377
	addi x5, x0, 149
	addi x19, x0, -738
	sraw x8, x26, x5
	ld x30, 865(x21)
	addi x20, x19, -1065
	la x16, test_memory+377
	addi x8, x0, -1689
	lw x12, -1775(x13)
	addi x15, x0, 1
	addi x5, x0, 173
	addi x28, x0, 1
	lwu x11, 371(x16)
	mulh x26, x8, x5
	sll x28, x28, 63
	addi x9, x0, -1
	xor x9, x9, x28
	sltu x21, x2, x2
	and x14, x23, x9
	addi x24, x0, -1403
	addi x2, x0, -1442
	remu x6, x2, x2
	sll x15, x15, 63
	addi x18, x0, 1
	addi x25, x0, -1
	or x1, x7, x28
	addi x6, x0, 150
	sll x27, x1, x14
	mulw x8, x30, x26
	addi x3, x0, -1504
	rem x30, x13, x13
	addi x7, x0, -1051
	mulh x23, x24, x3
	addi x29, x0, 308
	addi x21, x0, -549
	sllw x10, x7, x29
	addi x11, x0, -323
	div x16, x21, x21
	addi x5, x11, -1546
	addi x26, x0, -1818
	beq x14, x1, crash_backward
	xor x25, x25, x15
	blt x11, x5, crash_backward
	addi x19, x0, -1975
	addi x31, x0, -974
	addi x30, x0, -720
	sllw x20, x19, x31
	sll x18, x18, 63
	addi x12, x0, -1
	srlw x1, x30, x30
	and x4, x9, x25
	or x17, x14, x15
	bltu x17, x4, crash_backward
	xor x12, x12, x18
	sub x2, x6, x26
	and x13, x4, x12
	or x22, x22, x18
	subw x19, x20, x20
	sltu x14, x7, x26
	and x11, x20, x20
	addi x8, x0, 1
	addi x16, x0, 1298
	addi x7, x0, -1183
	sltu x19, x10, x25
	addw x11, x29, x12
	remuw x17, x28, x29
	addw x31, x20, x20
	addi x25, x0, 1381
	sra x5, x7, x9
	subw x20, x7, x7
	rem x6, x24, x25
	bne x10, x10, crash_forward
	remw x9, x8, x8
	remuw x15, x6, x9
	addi x27, x0, 0
	remu x1, x22, x22
	addi x19, x0, 556
	la x10, test_memory+952
	rem x3, x13, x0
	la x17, test_memory+1163
	addi x30, x0, 1073
	divuw x4, x30, x30
	addi x13, x0, 1635
	la x11, test_memory+1044
	mulhu x6, x19, x19
	sll x8, x8, 63
	addi x29, x0, -1
	la x1, test_memory+1344
	xor x29, x29, x8
	sub x22, x11, x2
	la x14, test_memory+869
	addi x5, x0, 0
	and x26, x13, x29
	addi x2, x25, 62
	bltu x2, x25, crash_backward
	lw x9, -187(x17)
	addi x28, x0, 436
	sw x0, -276(x10)
	sh x3, -817(x14)
	mulhu x23, x30, x30
	addi x6, x0, -991
	addw x22, x11, x11
	mulhu x15, x13, x13
	mul x20, x14, x9
	lb x3, -979(x1)
	blt x27, x5, crash_forward
	or x21, x15, x8
	srlw x24, x16, x28
	mulhsu x14, x8, x18
	addi x29, x0, -501
	la x30, test_memory+472
	addi x24, x0, 361
	sub x8, x29, x29
	sllw x10, x27, x8
	sh x12, -66(x11)
	mul x15, x21, x21
	lw x22, 228(x30)
	addi x4, x0, 814
	addi x23, x0, 1
	addi x13, x0, 1
	sll x13, x13, 63
	addi x7, x0, 821
	addi x14, x0, -1
	sll x23, x23, 63
	la x30, test_memory+455
	addw x9, x0, x0
	addi x16, x0, 217
	sltu x26, x24, x24
	or x31, x7, x7
	sltiu x8, x8, 1322
	addi x22, x0, 1200
	addi x21, x0, -891
	ld x11, 1(x30)
	xor x14, x14, x13
	remuw x10, x22, x22
	addi x17, x0, 1
	addi x25, x0, -1672
	addi x22, x0, -1939
	slt x31, x0, x18
	mulhsu x30, x2, x2
	addi x28, x0, -1
	sub x10, x22, x22
	or x5, x21, x21
	and x27, x7, x14
	addi x18, x0, -875
	or x1, x6, x13
	mulh x2, x6, x25
	la x9, test_memory-330
	lhu x11, 960(x9)
	sll x17, x17, 63
	addi x2, x0, 1342
	xor x28, x28, x23
	addi x22, x0, -1694
	addi x31, x0, 0
	addi x5, x0, 1
	sraw x24, x2, x22
	srlw x10, x29, x16
	sub x12, x4, x18
	addi x19, x16, 1245
	bgeu x16, x19, crash_backward
	addi x6, x0, 0
	sll x5, x5, 63
	and x20, x10, x28
	or x3, x20, x23
	addi x7, x0, -1
	addi x29, x0, 0
	addi x15, x0, 0
	xor x7, x7, x17
	and x26, x4, x7
	addi x25, x0, -1
	or x8, x26, x17
	divuw x21, x12, x12
	xor x25, x25, x5
	and x11, x25, x25
	or x9, x24, x5
	beq x11, x9, crash_backward
	slti x30, x10, 678
	mulhu x16, x24, x9
	rem x27, x16, x27
	sraiw x22, x31, 4
	addi x17, x0, 148
	la x6, test_memory-1291
	lbu x11, 1513(x6)
	add x21, x28, x24
	la x4, test_memory+2352
	mulh x3, x19, x19
	addi x13, x0, 1
	divuw x10, x15, x26
	addi x7, x0, 1472
	sll x13, x13, 63
	sh x10, -1368(x4)
	la x19, test_memory-125
	la x30, test_memory-625
	addi x29, x0, -752
	addi x9, x0, 1109
	addi x26, x0, -1
	addi x23, x0, -1935
	divu x31, x29, x29
	addi x15, x0, -829
	xor x26, x26, x13
	remw x12, x17, x7
	bne x0, x0, crash_forward
	sw x14, 721(x30)
	and x2, x15, x26
	addi x12, x0, -503
	div x24, x15, x15
	xor x27, x12, x12
	la x8, test_memory-663
	addi x14, x0, -154
	addi x31, x23, 0
	addi x29, x0, -745
	addi x10, x0, -1238
	sra x3, x29, x29
	srlw x7, x30, x9
	srli x22, x28, 14
	or x5, x2, x13
	lbu x25, 225(x19)
	beq x2, x5, crash_forward
	mul x20, x14, x14
	addi x16, x0, -1550
	rem x17, x10, x10
	addi x6, x0, 1558
	mulh x28, x9, x23
	addi x21, x31, 0
	mul x1, x10, x10
	lbu x18, 1359(x8)
	divu x11, x16, x6
	or x20, x15, x4
	bne x31, x21, crash_backward
	addi x13, x0, 852
	addi x8, x0, -604
	divw x4, x8, x21
	addi x25, x0, 2021
	la x5, test_memory+2258
	addi x17, x0, 710
	addi x24, x0, -966
	slliw x22, x29, 2
	mulh x6, x17, x15
	addi x26, x0, -1948
	add x19, x8, x8
	addi x2, x17, 0
	addi x9, x0, 1430
	addi x10, x0, 1667
	sllw x30, x13, x24
	divuw x23, x21, x21
	addi x28, x9, 1904
	addi x27, x0, 1
	mulhsu x3, x25, x17
	addi x7, x0, 693
	addi x18, x0, -684
	lw x29, -1666(x5)
	addi x1, x2, 0
	bne x2, x1, crash_backward
	mulhu x31, x10, x10
	addi x1, x0, 1525
	addi x29, x0, 1055
	sll x27, x27, 63
	sraw x20, x20, x20
	addi x11, x0, -1
	subw x4, x4, x3
	slli x8, x12, 60
	addi x30, x0, 1546
	mulh x16, x10, x7
	addi x2, x0, -1545
	addi x10, x0, 34
	addi x3, x0, 922
	addi x9, x0, 1
	sllw x16, x10, x10
	srlw x19, x17, x21
	addi x24, x0, 1953
	addi x23, x0, 796
	mulhu x15, x26, x18
	sraw x6, x1, x24
	sll x9, x9, 63
	addi x31, x0, 1
	div x5, x3, x23
	sra x17, x29, x2
	addi x21, x0, -605
	divw x4, x23, x23
	xor x11, x11, x27
	and x14, x20, x11
	sll x31, x31, 63
	addi x8, x0, -1
	divu x28, x30, x21
	or x12, x27, x27
	blt x14, x12, crash_backward
	addi x22, x0, -1
	xor x8, x8, x31
	xor x22, x22, x9
	and x25, x9, x22
	addi x26, x0, -523
	addi x11, x0, 900
	and x20, x19, x8
	addi x6, x0, 2033
	addi x15, x0, 1357
	or x7, x20, x31
	slt x5, x15, x15
	la x10, test_memory+2732
	or x13, x28, x9
	addi x2, x0, 1
	addi x30, x0, 92
	la x21, test_memory+1575
	sd x5, -1423(x21)
	addi x1, x0, 775
	add x4, x11, x6
	addi x3, x0, -1561
	addi x21, x0, 564
	sll x2, x2, 63
	sll x17, x23, x23
	divw x12, x26, x3
	sra x6, x7, x20
	addi x8, x0, -1713
	addi x24, x0, 1816
	slt x19, x30, x24
	addi x7, x21, 1022
	addi x29, x0, -1
	mulh x31, x8, x8
	xor x29, x29, x2
	addi x23, x5, 0
	addi x4, x0, 0
	addi x28, x0, 0
	addi x27, x0, 0
	bne x28, x27, crash_backward
	addi x20, x23, 0
	bltu x23, x20, crash_forward
	addi x3, x0, 0
	and x15, x8, x29
	lhu x16, -1806(x10)
	or x5, x15, x2
	divw x11, x8, x8
	addi x18, x0, 1170
	sltu x14, x1, x18
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x09e462f7a69e68d6
reg_x1_init:	.dword 0x0800000000000004
reg_x2_init:	.dword 0xffffffff80000001
reg_x3_init:	.dword 0x0800000000000004
reg_x4_init:	.dword 0x0800000000000007
reg_x5_init:	.dword 0x908892adb43b642d
reg_x6_init:	.dword 0x0000000000000004
reg_x7_init:	.dword 0xffffffffffffff81
reg_x8_init:	.dword 0x0800000000000009
reg_x9_init:	.dword 0xce63abd6a3a2670a
reg_x10_init:	.dword 0x99db91a1fbcf2385
reg_x11_init:	.dword 0x0000000000000006
reg_x12_init:	.dword 0xffffffff80000008
reg_x13_init:	.dword 0xffffffffffffff80
reg_x14_init:	.dword 0xffffffffffffffff
reg_x15_init:	.dword 0xffffffff80000004
reg_x16_init:	.dword 0xffffffffffffffdf
reg_x17_init:	.dword 0xffffffffffff8001
reg_x18_init:	.dword 0x8267689daed5ffdf
reg_x19_init:	.dword 0x0800000000000000
reg_x20_init:	.dword 0x780f609745c8f3ea
reg_x21_init:	.dword 0x167b42c6c9d9b561
reg_x22_init:	.dword 0xae5c7113e6c695ae
reg_x23_init:	.dword 0x0000000000000000
reg_x24_init:	.dword 0x9c158bf3daf0bf41
reg_x25_init:	.dword 0xffffffffffffffff
reg_x26_init:	.dword 0x0000000000000000
reg_x27_init:	.dword 0xffffffffffffff85
reg_x28_init:	.dword 0xffffffffffff8004
reg_x29_init:	.dword 0xffffffffffff8009
reg_x30_init:	.dword 0xd08f665ca32215aa
reg_x31_init:	.dword 0x0000000000000000

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x5fd52d0a06d05b63
reg_x1_output:	.dword 0xf1d9098cc0de66a8
reg_x2_output:	.dword 0x10542828af6a295b
reg_x3_output:	.dword 0x4f470c281ee6873a
reg_x4_output:	.dword 0x53db1ce3da2d4741
reg_x5_output:	.dword 0x6e5f777f810d4bce
reg_x6_output:	.dword 0xbeb824b0196d1252
reg_x7_output:	.dword 0x4280d9cb9969e430
reg_x8_output:	.dword 0xc52531d056679eb2
reg_x9_output:	.dword 0x6b35b1f1fe156e49
reg_x10_output:	.dword 0xab80c6e9a2cad96b
reg_x11_output:	.dword 0xda238337dd9a11c8
reg_x12_output:	.dword 0xdfa213d73edb46b5
reg_x13_output:	.dword 0x9f2af04131c5b1fe
reg_x14_output:	.dword 0x9e918bb9b251e077
reg_x15_output:	.dword 0x6e7a1135dedb5a09
reg_x16_output:	.dword 0x8cec4853635ad90e
reg_x17_output:	.dword 0x52b179426f2cc734
reg_x18_output:	.dword 0xd5c9ce94bd77464c
reg_x19_output:	.dword 0x1a4f9f43c7d7b59d
reg_x20_output:	.dword 0x11610874c59ff8c2
reg_x21_output:	.dword 0x229d9dbfd0f8d318
reg_x22_output:	.dword 0x4b2288047a280342
reg_x23_output:	.dword 0x16937e1544607c53
reg_x24_output:	.dword 0xfbcb67bee7c1b69f
reg_x25_output:	.dword 0x6cd982f4b7f3a83a
reg_x26_output:	.dword 0x40555c25c9f115b6
reg_x27_output:	.dword 0xf86f261036a5a59d
reg_x28_output:	.dword 0x67ddca8a786305b1
reg_x29_output:	.dword 0xc2d7bd11ea9d8f0f
reg_x30_output:	.dword 0x99e6f92aec50be8a
reg_x31_output:	.dword 0xe037f9d036e4990f

// Memory Blocks
	.align 8
test_memory:
	.dword 0xa0f3ac81b58b3fce, 0xacceb9bd45289e6d
	.dword 0x34aec5d9ae42cda3, 0x4ae6d8a23ef08ee6
	.dword 0xa7d5b7244b5aba0c, 0xa006fa8dcf56a411
	.dword 0xea35e00c3d59fe6a, 0x02ff8109ed36807f
	.dword 0xfb7a2847280d6945, 0x49c61f917bfb9d1c
	.dword 0x69876b2dfcf8644c, 0xa111c33ddd1ea8db
	.dword 0x49fb888fbafd969a, 0x37a0c1c6cc26be92
	.dword 0x634c2ec33c78e73a, 0x273e83a8aced9522
	.dword 0x5c3fb1fc5898a3ed, 0x753d1da40e340dda
	.dword 0xc94b84dff55bd02a, 0x866a8d6a6b86c51c
	.dword 0xa409265a0977e065, 0xeed08d91f7488941
	.dword 0x0aab98aec8c86594, 0x470934d252b2dbb9
	.dword 0x516cb5cddf0f6cee, 0x46e1d46ce3fae077
	.dword 0x478af4ec4bf597f5, 0x22a8c9e9e4cb5f8b
	.dword 0xb9e5755004a530b6, 0x551a3806232abd0f
	.dword 0x6fcd626b534bbe4f, 0x16aadae9beee0b47
	.dword 0x2881052b2781ddb2, 0xb32f6ba04c489b04
	.dword 0x22361690545162a7, 0x5bd246c2b319ae48
	.dword 0xe3de277e7d8e0517, 0x94304a75c890312f
	.dword 0xea2931d526b51e86, 0xb9911f9707d69d0c
	.dword 0x53f7a6bda5cd3be1, 0xa1be623364f769d2
	.dword 0x2bae8e4865068779, 0xdf405d3b0d4cb1b5
	.dword 0xb6f58c31da694f4f, 0xc1fe4d77f8d3eb10
	.dword 0xa68fde0a6df02b91, 0xc8ab5fbb91e8dc88
	.dword 0xc17ea676703f8964, 0x7848de58eb792f72
	.dword 0xfaac19d08f049de4, 0xb69941d722f44471
	.dword 0xdc445ff96c220568, 0x09e718dfa9512e63
	.dword 0x00da3f663270930a, 0xef3dfb7f6fbef77e
	.dword 0x6dc2e57f0a3f1466, 0xaf62fd88e73194b5
	.dword 0x1cf5602801240da0, 0x4dbd545998402b60
	.dword 0xc46f9c9f7060b1ac, 0xe23723c4e8ef8d1b
	.dword 0xe6ebff87cb449ac9, 0xa329a644aa4e0ded
	.dword 0xc2cfea4567f6074d, 0x45e72476de7418ac
	.dword 0xa9ecc18ab0fa9ea8, 0x0ea86fcc12cf25a0
	.dword 0x64324931e91902a2, 0xc2cad478d0d2f767
	.dword 0x420a694b75ebb0e7, 0xbda6b6b352874217
	.dword 0x8e03b0777401f8c4, 0x28164f17872620a9
	.dword 0xd1f1277621f40933, 0xf8473a6fd861fc94
	.dword 0x66fb49fdb29b5b14, 0x11e8d094412fcbb8
	.dword 0xa38738cd11f0fbbd, 0xf97476ad7d5cc87d
	.dword 0x9a967900a0277bb4, 0xdf6c60a22405083c
	.dword 0x4792d4a763ae85ba, 0xd54075cac07293dd
	.dword 0x849f3090812a620c, 0x3c504ce9bb42e6c0
	.dword 0xb1bf6b6b3849e9e4, 0x9b7c73598b2af7e0
	.dword 0x3db69a104a09af45, 0x20287387ff903136
	.dword 0x9f9c3518a09b5cf8, 0xf7b24ea1f9aef95b
	.dword 0xe71e0bb6af1492d1, 0x2d7b5d8ee96db370
	.dword 0x126e0fc22778c236, 0xcae9cd1e5b855941
	.dword 0x61384f10fce5cee1, 0x09892980b59713a8
	.dword 0x04eeae0ad5e377e4, 0x9ee3acfc6458752f
	.dword 0xcd7d377e0451cced, 0x9d1545d7a6763af9
	.dword 0xcf5315af3d7333cb, 0x5db4879e4e67b7e1
	.dword 0xd9d988b0d952c230, 0x2dbcfb813c6b4de3
	.dword 0xdd336df98d8fefb8, 0x6be9841a828699ba
	.dword 0xd8b52d31e0a4e42a, 0xe6a4c85b94eb34cb
	.dword 0x722e1e4df84ce5fc, 0x1ea0d9be33cb3141
	.dword 0x1619bcdcac04ad1c, 0xb68689bcdeb6b478
	.dword 0x3b603ca1b3f69ded, 0x8a4022863f4e539e
	.dword 0xafb353627141308f, 0x606a76ed97ac1697
	.dword 0x550d4bfdb6a60863, 0xd1b27da48a9f4521
	.dword 0x72a5b6c37c947fce, 0x3b94ebaa96f56239
	.dword 0x3d104affe16aac3c, 0x715882020dccf9bc
	.dword 0xe76fcdd7daf41e67, 0x667302a3bc952450
	.dword 0xe3f01259b0dde2d8, 0x7c1400b6b026e584

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
